var tsconfig_1 = require("../../tsconfig/tsconfig");
var fsUtil_1 = require("../../utils/fsUtil");
var path = require("path");
var fs = require("fs");
var astUtils_1 = require("../fixmyts/astUtils");
function getDependencies(projectFile, program) {
    var links = [];
    var projectDir = projectFile.projectFileDirectory;
    for (var _i = 0, _a = program.getSourceFiles(); _i < _a.length; _i++) {
        var file = _a[_i];
        var filePath = file.fileName;
        var dir = path.dirname(filePath);
        var targets = astUtils_1.getSourceFileImports(file).filter(function (fileReference) {
            return tsconfig_1.pathIsRelative(fileReference);
        }).map(function (fileReference) {
            var file = path.resolve(dir, fileReference + ".ts");
            if (!fs.existsSync(file)) {
                file = path.resolve(dir, fileReference + ".d.ts");
            }
            return file;
        });
        for (var _b = 0; _b < targets.length; _b++) {
            var target = targets[_b];
            var targetPath = fsUtil_1.consistentPath(path.relative(projectDir, fsUtil_1.consistentPath(target)));
            var sourcePath = fsUtil_1.consistentPath(path.relative(projectDir, filePath));
            links.push({
                sourcePath: sourcePath,
                targetPath: targetPath
            });
        }
    }
    return links;
}
exports["default"] = getDependencies;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9hdG9tLXR5cGVzY3JpcHQvZGlzdC9tYWluL2xhbmcvbW9kdWxlcy9wcm9ncmFtRGVwZW5kZW5jaWVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBQ3BELElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0FBQzdDLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzQixJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdkIsSUFBSSxVQUFVLEdBQUcsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFDaEQsU0FBUyxlQUFlLENBQUMsV0FBVyxFQUFFLE9BQU8sRUFBRTtBQUMzQyxRQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7QUFDZixRQUFJLFVBQVUsR0FBRyxXQUFXLENBQUMsb0JBQW9CLENBQUM7QUFDbEQsU0FBSyxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLE9BQU8sQ0FBQyxjQUFjLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRTtBQUNsRSxZQUFJLElBQUksR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDbEIsWUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztBQUM3QixZQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2pDLFlBQUksT0FBTyxHQUFHLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsQ0FDOUMsTUFBTSxDQUFDLFVBQVUsYUFBYSxFQUFFO0FBQUUsbUJBQU8sVUFBVSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUFFLENBQUMsQ0FDckYsR0FBRyxDQUFDLFVBQVUsYUFBYSxFQUFFO0FBQzlCLGdCQUFJLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxhQUFhLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFDcEQsZ0JBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFO0FBQ3RCLG9CQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsYUFBYSxHQUFHLE9BQU8sQ0FBQyxDQUFDO2FBQ3JEO0FBQ0QsbUJBQU8sSUFBSSxDQUFDO1NBQ2YsQ0FBQyxDQUFDO0FBQ0gsYUFBSyxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUU7QUFDeEMsZ0JBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN6QixnQkFBSSxVQUFVLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRyxnQkFBSSxVQUFVLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQzlFLGlCQUFLLENBQUMsSUFBSSxDQUFDO0FBQ1AsMEJBQVUsRUFBRSxVQUFVO0FBQ3RCLDBCQUFVLEVBQUUsVUFBVTthQUN6QixDQUFDLENBQUM7U0FDTjtLQUNKO0FBQ0QsV0FBTyxLQUFLLENBQUM7Q0FDaEI7QUFDRCxPQUFPLFdBQVEsR0FBRyxlQUFlLENBQUMiLCJmaWxlIjoiL1VzZXJzL2FuZHJld2pvbmVzLy5hdG9tL3BhY2thZ2VzL2F0b20tdHlwZXNjcmlwdC9kaXN0L21haW4vbGFuZy9tb2R1bGVzL3Byb2dyYW1EZXBlbmRlbmNpZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdHNjb25maWdfMSA9IHJlcXVpcmUoXCIuLi8uLi90c2NvbmZpZy90c2NvbmZpZ1wiKTtcbnZhciBmc1V0aWxfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9mc1V0aWxcIik7XG52YXIgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xudmFyIGZzID0gcmVxdWlyZShcImZzXCIpO1xudmFyIGFzdFV0aWxzXzEgPSByZXF1aXJlKFwiLi4vZml4bXl0cy9hc3RVdGlsc1wiKTtcbmZ1bmN0aW9uIGdldERlcGVuZGVuY2llcyhwcm9qZWN0RmlsZSwgcHJvZ3JhbSkge1xuICAgIHZhciBsaW5rcyA9IFtdO1xuICAgIHZhciBwcm9qZWN0RGlyID0gcHJvamVjdEZpbGUucHJvamVjdEZpbGVEaXJlY3Rvcnk7XG4gICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IHByb2dyYW0uZ2V0U291cmNlRmlsZXMoKTsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGZpbGUgPSBfYVtfaV07XG4gICAgICAgIHZhciBmaWxlUGF0aCA9IGZpbGUuZmlsZU5hbWU7XG4gICAgICAgIHZhciBkaXIgPSBwYXRoLmRpcm5hbWUoZmlsZVBhdGgpO1xuICAgICAgICB2YXIgdGFyZ2V0cyA9IGFzdFV0aWxzXzEuZ2V0U291cmNlRmlsZUltcG9ydHMoZmlsZSlcbiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGZpbGVSZWZlcmVuY2UpIHsgcmV0dXJuIHRzY29uZmlnXzEucGF0aElzUmVsYXRpdmUoZmlsZVJlZmVyZW5jZSk7IH0pXG4gICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChmaWxlUmVmZXJlbmNlKSB7XG4gICAgICAgICAgICB2YXIgZmlsZSA9IHBhdGgucmVzb2x2ZShkaXIsIGZpbGVSZWZlcmVuY2UgKyAnLnRzJyk7XG4gICAgICAgICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoZmlsZSkpIHtcbiAgICAgICAgICAgICAgICBmaWxlID0gcGF0aC5yZXNvbHZlKGRpciwgZmlsZVJlZmVyZW5jZSArICcuZC50cycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZpbGU7XG4gICAgICAgIH0pO1xuICAgICAgICBmb3IgKHZhciBfYiA9IDA7IF9iIDwgdGFyZ2V0cy5sZW5ndGg7IF9iKyspIHtcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSB0YXJnZXRzW19iXTtcbiAgICAgICAgICAgIHZhciB0YXJnZXRQYXRoID0gZnNVdGlsXzEuY29uc2lzdGVudFBhdGgocGF0aC5yZWxhdGl2ZShwcm9qZWN0RGlyLCBmc1V0aWxfMS5jb25zaXN0ZW50UGF0aCh0YXJnZXQpKSk7XG4gICAgICAgICAgICB2YXIgc291cmNlUGF0aCA9IGZzVXRpbF8xLmNvbnNpc3RlbnRQYXRoKHBhdGgucmVsYXRpdmUocHJvamVjdERpciwgZmlsZVBhdGgpKTtcbiAgICAgICAgICAgIGxpbmtzLnB1c2goe1xuICAgICAgICAgICAgICAgIHNvdXJjZVBhdGg6IHNvdXJjZVBhdGgsXG4gICAgICAgICAgICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxpbmtzO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZ2V0RGVwZW5kZW5jaWVzO1xuIl19