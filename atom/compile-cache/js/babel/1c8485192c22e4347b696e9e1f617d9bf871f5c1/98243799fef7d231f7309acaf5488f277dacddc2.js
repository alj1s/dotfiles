var fs = require('fs');
exports.languageServiceHost = require('./languageServiceHost2');
var tsconfig = require('../../tsconfig/tsconfig');
var transformerRegistry = require('../transformers/transformerRegistry');
var Project = (function () {
    function Project(projectFile) {
        var _this = this;
        this.projectFile = projectFile;
        this.languageServiceHost = new exports.languageServiceHost.LanguageServiceHost(projectFile);
        var transformerRegexes = transformerRegistry.getRegexes();
        projectFile.project.files.forEach(function (file) {
            if (tsconfig.endsWith(file, '.tst.ts')) {
                var rawContent = fs.readFileSync(tsconfig.removeExt(file), 'utf-8');
                var withoutTransform = rawContent;
                transformerRegexes.forEach(function (transformer) {
                    withoutTransform = withoutTransform.replace(transformer, '');
                    ;
                });
                _this.languageServiceHost.addScript(file, withoutTransform);
            } else {
                _this.languageServiceHost.addScript(file);
            }
        });
        this.languageService = ts.createLanguageService(this.languageServiceHost, ts.createDocumentRegistry());
    }
    Project.prototype.getProjectSourceFiles = function () {
        var libFile = exports.languageServiceHost.getDefaultLibFilePath(this.projectFile.project.compilerOptions);
        var files = this.languageService.getProgram().getSourceFiles().filter(function (x) {
            return x.fileName !== libFile;
        });
        return files;
    };
    return Project;
})();
exports.Project = Project;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9hdG9tLXR5cGVzY3JpcHQvZGlzdC9tYWluL2xhbmcvY29yZS9wcm9qZWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN2QixPQUFPLENBQUMsbUJBQW1CLEdBQUcsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFDaEUsSUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDbEQsSUFBSSxtQkFBbUIsR0FBRyxPQUFPLENBQUMscUNBQXFDLENBQUMsQ0FBQztBQUN6RSxJQUFJLE9BQU8sR0FBRyxDQUFDLFlBQVk7QUFDdkIsYUFBUyxPQUFPLENBQUMsV0FBVyxFQUFFO0FBQzFCLFlBQUksS0FBSyxHQUFHLElBQUksQ0FBQztBQUNqQixZQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztBQUMvQixZQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxPQUFPLENBQUMsbUJBQW1CLENBQUMsbUJBQW1CLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDNUYsWUFBSSxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQyxVQUFVLEVBQUUsQ0FBQztBQUMxRCxtQkFBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSSxFQUFFO0FBQzlDLGdCQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxFQUFFO0FBQ3BDLG9CQUFJLFVBQVUsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDcEUsb0JBQUksZ0JBQWdCLEdBQUcsVUFBVSxDQUFDO0FBQ2xDLGtDQUFrQixDQUFDLE9BQU8sQ0FBQyxVQUFVLFdBQVcsRUFBRTtBQUM5QyxvQ0FBZ0IsR0FBRyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzdELHFCQUFDO2lCQUNKLENBQUMsQ0FBQztBQUNILHFCQUFLLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO2FBQy9ELE1BQ0k7QUFDRCxxQkFBSyxDQUFDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUM3QztTQUNKLENBQUMsQ0FBQztBQUNILFlBQUksQ0FBQyxlQUFlLEdBQUcsRUFBRSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLENBQUMsc0JBQXNCLEVBQUUsQ0FBQyxDQUFDO0tBQzFHO0FBQ0QsV0FBTyxDQUFDLFNBQVMsQ0FBQyxxQkFBcUIsR0FBRyxZQUFZO0FBQ2xELFlBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUMxRyxZQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQVUsRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRTtBQUFFLG1CQUFPLENBQUMsQ0FBQyxRQUFRLEtBQUssT0FBTyxDQUFDO1NBQUUsQ0FBQyxDQUFDO0FBQ3ZILGVBQU8sS0FBSyxDQUFDO0tBQ2hCLENBQUM7QUFDRixXQUFPLE9BQU8sQ0FBQztDQUNsQixDQUFBLEVBQUcsQ0FBQztBQUNMLE9BQU8sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9hdG9tLXR5cGVzY3JpcHQvZGlzdC9tYWluL2xhbmcvY29yZS9wcm9qZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcbmV4cG9ydHMubGFuZ3VhZ2VTZXJ2aWNlSG9zdCA9IHJlcXVpcmUoJy4vbGFuZ3VhZ2VTZXJ2aWNlSG9zdDInKTtcbnZhciB0c2NvbmZpZyA9IHJlcXVpcmUoJy4uLy4uL3RzY29uZmlnL3RzY29uZmlnJyk7XG52YXIgdHJhbnNmb3JtZXJSZWdpc3RyeSA9IHJlcXVpcmUoXCIuLi90cmFuc2Zvcm1lcnMvdHJhbnNmb3JtZXJSZWdpc3RyeVwiKTtcbnZhciBQcm9qZWN0ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcm9qZWN0KHByb2plY3RGaWxlKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMucHJvamVjdEZpbGUgPSBwcm9qZWN0RmlsZTtcbiAgICAgICAgdGhpcy5sYW5ndWFnZVNlcnZpY2VIb3N0ID0gbmV3IGV4cG9ydHMubGFuZ3VhZ2VTZXJ2aWNlSG9zdC5MYW5ndWFnZVNlcnZpY2VIb3N0KHByb2plY3RGaWxlKTtcbiAgICAgICAgdmFyIHRyYW5zZm9ybWVyUmVnZXhlcyA9IHRyYW5zZm9ybWVyUmVnaXN0cnkuZ2V0UmVnZXhlcygpO1xuICAgICAgICBwcm9qZWN0RmlsZS5wcm9qZWN0LmZpbGVzLmZvckVhY2goZnVuY3Rpb24gKGZpbGUpIHtcbiAgICAgICAgICAgIGlmICh0c2NvbmZpZy5lbmRzV2l0aChmaWxlLCAnLnRzdC50cycpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJhd0NvbnRlbnQgPSBmcy5yZWFkRmlsZVN5bmModHNjb25maWcucmVtb3ZlRXh0KGZpbGUpLCAndXRmLTgnKTtcbiAgICAgICAgICAgICAgICB2YXIgd2l0aG91dFRyYW5zZm9ybSA9IHJhd0NvbnRlbnQ7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtZXJSZWdleGVzLmZvckVhY2goZnVuY3Rpb24gKHRyYW5zZm9ybWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpdGhvdXRUcmFuc2Zvcm0gPSB3aXRob3V0VHJhbnNmb3JtLnJlcGxhY2UodHJhbnNmb3JtZXIsICcnKTtcbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIF90aGlzLmxhbmd1YWdlU2VydmljZUhvc3QuYWRkU2NyaXB0KGZpbGUsIHdpdGhvdXRUcmFuc2Zvcm0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgX3RoaXMubGFuZ3VhZ2VTZXJ2aWNlSG9zdC5hZGRTY3JpcHQoZmlsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmxhbmd1YWdlU2VydmljZSA9IHRzLmNyZWF0ZUxhbmd1YWdlU2VydmljZSh0aGlzLmxhbmd1YWdlU2VydmljZUhvc3QsIHRzLmNyZWF0ZURvY3VtZW50UmVnaXN0cnkoKSk7XG4gICAgfVxuICAgIFByb2plY3QucHJvdG90eXBlLmdldFByb2plY3RTb3VyY2VGaWxlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGxpYkZpbGUgPSBleHBvcnRzLmxhbmd1YWdlU2VydmljZUhvc3QuZ2V0RGVmYXVsdExpYkZpbGVQYXRoKHRoaXMucHJvamVjdEZpbGUucHJvamVjdC5jb21waWxlck9wdGlvbnMpO1xuICAgICAgICB2YXIgZmlsZXMgPSB0aGlzLmxhbmd1YWdlU2VydmljZS5nZXRQcm9ncmFtKCkuZ2V0U291cmNlRmlsZXMoKS5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHguZmlsZU5hbWUgIT09IGxpYkZpbGU7IH0pO1xuICAgICAgICByZXR1cm4gZmlsZXM7XG4gICAgfTtcbiAgICByZXR1cm4gUHJvamVjdDtcbn0pKCk7XG5leHBvcnRzLlByb2plY3QgPSBQcm9qZWN0O1xuIl19