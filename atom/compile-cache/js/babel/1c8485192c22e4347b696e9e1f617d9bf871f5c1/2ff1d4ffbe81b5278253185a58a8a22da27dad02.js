var utils = require('../../utils');
var SingleLineCommentToJsdoc = (function () {
    function SingleLineCommentToJsdoc() {
        this.key = SingleLineCommentToJsdoc.name;
        this.validNodes = utils.createMap([79, 99, 105, 71, 84]);
    }
    SingleLineCommentToJsdoc.prototype.canProvideFix = function (info) {
        if (this.validNodes[info.positionNode.kind]) {
            var comments = ts.getLeadingCommentRangesOfNode(info.positionNode, info.sourceFile);
            if (!comments) return;
            var mapped = comments.map(function (c) {
                return info.sourceFileText.substring(c.pos, c.end);
            });
            if (!mapped.length) return;
            var relevantComment = mapped[mapped.length - 1];
            if (relevantComment.startsWith('//')) return { display: 'Convert comment to jsDoc' };
        }
    };
    SingleLineCommentToJsdoc.prototype.provideFix = function (info) {
        var comments = ts.getLeadingCommentRangesOfNode(info.positionNode, info.sourceFile);
        var relevantComment = comments[comments.length - 1];
        var oldText = info.sourceFileText.substring(relevantComment.pos, relevantComment.end);
        var newText = '/** ' + oldText.substr(2).trim() + ' */';
        var refactoring = {
            span: {
                start: relevantComment.pos,
                length: relevantComment.end - relevantComment.pos
            },
            newText: newText,
            filePath: info.filePath
        };
        return [refactoring];
    };
    return SingleLineCommentToJsdoc;
})();
exports.SingleLineCommentToJsdoc = SingleLineCommentToJsdoc;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9hdG9tLXR5cGVzY3JpcHQvZGlzdC9tYWluL2xhbmcvZml4bXl0cy9xdWlja0ZpeGVzL3NpbmdsZUxpbmVDb21tZW50VG9Kc2RvYy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDbkMsSUFBSSx3QkFBd0IsR0FBRyxDQUFDLFlBQVk7QUFDeEMsYUFBUyx3QkFBd0IsR0FBRztBQUNoQyxZQUFJLENBQUMsR0FBRyxHQUFHLHdCQUF3QixDQUFDLElBQUksQ0FBQztBQUN6QyxZQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FDOUIsRUFBRSxFQUNGLEVBQUUsRUFDRixHQUFHLEVBQ0gsRUFBRSxFQUNGLEVBQUUsQ0FDTCxDQUFDLENBQUM7S0FDTjtBQUNELDRCQUF3QixDQUFDLFNBQVMsQ0FBQyxhQUFhLEdBQUcsVUFBVSxJQUFJLEVBQUU7QUFDL0QsWUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUU7QUFDekMsZ0JBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNwRixnQkFBSSxDQUFDLFFBQVEsRUFDVCxPQUFPO0FBQ1gsZ0JBQUksTUFBTSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEVBQUU7QUFBRSx1QkFBTyxJQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUFFLENBQUMsQ0FBQztBQUNoRyxnQkFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQ2QsT0FBTztBQUNYLGdCQUFJLGVBQWUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNoRCxnQkFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUNoQyxPQUFPLEVBQUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLENBQUM7U0FDdEQ7S0FDSixDQUFDO0FBQ0YsNEJBQXdCLENBQUMsU0FBUyxDQUFDLFVBQVUsR0FBRyxVQUFVLElBQUksRUFBRTtBQUM1RCxZQUFJLFFBQVEsR0FBRyxFQUFFLENBQUMsNkJBQTZCLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDcEYsWUFBSSxlQUFlLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDcEQsWUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDdEYsWUFBSSxPQUFPLEdBQUcsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLEdBQUcsS0FBSyxDQUFDO0FBQ3hELFlBQUksV0FBVyxHQUFHO0FBQ2QsZ0JBQUksRUFBRTtBQUNGLHFCQUFLLEVBQUUsZUFBZSxDQUFDLEdBQUc7QUFDMUIsc0JBQU0sRUFBRSxlQUFlLENBQUMsR0FBRyxHQUFHLGVBQWUsQ0FBQyxHQUFHO2FBQ3BEO0FBQ0QsbUJBQU8sRUFBRSxPQUFPO0FBQ2hCLG9CQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7U0FDMUIsQ0FBQztBQUNGLGVBQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUN4QixDQUFDO0FBQ0YsV0FBTyx3QkFBd0IsQ0FBQztDQUNuQyxDQUFBLEVBQUcsQ0FBQztBQUNMLE9BQU8sQ0FBQyx3QkFBd0IsR0FBRyx3QkFBd0IsQ0FBQyIsImZpbGUiOiIvVXNlcnMvYW5kcmV3am9uZXMvLmF0b20vcGFja2FnZXMvYXRvbS10eXBlc2NyaXB0L2Rpc3QvbWFpbi9sYW5nL2ZpeG15dHMvcXVpY2tGaXhlcy9zaW5nbGVMaW5lQ29tbWVudFRvSnNkb2MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbHMgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHNcIik7XG52YXIgU2luZ2xlTGluZUNvbW1lbnRUb0pzZG9jID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTaW5nbGVMaW5lQ29tbWVudFRvSnNkb2MoKSB7XG4gICAgICAgIHRoaXMua2V5ID0gU2luZ2xlTGluZUNvbW1lbnRUb0pzZG9jLm5hbWU7XG4gICAgICAgIHRoaXMudmFsaWROb2RlcyA9IHV0aWxzLmNyZWF0ZU1hcChbXG4gICAgICAgICAgICA3OSxcbiAgICAgICAgICAgIDk5LFxuICAgICAgICAgICAgMTA1LFxuICAgICAgICAgICAgNzEsXG4gICAgICAgICAgICA4NCxcbiAgICAgICAgXSk7XG4gICAgfVxuICAgIFNpbmdsZUxpbmVDb21tZW50VG9Kc2RvYy5wcm90b3R5cGUuY2FuUHJvdmlkZUZpeCA9IGZ1bmN0aW9uIChpbmZvKSB7XG4gICAgICAgIGlmICh0aGlzLnZhbGlkTm9kZXNbaW5mby5wb3NpdGlvbk5vZGUua2luZF0pIHtcbiAgICAgICAgICAgIHZhciBjb21tZW50cyA9IHRzLmdldExlYWRpbmdDb21tZW50UmFuZ2VzT2ZOb2RlKGluZm8ucG9zaXRpb25Ob2RlLCBpbmZvLnNvdXJjZUZpbGUpO1xuICAgICAgICAgICAgaWYgKCFjb21tZW50cylcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB2YXIgbWFwcGVkID0gY29tbWVudHMubWFwKGZ1bmN0aW9uIChjKSB7IHJldHVybiBpbmZvLnNvdXJjZUZpbGVUZXh0LnN1YnN0cmluZyhjLnBvcywgYy5lbmQpOyB9KTtcbiAgICAgICAgICAgIGlmICghbWFwcGVkLmxlbmd0aClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB2YXIgcmVsZXZhbnRDb21tZW50ID0gbWFwcGVkW21hcHBlZC5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgIGlmIChyZWxldmFudENvbW1lbnQuc3RhcnRzV2l0aCgnLy8nKSlcbiAgICAgICAgICAgICAgICByZXR1cm4geyBkaXNwbGF5OiAnQ29udmVydCBjb21tZW50IHRvIGpzRG9jJyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTaW5nbGVMaW5lQ29tbWVudFRvSnNkb2MucHJvdG90eXBlLnByb3ZpZGVGaXggPSBmdW5jdGlvbiAoaW5mbykge1xuICAgICAgICB2YXIgY29tbWVudHMgPSB0cy5nZXRMZWFkaW5nQ29tbWVudFJhbmdlc09mTm9kZShpbmZvLnBvc2l0aW9uTm9kZSwgaW5mby5zb3VyY2VGaWxlKTtcbiAgICAgICAgdmFyIHJlbGV2YW50Q29tbWVudCA9IGNvbW1lbnRzW2NvbW1lbnRzLmxlbmd0aCAtIDFdO1xuICAgICAgICB2YXIgb2xkVGV4dCA9IGluZm8uc291cmNlRmlsZVRleHQuc3Vic3RyaW5nKHJlbGV2YW50Q29tbWVudC5wb3MsIHJlbGV2YW50Q29tbWVudC5lbmQpO1xuICAgICAgICB2YXIgbmV3VGV4dCA9IFwiLyoqIFwiICsgb2xkVGV4dC5zdWJzdHIoMikudHJpbSgpICsgXCIgKi9cIjtcbiAgICAgICAgdmFyIHJlZmFjdG9yaW5nID0ge1xuICAgICAgICAgICAgc3Bhbjoge1xuICAgICAgICAgICAgICAgIHN0YXJ0OiByZWxldmFudENvbW1lbnQucG9zLFxuICAgICAgICAgICAgICAgIGxlbmd0aDogcmVsZXZhbnRDb21tZW50LmVuZCAtIHJlbGV2YW50Q29tbWVudC5wb3NcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBuZXdUZXh0OiBuZXdUZXh0LFxuICAgICAgICAgICAgZmlsZVBhdGg6IGluZm8uZmlsZVBhdGhcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFtyZWZhY3RvcmluZ107XG4gICAgfTtcbiAgICByZXR1cm4gU2luZ2xlTGluZUNvbW1lbnRUb0pzZG9jO1xufSkoKTtcbmV4cG9ydHMuU2luZ2xlTGluZUNvbW1lbnRUb0pzZG9jID0gU2luZ2xlTGluZUNvbW1lbnRUb0pzZG9jO1xuIl19