var path = require('path');
function isTransformerFile(filePath) {
    var ext = path.extname(filePath);
    return ext == '.tst';
}
exports.isTransformerFile = isTransformerFile;
function getPseudoFilePath(filePath) {
    if (isTransformerFile(filePath)) {
        return getPseudoTsFile(filePath);
    }
    return filePath;
}
exports.getPseudoFilePath = getPseudoFilePath;
function getPseudoTsFile(filePath) {
    return filePath + '.ts';
}
function getTransformerFile(filePath) {
    if (endsWith(filePath, '.tst.ts')) {
        filePath = removeExt(filePath);
    }
    return filePath;
}
exports.getTransformerFile = getTransformerFile;
function isRawFile(filePath) {
    return endsWith(filePath, '.raw.ts');
}
exports.isRawFile = isRawFile;
function isPseudoFile(filePath) {
    var ext = path.extname(filePath);
    return endsWith(filePath, '.tst.ts');
}
exports.isPseudoFile = isPseudoFile;
function endsWith(str, suffix) {
    return str && str.indexOf(suffix, str.length - suffix.length) !== -1;
}
function removeExt(filePath) {
    return filePath && filePath.substr(0, filePath.lastIndexOf('.'));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9hdG9tLXR5cGVzY3JpcHQvZGlzdC9tYWluL2xhbmcvdHJhbnNmb3JtZXJzL3RyYW5zZm9ybWVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzQixTQUFTLGlCQUFpQixDQUFDLFFBQVEsRUFBRTtBQUNqQyxRQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2pDLFdBQU8sR0FBRyxJQUFJLE1BQU0sQ0FBQztDQUN4QjtBQUNELE9BQU8sQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztBQUM5QyxTQUFTLGlCQUFpQixDQUFDLFFBQVEsRUFBRTtBQUNqQyxRQUFJLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxFQUFFO0FBQzdCLGVBQU8sZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3BDO0FBQ0QsV0FBTyxRQUFRLENBQUM7Q0FDbkI7QUFDRCxPQUFPLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7QUFDOUMsU0FBUyxlQUFlLENBQUMsUUFBUSxFQUFFO0FBQy9CLFdBQU8sUUFBUSxHQUFHLEtBQUssQ0FBQztDQUMzQjtBQUNELFNBQVMsa0JBQWtCLENBQUMsUUFBUSxFQUFFO0FBQ2xDLFFBQUksUUFBUSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsRUFBRTtBQUMvQixnQkFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUNsQztBQUNELFdBQU8sUUFBUSxDQUFDO0NBQ25CO0FBQ0QsT0FBTyxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO0FBQ2hELFNBQVMsU0FBUyxDQUFDLFFBQVEsRUFBRTtBQUN6QixXQUFPLFFBQVEsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7Q0FDeEM7QUFDRCxPQUFPLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztBQUM5QixTQUFTLFlBQVksQ0FBQyxRQUFRLEVBQUU7QUFDNUIsUUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNqQyxXQUFPLFFBQVEsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7Q0FDeEM7QUFDRCxPQUFPLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztBQUNwQyxTQUFTLFFBQVEsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFO0FBQzNCLFdBQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0NBQ3hFO0FBQ0QsU0FBUyxTQUFTLENBQUMsUUFBUSxFQUFFO0FBQ3pCLFdBQU8sUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztDQUNwRSIsImZpbGUiOiIvVXNlcnMvYW5kcmV3am9uZXMvLmF0b20vcGFja2FnZXMvYXRvbS10eXBlc2NyaXB0L2Rpc3QvbWFpbi9sYW5nL3RyYW5zZm9ybWVycy90cmFuc2Zvcm1lci5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XG5mdW5jdGlvbiBpc1RyYW5zZm9ybWVyRmlsZShmaWxlUGF0aCkge1xuICAgIHZhciBleHQgPSBwYXRoLmV4dG5hbWUoZmlsZVBhdGgpO1xuICAgIHJldHVybiBleHQgPT0gJy50c3QnO1xufVxuZXhwb3J0cy5pc1RyYW5zZm9ybWVyRmlsZSA9IGlzVHJhbnNmb3JtZXJGaWxlO1xuZnVuY3Rpb24gZ2V0UHNldWRvRmlsZVBhdGgoZmlsZVBhdGgpIHtcbiAgICBpZiAoaXNUcmFuc2Zvcm1lckZpbGUoZmlsZVBhdGgpKSB7XG4gICAgICAgIHJldHVybiBnZXRQc2V1ZG9Uc0ZpbGUoZmlsZVBhdGgpO1xuICAgIH1cbiAgICByZXR1cm4gZmlsZVBhdGg7XG59XG5leHBvcnRzLmdldFBzZXVkb0ZpbGVQYXRoID0gZ2V0UHNldWRvRmlsZVBhdGg7XG5mdW5jdGlvbiBnZXRQc2V1ZG9Uc0ZpbGUoZmlsZVBhdGgpIHtcbiAgICByZXR1cm4gZmlsZVBhdGggKyAnLnRzJztcbn1cbmZ1bmN0aW9uIGdldFRyYW5zZm9ybWVyRmlsZShmaWxlUGF0aCkge1xuICAgIGlmIChlbmRzV2l0aChmaWxlUGF0aCwgJy50c3QudHMnKSkge1xuICAgICAgICBmaWxlUGF0aCA9IHJlbW92ZUV4dChmaWxlUGF0aCk7XG4gICAgfVxuICAgIHJldHVybiBmaWxlUGF0aDtcbn1cbmV4cG9ydHMuZ2V0VHJhbnNmb3JtZXJGaWxlID0gZ2V0VHJhbnNmb3JtZXJGaWxlO1xuZnVuY3Rpb24gaXNSYXdGaWxlKGZpbGVQYXRoKSB7XG4gICAgcmV0dXJuIGVuZHNXaXRoKGZpbGVQYXRoLCBcIi5yYXcudHNcIik7XG59XG5leHBvcnRzLmlzUmF3RmlsZSA9IGlzUmF3RmlsZTtcbmZ1bmN0aW9uIGlzUHNldWRvRmlsZShmaWxlUGF0aCkge1xuICAgIHZhciBleHQgPSBwYXRoLmV4dG5hbWUoZmlsZVBhdGgpO1xuICAgIHJldHVybiBlbmRzV2l0aChmaWxlUGF0aCwgXCIudHN0LnRzXCIpO1xufVxuZXhwb3J0cy5pc1BzZXVkb0ZpbGUgPSBpc1BzZXVkb0ZpbGU7XG5mdW5jdGlvbiBlbmRzV2l0aChzdHIsIHN1ZmZpeCkge1xuICAgIHJldHVybiBzdHIgJiYgc3RyLmluZGV4T2Yoc3VmZml4LCBzdHIubGVuZ3RoIC0gc3VmZml4Lmxlbmd0aCkgIT09IC0xO1xufVxuZnVuY3Rpb24gcmVtb3ZlRXh0KGZpbGVQYXRoKSB7XG4gICAgcmV0dXJuIGZpbGVQYXRoICYmIGZpbGVQYXRoLnN1YnN0cigwLCBmaWxlUGF0aC5sYXN0SW5kZXhPZignLicpKTtcbn1cbiJdfQ==