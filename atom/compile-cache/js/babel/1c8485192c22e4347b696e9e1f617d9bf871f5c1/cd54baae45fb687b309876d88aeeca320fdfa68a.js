var EqualsToEquals = (function () {
    function EqualsToEquals() {
        this.key = EqualsToEquals.name;
    }
    EqualsToEquals.prototype.canProvideFix = function (info) {
        if (info.positionNode.kind === 29) {
            return { display: "Convert == to ===" };
        }
        if (info.positionNode.kind === 30) {
            return { display: "Convert != to !==" };
        }
    };
    EqualsToEquals.prototype.provideFix = function (info) {
        if (info.positionNode.kind === 29) {
            var newText = "===";
        }
        if (info.positionNode.kind === 30) {
            var newText = "!==";
        }
        var refactoring = {
            span: {
                start: info.positionNode.end - 2,
                length: 2
            },
            newText: newText,
            filePath: info.filePath
        };
        return [refactoring];
    };
    return EqualsToEquals;
})();
exports.EqualsToEquals = EqualsToEquals;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9hdG9tLXR5cGVzY3JpcHQvZGlzdC9tYWluL2xhbmcvZml4bXl0cy9xdWlja0ZpeGVzL2VxdWFsc1RvRXF1YWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksY0FBYyxHQUFHLENBQUMsWUFBWTtBQUM5QixhQUFTLGNBQWMsR0FBRztBQUN0QixZQUFJLENBQUMsR0FBRyxHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQUM7S0FDbEM7QUFDRCxrQkFBYyxDQUFDLFNBQVMsQ0FBQyxhQUFhLEdBQUcsVUFBVSxJQUFJLEVBQUU7QUFDckQsWUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksS0FBSyxFQUFFLEVBQUU7QUFDL0IsbUJBQU8sRUFBRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQztTQUMzQztBQUNELFlBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEtBQUssRUFBRSxFQUFFO0FBQy9CLG1CQUFPLEVBQUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLENBQUM7U0FDM0M7S0FDSixDQUFDO0FBQ0Ysa0JBQWMsQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLFVBQVUsSUFBSSxFQUFFO0FBQ2xELFlBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEtBQUssRUFBRSxFQUFFO0FBQy9CLGdCQUFJLE9BQU8sR0FBRyxLQUFLLENBQUM7U0FDdkI7QUFDRCxZQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxLQUFLLEVBQUUsRUFBRTtBQUMvQixnQkFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO1NBQ3ZCO0FBQ0QsWUFBSSxXQUFXLEdBQUc7QUFDZCxnQkFBSSxFQUFFO0FBQ0YscUJBQUssRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsR0FBRyxDQUFDO0FBQ2hDLHNCQUFNLEVBQUUsQ0FBQzthQUNaO0FBQ0QsbUJBQU8sRUFBRSxPQUFPO0FBQ2hCLG9CQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7U0FDMUIsQ0FBQztBQUNGLGVBQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUN4QixDQUFDO0FBQ0YsV0FBTyxjQUFjLENBQUM7Q0FDekIsQ0FBQSxFQUFHLENBQUM7QUFDTCxPQUFPLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQyIsImZpbGUiOiIvVXNlcnMvYW5kcmV3am9uZXMvLmF0b20vcGFja2FnZXMvYXRvbS10eXBlc2NyaXB0L2Rpc3QvbWFpbi9sYW5nL2ZpeG15dHMvcXVpY2tGaXhlcy9lcXVhbHNUb0VxdWFscy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBFcXVhbHNUb0VxdWFscyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRXF1YWxzVG9FcXVhbHMoKSB7XG4gICAgICAgIHRoaXMua2V5ID0gRXF1YWxzVG9FcXVhbHMubmFtZTtcbiAgICB9XG4gICAgRXF1YWxzVG9FcXVhbHMucHJvdG90eXBlLmNhblByb3ZpZGVGaXggPSBmdW5jdGlvbiAoaW5mbykge1xuICAgICAgICBpZiAoaW5mby5wb3NpdGlvbk5vZGUua2luZCA9PT0gMjkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGRpc3BsYXk6IFwiQ29udmVydCA9PSB0byA9PT1cIiB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmZvLnBvc2l0aW9uTm9kZS5raW5kID09PSAzMCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgZGlzcGxheTogXCJDb252ZXJ0ICE9IHRvICE9PVwiIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEVxdWFsc1RvRXF1YWxzLnByb3RvdHlwZS5wcm92aWRlRml4ID0gZnVuY3Rpb24gKGluZm8pIHtcbiAgICAgICAgaWYgKGluZm8ucG9zaXRpb25Ob2RlLmtpbmQgPT09IDI5KSB7XG4gICAgICAgICAgICB2YXIgbmV3VGV4dCA9ICc9PT0nO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmZvLnBvc2l0aW9uTm9kZS5raW5kID09PSAzMCkge1xuICAgICAgICAgICAgdmFyIG5ld1RleHQgPSAnIT09JztcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmVmYWN0b3JpbmcgPSB7XG4gICAgICAgICAgICBzcGFuOiB7XG4gICAgICAgICAgICAgICAgc3RhcnQ6IGluZm8ucG9zaXRpb25Ob2RlLmVuZCAtIDIsXG4gICAgICAgICAgICAgICAgbGVuZ3RoOiAyXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbmV3VGV4dDogbmV3VGV4dCxcbiAgICAgICAgICAgIGZpbGVQYXRoOiBpbmZvLmZpbGVQYXRoXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBbcmVmYWN0b3JpbmddO1xuICAgIH07XG4gICAgcmV0dXJuIEVxdWFsc1RvRXF1YWxzO1xufSkoKTtcbmV4cG9ydHMuRXF1YWxzVG9FcXVhbHMgPSBFcXVhbHNUb0VxdWFscztcbiJdfQ==