// This file is only called from linter
// See : https://github.com/AtomLinter/Linter/issues/337
var parent = require('./worker/parent');
var fs = require('fs');
var atom_1 = require('atom');
exports.provider = {
    grammarScopes: ['source.ts', 'source.ts.tsx'],
    scope: 'file',
    lintOnFly: true,
    lint: function lint(textEditor) {
        if (!textEditor.buffer.file || !textEditor.buffer.file.path || !fs.existsSync(textEditor.buffer.file.path)) return Promise.resolve([]);
        var filePath = textEditor.buffer.file.path;
        return parent.errorsForFile({ filePath: filePath }).then(function (resp) {
            var linterErrors = resp.errors.map(function (err) {
                return {
                    type: 'Error',
                    filePath: filePath,
                    html: '<span class="badge badge-flexible" style="color:rgb(0, 148, 255)"> TS </span> ' + err.message,
                    range: new atom_1.Range([err.startPos.line, err.startPos.col], [err.endPos.line, err.endPos.col])
                };
            });
            return linterErrors;
        })['catch'](function (error) {
            return [];
        });
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9hdG9tLXR5cGVzY3JpcHQvZGlzdC9saW50ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUN4QyxJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdkIsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzdCLE9BQU8sQ0FBQyxRQUFRLEdBQUc7QUFDZixpQkFBYSxFQUFFLENBQUMsV0FBVyxFQUFFLGVBQWUsQ0FBQztBQUM3QyxTQUFLLEVBQUUsTUFBTTtBQUNiLGFBQVMsRUFBRSxJQUFJO0FBQ2YsUUFBSSxFQUFFLGNBQVUsVUFBVSxFQUFFO0FBQ3hCLFlBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksSUFDcEIsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQzVCLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFDOUMsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQy9CLFlBQUksUUFBUSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztBQUMzQyxlQUFPLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FDOUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxFQUFFO0FBQ3RCLGdCQUFJLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEdBQUcsRUFBRTtBQUFFLHVCQUFRO0FBQ3hELHdCQUFJLEVBQUUsT0FBTztBQUNiLDRCQUFRLEVBQUUsUUFBUTtBQUNsQix3QkFBSSxFQUFFLGdGQUFvRixHQUFHLEdBQUcsQ0FBQyxPQUFPO0FBQ3hHLHlCQUFLLEVBQUUsSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7aUJBQ3BHLENBQUU7YUFBRSxDQUFDLENBQUM7QUFDUCxtQkFBTyxZQUFZLENBQUM7U0FDdkIsQ0FBQyxTQUNRLENBQUMsVUFBVSxLQUFLLEVBQUU7QUFDeEIsbUJBQU8sRUFBRSxDQUFDO1NBQ2IsQ0FBQyxDQUFDO0tBQ047Q0FDSixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9hdG9tLXR5cGVzY3JpcHQvZGlzdC9saW50ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgb25seSBjYWxsZWQgZnJvbSBsaW50ZXJcbi8vIFNlZSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9BdG9tTGludGVyL0xpbnRlci9pc3N1ZXMvMzM3XG52YXIgcGFyZW50ID0gcmVxdWlyZSgnLi93b3JrZXIvcGFyZW50Jyk7XG52YXIgZnMgPSByZXF1aXJlKCdmcycpO1xudmFyIGF0b21fMSA9IHJlcXVpcmUoXCJhdG9tXCIpO1xuZXhwb3J0cy5wcm92aWRlciA9IHtcbiAgICBncmFtbWFyU2NvcGVzOiBbJ3NvdXJjZS50cycsICdzb3VyY2UudHMudHN4J10sXG4gICAgc2NvcGU6ICdmaWxlJyxcbiAgICBsaW50T25GbHk6IHRydWUsXG4gICAgbGludDogZnVuY3Rpb24gKHRleHRFZGl0b3IpIHtcbiAgICAgICAgaWYgKCF0ZXh0RWRpdG9yLmJ1ZmZlci5maWxlXG4gICAgICAgICAgICB8fCAhdGV4dEVkaXRvci5idWZmZXIuZmlsZS5wYXRoXG4gICAgICAgICAgICB8fCAhZnMuZXhpc3RzU3luYyh0ZXh0RWRpdG9yLmJ1ZmZlci5maWxlLnBhdGgpKVxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShbXSk7XG4gICAgICAgIHZhciBmaWxlUGF0aCA9IHRleHRFZGl0b3IuYnVmZmVyLmZpbGUucGF0aDtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5lcnJvcnNGb3JGaWxlKHsgZmlsZVBhdGg6IGZpbGVQYXRoIH0pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcCkge1xuICAgICAgICAgICAgdmFyIGxpbnRlckVycm9ycyA9IHJlc3AuZXJyb3JzLm1hcChmdW5jdGlvbiAoZXJyKSB7IHJldHVybiAoe1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiRXJyb3JcIixcbiAgICAgICAgICAgICAgICBmaWxlUGF0aDogZmlsZVBhdGgsXG4gICAgICAgICAgICAgICAgaHRtbDogXCI8c3BhbiBjbGFzcz1cXFwiYmFkZ2UgYmFkZ2UtZmxleGlibGVcXFwiIHN0eWxlPVxcXCJjb2xvcjpyZ2IoMCwgMTQ4LCAyNTUpXFxcIj4gVFMgPC9zcGFuPiBcIiArIGVyci5tZXNzYWdlLFxuICAgICAgICAgICAgICAgIHJhbmdlOiBuZXcgYXRvbV8xLlJhbmdlKFtlcnIuc3RhcnRQb3MubGluZSwgZXJyLnN0YXJ0UG9zLmNvbF0sIFtlcnIuZW5kUG9zLmxpbmUsIGVyci5lbmRQb3MuY29sXSksXG4gICAgICAgICAgICB9KTsgfSk7XG4gICAgICAgICAgICByZXR1cm4gbGludGVyRXJyb3JzO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuIl19