'use babel';
/* @flow */

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var _require = require('../lib/utils');

var compareHackCompletions = _require.compareHackCompletions;

describe('utils', function () {

  describe('compareHackCompletions()', function () {

    it('prefers prefix case sensitive matches to prefix case insensitive + alphabetical order', function () {
      var matchTexts = ['GetAaa()', 'getAzzz()'];
      var compartor = compareHackCompletions('getA');
      expect(matchTexts.sort(compartor)).toEqual(['getAzzz()', 'GetAaa()']);
    });

    it('prefers prefix case insensitive matches to case insensitive non-prefix matches + alphabetical order', function () {
      var matchTexts = ['aa_getAaa()', 'getAzzz()'];
      var compartor = compareHackCompletions('getA');
      expect(matchTexts.sort(compartor)).toEqual(['getAzzz()', 'aa_getAaa()']);
    });

    it('prefers non-prefix case sensitive matches to case insensitive non-prefix matches + alphabetical order', function () {
      var matchTexts = ['aa_getaaa()', 'zz_getAaa()'];
      var compartor = compareHackCompletions('getA');
      expect(matchTexts.sort(compartor)).toEqual(['zz_getAaa()', 'aa_getaaa()']);
    });

    it('prefers alphabetical order when both are of the same type', function () {
      var matchTexts = ['zz_getAaa()', 'aa_getAaa()'];
      var compartor = compareHackCompletions('getA');
      expect(matchTexts.sort(compartor)).toEqual(['aa_getAaa()', 'zz_getAaa()']);
    });

    it('penalizes a match if is private function, even if matching with case sensitivity', function () {
      var matchTexts = ['_aa_getAaa()', 'zz_getaaaa()'];
      var compartor = compareHackCompletions('getA');
      expect(matchTexts.sort(compartor)).toEqual(['zz_getaaaa()', '_aa_getAaa()']);
    });

    it('sorts the completion results in a meaningful order', function () {
      var matchTexts = ['_getAbc()', '_getAab()', 'getAppend()', 'getAddendum()', 'doOrGetACup()', '_doOrGetACup()'];
      var compartor = compareHackCompletions('getA');
      expect(matchTexts.sort(compartor)).toEqual(['getAddendum()', 'getAppend()', 'doOrGetACup()', '_getAab()', '_getAbc()', '_doOrGetACup()']);
    });
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXdqb25lcy8uYXRvbS9wYWNrYWdlcy9udWNsaWRlLWhhY2svc3BlYy91dGlscy1zcGVjLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsQ0FBQzs7Ozs7Ozs7Ozs7ZUFXbUIsT0FBTyxDQUFDLGNBQWMsQ0FBQzs7SUFBakQsc0JBQXNCLFlBQXRCLHNCQUFzQjs7QUFFM0IsUUFBUSxDQUFDLE9BQU8sRUFBRSxZQUFNOztBQUV0QixVQUFRLENBQUMsMEJBQTBCLEVBQUUsWUFBTTs7QUFFekMsTUFBRSxDQUFDLHVGQUF1RixFQUFFLFlBQU07QUFDaEcsVUFBSSxVQUFVLEdBQUcsQ0FBQyxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDM0MsVUFBSSxTQUFTLEdBQUcsc0JBQXNCLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDL0MsWUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQ3hDLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUMxQixDQUFDO0tBQ0gsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQyxxR0FBcUcsRUFBRSxZQUFNO0FBQzlHLFVBQUksVUFBVSxHQUFHLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQzlDLFVBQUksU0FBUyxHQUFHLHNCQUFzQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQy9DLFlBQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUN4QyxDQUFDLFdBQVcsRUFBRSxhQUFhLENBQUMsQ0FDN0IsQ0FBQztLQUNILENBQUMsQ0FBQzs7QUFFSCxNQUFFLENBQUMsdUdBQXVHLEVBQUUsWUFBTTtBQUNoSCxVQUFJLFVBQVUsR0FBRyxDQUFDLGFBQWEsRUFBRSxhQUFhLENBQUMsQ0FBQztBQUNoRCxVQUFJLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMvQyxZQUFNLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FDeEMsQ0FBQyxhQUFhLEVBQUUsYUFBYSxDQUFDLENBQy9CLENBQUM7S0FDSCxDQUFDLENBQUM7O0FBRUgsTUFBRSxDQUFDLDJEQUEyRCxFQUFFLFlBQU07QUFDcEUsVUFBSSxVQUFVLEdBQUcsQ0FBQyxhQUFhLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFDaEQsVUFBSSxTQUFTLEdBQUcsc0JBQXNCLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDL0MsWUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQ3hDLENBQUMsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUMvQixDQUFDO0tBQ0gsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQyxrRkFBa0YsRUFBRSxZQUFNO0FBQzNGLFVBQUksVUFBVSxHQUFHLENBQUMsY0FBYyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBQ2xELFVBQUksU0FBUyxHQUFHLHNCQUFzQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQy9DLFlBQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUN4QyxDQUFDLGNBQWMsRUFBRSxjQUFjLENBQUMsQ0FDakMsQ0FBQztLQUNILENBQUMsQ0FBQzs7QUFFSCxNQUFFLENBQUMsb0RBQW9ELEVBQUUsWUFBTTtBQUM3RCxVQUFJLFVBQVUsR0FBRyxDQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztBQUMvRyxVQUFJLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMvQyxZQUFNLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FDeEMsQ0FBQyxlQUFlLEVBQUUsYUFBYSxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixDQUFDLENBQzlGLENBQUM7S0FDSCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoiL1VzZXJzL2FuZHJld2pvbmVzLy5hdG9tL3BhY2thZ2VzL251Y2xpZGUtaGFjay9zcGVjL3V0aWxzLXNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG52YXIge2NvbXBhcmVIYWNrQ29tcGxldGlvbnN9ID0gcmVxdWlyZSgnLi4vbGliL3V0aWxzJyk7XG5cbmRlc2NyaWJlKCd1dGlscycsICgpID0+IHtcblxuICBkZXNjcmliZSgnY29tcGFyZUhhY2tDb21wbGV0aW9ucygpJywgKCkgPT4ge1xuXG4gICAgaXQoJ3ByZWZlcnMgcHJlZml4IGNhc2Ugc2Vuc2l0aXZlIG1hdGNoZXMgdG8gcHJlZml4IGNhc2UgaW5zZW5zaXRpdmUgKyBhbHBoYWJldGljYWwgb3JkZXInLCAoKSA9PiB7XG4gICAgICB2YXIgbWF0Y2hUZXh0cyA9IFsnR2V0QWFhKCknLCAnZ2V0QXp6eigpJ107XG4gICAgICB2YXIgY29tcGFydG9yID0gY29tcGFyZUhhY2tDb21wbGV0aW9ucygnZ2V0QScpO1xuICAgICAgZXhwZWN0KG1hdGNoVGV4dHMuc29ydChjb21wYXJ0b3IpKS50b0VxdWFsKFxuICAgICAgICBbJ2dldEF6enooKScsICdHZXRBYWEoKSddXG4gICAgICApO1xuICAgIH0pO1xuXG4gICAgaXQoJ3ByZWZlcnMgcHJlZml4IGNhc2UgaW5zZW5zaXRpdmUgbWF0Y2hlcyB0byBjYXNlIGluc2Vuc2l0aXZlIG5vbi1wcmVmaXggbWF0Y2hlcyArIGFscGhhYmV0aWNhbCBvcmRlcicsICgpID0+IHtcbiAgICAgIHZhciBtYXRjaFRleHRzID0gWydhYV9nZXRBYWEoKScsICdnZXRBenp6KCknXTtcbiAgICAgIHZhciBjb21wYXJ0b3IgPSBjb21wYXJlSGFja0NvbXBsZXRpb25zKCdnZXRBJyk7XG4gICAgICBleHBlY3QobWF0Y2hUZXh0cy5zb3J0KGNvbXBhcnRvcikpLnRvRXF1YWwoXG4gICAgICAgIFsnZ2V0QXp6eigpJywgJ2FhX2dldEFhYSgpJ11cbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICBpdCgncHJlZmVycyBub24tcHJlZml4IGNhc2Ugc2Vuc2l0aXZlIG1hdGNoZXMgdG8gY2FzZSBpbnNlbnNpdGl2ZSBub24tcHJlZml4IG1hdGNoZXMgKyBhbHBoYWJldGljYWwgb3JkZXInLCAoKSA9PiB7XG4gICAgICB2YXIgbWF0Y2hUZXh0cyA9IFsnYWFfZ2V0YWFhKCknLCAnenpfZ2V0QWFhKCknXTtcbiAgICAgIHZhciBjb21wYXJ0b3IgPSBjb21wYXJlSGFja0NvbXBsZXRpb25zKCdnZXRBJyk7XG4gICAgICBleHBlY3QobWF0Y2hUZXh0cy5zb3J0KGNvbXBhcnRvcikpLnRvRXF1YWwoXG4gICAgICAgIFsnenpfZ2V0QWFhKCknLCAnYWFfZ2V0YWFhKCknXVxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIGl0KCdwcmVmZXJzIGFscGhhYmV0aWNhbCBvcmRlciB3aGVuIGJvdGggYXJlIG9mIHRoZSBzYW1lIHR5cGUnLCAoKSA9PiB7XG4gICAgICB2YXIgbWF0Y2hUZXh0cyA9IFsnenpfZ2V0QWFhKCknLCAnYWFfZ2V0QWFhKCknXTtcbiAgICAgIHZhciBjb21wYXJ0b3IgPSBjb21wYXJlSGFja0NvbXBsZXRpb25zKCdnZXRBJyk7XG4gICAgICBleHBlY3QobWF0Y2hUZXh0cy5zb3J0KGNvbXBhcnRvcikpLnRvRXF1YWwoXG4gICAgICAgIFsnYWFfZ2V0QWFhKCknLCAnenpfZ2V0QWFhKCknXVxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIGl0KCdwZW5hbGl6ZXMgYSBtYXRjaCBpZiBpcyBwcml2YXRlIGZ1bmN0aW9uLCBldmVuIGlmIG1hdGNoaW5nIHdpdGggY2FzZSBzZW5zaXRpdml0eScsICgpID0+IHtcbiAgICAgIHZhciBtYXRjaFRleHRzID0gWydfYWFfZ2V0QWFhKCknLCAnenpfZ2V0YWFhYSgpJ107XG4gICAgICB2YXIgY29tcGFydG9yID0gY29tcGFyZUhhY2tDb21wbGV0aW9ucygnZ2V0QScpO1xuICAgICAgZXhwZWN0KG1hdGNoVGV4dHMuc29ydChjb21wYXJ0b3IpKS50b0VxdWFsKFxuICAgICAgICBbJ3p6X2dldGFhYWEoKScsICdfYWFfZ2V0QWFhKCknXVxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIGl0KCdzb3J0cyB0aGUgY29tcGxldGlvbiByZXN1bHRzIGluIGEgbWVhbmluZ2Z1bCBvcmRlcicsICgpID0+IHtcbiAgICAgIHZhciBtYXRjaFRleHRzID0gWydfZ2V0QWJjKCknLCAnX2dldEFhYigpJywgJ2dldEFwcGVuZCgpJywgJ2dldEFkZGVuZHVtKCknLCAnZG9PckdldEFDdXAoKScsICdfZG9PckdldEFDdXAoKSddO1xuICAgICAgdmFyIGNvbXBhcnRvciA9IGNvbXBhcmVIYWNrQ29tcGxldGlvbnMoJ2dldEEnKTtcbiAgICAgIGV4cGVjdChtYXRjaFRleHRzLnNvcnQoY29tcGFydG9yKSkudG9FcXVhbChcbiAgICAgICAgWydnZXRBZGRlbmR1bSgpJywgJ2dldEFwcGVuZCgpJywgJ2RvT3JHZXRBQ3VwKCknLCAnX2dldEFhYigpJywgJ19nZXRBYmMoKScsICdfZG9PckdldEFDdXAoKSddXG4gICAgICApO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19