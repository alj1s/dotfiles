// Type definitions for Node.js v0.12.0
// Project: http://nodejs.org/
// Definitions by: Microsoft TypeScript <http://typescriptlang.org>, DefinitelyTyped <https://github.com/borisyankov/DefinitelyTyped>
// Definitions: https://github.com/borisyankov/DefinitelyTyped
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2FuZHJld2pvbmVzLy5kb3RmaWxlcy9hdG9tL3BhY2thZ2VzL2F0b20tdHlwZXNjcmlwdC9saWIvdHlwaW5ncy9ub2RlL25vZGUuZC50cyIsInNvdXJjZXMiOlsiL1VzZXJzL2FuZHJld2pvbmVzLy5kb3RmaWxlcy9hdG9tL3BhY2thZ2VzL2F0b20tdHlwZXNjcmlwdC9saWIvdHlwaW5ncy9ub2RlL25vZGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1Q0FBdUM7QUFDdkMsOEJBQThCO0FBQzlCLHFJQUFxSTtBQUNySSw4REFBOEQ7QUE4MkM3RCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFR5cGUgZGVmaW5pdGlvbnMgZm9yIE5vZGUuanMgdjAuMTIuMFxuLy8gUHJvamVjdDogaHR0cDovL25vZGVqcy5vcmcvXG4vLyBEZWZpbml0aW9ucyBieTogTWljcm9zb2Z0IFR5cGVTY3JpcHQgPGh0dHA6Ly90eXBlc2NyaXB0bGFuZy5vcmc+LCBEZWZpbml0ZWx5VHlwZWQgPGh0dHBzOi8vZ2l0aHViLmNvbS9ib3Jpc3lhbmtvdi9EZWZpbml0ZWx5VHlwZWQ+XG4vLyBEZWZpbml0aW9uczogaHR0cHM6Ly9naXRodWIuY29tL2JvcmlzeWFua292L0RlZmluaXRlbHlUeXBlZFxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqXG4qICAgICAgICAgICAgICAgTm9kZS5qcyB2MC4xMi4wIEFQSSAgICAgICAgICAgICAqXG4qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiogICAgICAgICAgICAgICAgICAgR0xPQkFMICAgICAgICAgICAgICAgICAgICAgICpcbiogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbmRlY2xhcmUgdmFyIHByb2Nlc3M6IE5vZGVKUy5Qcm9jZXNzO1xuZGVjbGFyZSB2YXIgZ2xvYmFsOiBhbnk7XG5cbmRlY2xhcmUgdmFyIF9fZmlsZW5hbWU6IHN0cmluZztcbmRlY2xhcmUgdmFyIF9fZGlybmFtZTogc3RyaW5nO1xuXG5kZWNsYXJlIGZ1bmN0aW9uIHNldFRpbWVvdXQoY2FsbGJhY2s6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCwgbXM6IG51bWJlciwgLi4uYXJnczogYW55W10pOiBOb2RlSlMuVGltZXI7XG5kZWNsYXJlIGZ1bmN0aW9uIGNsZWFyVGltZW91dCh0aW1lb3V0SWQ6IE5vZGVKUy5UaW1lcik6IHZvaWQ7XG5kZWNsYXJlIGZ1bmN0aW9uIHNldEludGVydmFsKGNhbGxiYWNrOiAoLi4uYXJnczogYW55W10pID0+IHZvaWQsIG1zOiBudW1iZXIsIC4uLmFyZ3M6IGFueVtdKTogTm9kZUpTLlRpbWVyO1xuZGVjbGFyZSBmdW5jdGlvbiBjbGVhckludGVydmFsKGludGVydmFsSWQ6IE5vZGVKUy5UaW1lcik6IHZvaWQ7XG5kZWNsYXJlIGZ1bmN0aW9uIHNldEltbWVkaWF0ZShjYWxsYmFjazogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkLCAuLi5hcmdzOiBhbnlbXSk6IGFueTtcbmRlY2xhcmUgZnVuY3Rpb24gY2xlYXJJbW1lZGlhdGUoaW1tZWRpYXRlSWQ6IGFueSk6IHZvaWQ7XG5cbmRlY2xhcmUgdmFyIHJlcXVpcmU6IHtcbiAgICAoaWQ6IHN0cmluZyk6IGFueTtcbiAgICByZXNvbHZlKGlkOnN0cmluZyk6IHN0cmluZztcbiAgICBjYWNoZTogYW55O1xuICAgIGV4dGVuc2lvbnM6IGFueTtcbiAgICBtYWluOiBhbnk7XG59O1xuXG5kZWNsYXJlIHZhciBtb2R1bGU6IHtcbiAgICBleHBvcnRzOiBhbnk7XG4gICAgcmVxdWlyZShpZDogc3RyaW5nKTogYW55O1xuICAgIGlkOiBzdHJpbmc7XG4gICAgZmlsZW5hbWU6IHN0cmluZztcbiAgICBsb2FkZWQ6IGJvb2xlYW47XG4gICAgcGFyZW50OiBhbnk7XG4gICAgY2hpbGRyZW46IGFueVtdO1xufTtcblxuLy8gU2FtZSBhcyBtb2R1bGUuZXhwb3J0c1xuZGVjbGFyZSB2YXIgZXhwb3J0czogYW55O1xuZGVjbGFyZSB2YXIgU2xvd0J1ZmZlcjoge1xuICAgIG5ldyAoc3RyOiBzdHJpbmcsIGVuY29kaW5nPzogc3RyaW5nKTogQnVmZmVyO1xuICAgIG5ldyAoc2l6ZTogbnVtYmVyKTogQnVmZmVyO1xuICAgIG5ldyAoc2l6ZTogVWludDhBcnJheSk6IEJ1ZmZlcjtcbiAgICBuZXcgKGFycmF5OiBhbnlbXSk6IEJ1ZmZlcjtcbiAgICBwcm90b3R5cGU6IEJ1ZmZlcjtcbiAgICBpc0J1ZmZlcihvYmo6IGFueSk6IGJvb2xlYW47XG4gICAgYnl0ZUxlbmd0aChzdHJpbmc6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcpOiBudW1iZXI7XG4gICAgY29uY2F0KGxpc3Q6IEJ1ZmZlcltdLCB0b3RhbExlbmd0aD86IG51bWJlcik6IEJ1ZmZlcjtcbn07XG5cblxuLy8gQnVmZmVyIGNsYXNzXG5pbnRlcmZhY2UgQnVmZmVyIGV4dGVuZHMgTm9kZUJ1ZmZlciB7fVxuZGVjbGFyZSB2YXIgQnVmZmVyOiB7XG4gICAgbmV3IChzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcpOiBCdWZmZXI7XG4gICAgbmV3IChzaXplOiBudW1iZXIpOiBCdWZmZXI7XG4gICAgbmV3IChzaXplOiBVaW50OEFycmF5KTogQnVmZmVyO1xuICAgIG5ldyAoYXJyYXk6IGFueVtdKTogQnVmZmVyO1xuICAgIHByb3RvdHlwZTogQnVmZmVyO1xuICAgIGlzQnVmZmVyKG9iajogYW55KTogYm9vbGVhbjtcbiAgICBieXRlTGVuZ3RoKHN0cmluZzogc3RyaW5nLCBlbmNvZGluZz86IHN0cmluZyk6IG51bWJlcjtcbiAgICBjb25jYXQobGlzdDogQnVmZmVyW10sIHRvdGFsTGVuZ3RoPzogbnVtYmVyKTogQnVmZmVyO1xufTtcblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKlxuKiAgICAgICAgICAgICAgIEdMT0JBTCBJTlRFUkZBQ0VTICAgICAgICAgICAgICAgKlxuKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKlxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuZGVjbGFyZSBtb2R1bGUgTm9kZUpTIHtcbiAgICBleHBvcnQgaW50ZXJmYWNlIEVycm5vRXhjZXB0aW9uIGV4dGVuZHMgRXJyb3Ige1xuICAgICAgICBlcnJubz86IGFueTtcbiAgICAgICAgY29kZT86IHN0cmluZztcbiAgICAgICAgcGF0aD86IHN0cmluZztcbiAgICAgICAgc3lzY2FsbD86IHN0cmluZztcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIEV2ZW50RW1pdHRlciB7XG4gICAgICAgIGFkZExpc3RlbmVyKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbik6IEV2ZW50RW1pdHRlcjtcbiAgICAgICAgb24oZXZlbnQ6IHN0cmluZywgbGlzdGVuZXI6IEZ1bmN0aW9uKTogRXZlbnRFbWl0dGVyO1xuICAgICAgICBvbmNlKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbik6IEV2ZW50RW1pdHRlcjtcbiAgICAgICAgcmVtb3ZlTGlzdGVuZXIoZXZlbnQ6IHN0cmluZywgbGlzdGVuZXI6IEZ1bmN0aW9uKTogRXZlbnRFbWl0dGVyO1xuICAgICAgICByZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnQ/OiBzdHJpbmcpOiBFdmVudEVtaXR0ZXI7XG4gICAgICAgIHNldE1heExpc3RlbmVycyhuOiBudW1iZXIpOiB2b2lkO1xuICAgICAgICBsaXN0ZW5lcnMoZXZlbnQ6IHN0cmluZyk6IEZ1bmN0aW9uW107XG4gICAgICAgIGVtaXQoZXZlbnQ6IHN0cmluZywgLi4uYXJnczogYW55W10pOiBib29sZWFuO1xuICAgIH1cblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgUmVhZGFibGVTdHJlYW0gZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICAgICAgICByZWFkYWJsZTogYm9vbGVhbjtcbiAgICAgICAgcmVhZChzaXplPzogbnVtYmVyKTogYW55O1xuICAgICAgICBzZXRFbmNvZGluZyhlbmNvZGluZzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgcGF1c2UoKTogdm9pZDtcbiAgICAgICAgcmVzdW1lKCk6IHZvaWQ7XG4gICAgICAgIHBpcGU8VCBleHRlbmRzIFdyaXRhYmxlU3RyZWFtPihkZXN0aW5hdGlvbjogVCwgb3B0aW9ucz86IHsgZW5kPzogYm9vbGVhbjsgfSk6IFQ7XG4gICAgICAgIHVucGlwZTxUIGV4dGVuZHMgV3JpdGFibGVTdHJlYW0+KGRlc3RpbmF0aW9uPzogVCk6IHZvaWQ7XG4gICAgICAgIHVuc2hpZnQoY2h1bms6IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgIHVuc2hpZnQoY2h1bms6IEJ1ZmZlcik6IHZvaWQ7XG4gICAgICAgIHdyYXAob2xkU3RyZWFtOiBSZWFkYWJsZVN0cmVhbSk6IFJlYWRhYmxlU3RyZWFtO1xuICAgIH1cblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgV3JpdGFibGVTdHJlYW0gZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICAgICAgICB3cml0YWJsZTogYm9vbGVhbjtcbiAgICAgICAgd3JpdGUoYnVmZmVyOiBCdWZmZXIsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IGJvb2xlYW47XG4gICAgICAgIHdyaXRlKHN0cjogc3RyaW5nLCBlbmNvZGluZz86IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IGJvb2xlYW47XG4gICAgICAgIGVuZCgpOiB2b2lkO1xuICAgICAgICBlbmQoYnVmZmVyOiBCdWZmZXIsIGNiPzogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICBlbmQoc3RyOiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICBlbmQoc3RyOiBzdHJpbmcsIGVuY29kaW5nPzogc3RyaW5nLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFJlYWRXcml0ZVN0cmVhbSBleHRlbmRzIFJlYWRhYmxlU3RyZWFtLCBXcml0YWJsZVN0cmVhbSB7fVxuXG4gICAgZXhwb3J0IGludGVyZmFjZSBQcm9jZXNzIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgICAgICAgc3Rkb3V0OiBXcml0YWJsZVN0cmVhbTtcbiAgICAgICAgc3RkZXJyOiBXcml0YWJsZVN0cmVhbTtcbiAgICAgICAgc3RkaW46IFJlYWRhYmxlU3RyZWFtO1xuICAgICAgICBhcmd2OiBzdHJpbmdbXTtcbiAgICAgICAgZXhlY1BhdGg6IHN0cmluZztcbiAgICAgICAgYWJvcnQoKTogdm9pZDtcbiAgICAgICAgY2hkaXIoZGlyZWN0b3J5OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBjd2QoKTogc3RyaW5nO1xuICAgICAgICBlbnY6IGFueTtcbiAgICAgICAgZXhpdChjb2RlPzogbnVtYmVyKTogdm9pZDtcbiAgICAgICAgZ2V0Z2lkKCk6IG51bWJlcjtcbiAgICAgICAgc2V0Z2lkKGlkOiBudW1iZXIpOiB2b2lkO1xuICAgICAgICBzZXRnaWQoaWQ6IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgIGdldHVpZCgpOiBudW1iZXI7XG4gICAgICAgIHNldHVpZChpZDogbnVtYmVyKTogdm9pZDtcbiAgICAgICAgc2V0dWlkKGlkOiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICB2ZXJzaW9uOiBzdHJpbmc7XG4gICAgICAgIHZlcnNpb25zOiB7XG4gICAgICAgICAgICBodHRwX3BhcnNlcjogc3RyaW5nO1xuICAgICAgICAgICAgbm9kZTogc3RyaW5nO1xuICAgICAgICAgICAgdjg6IHN0cmluZztcbiAgICAgICAgICAgIGFyZXM6IHN0cmluZztcbiAgICAgICAgICAgIHV2OiBzdHJpbmc7XG4gICAgICAgICAgICB6bGliOiBzdHJpbmc7XG4gICAgICAgICAgICBvcGVuc3NsOiBzdHJpbmc7XG4gICAgICAgIH07XG4gICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgdGFyZ2V0X2RlZmF1bHRzOiB7XG4gICAgICAgICAgICAgICAgY2ZsYWdzOiBhbnlbXTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0X2NvbmZpZ3VyYXRpb246IHN0cmluZztcbiAgICAgICAgICAgICAgICBkZWZpbmVzOiBzdHJpbmdbXTtcbiAgICAgICAgICAgICAgICBpbmNsdWRlX2RpcnM6IHN0cmluZ1tdO1xuICAgICAgICAgICAgICAgIGxpYnJhcmllczogc3RyaW5nW107XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgICAgICAgY2xhbmc6IG51bWJlcjtcbiAgICAgICAgICAgICAgICBob3N0X2FyY2g6IHN0cmluZztcbiAgICAgICAgICAgICAgICBub2RlX2luc3RhbGxfbnBtOiBib29sZWFuO1xuICAgICAgICAgICAgICAgIG5vZGVfaW5zdGFsbF93YWY6IGJvb2xlYW47XG4gICAgICAgICAgICAgICAgbm9kZV9wcmVmaXg6IHN0cmluZztcbiAgICAgICAgICAgICAgICBub2RlX3NoYXJlZF9vcGVuc3NsOiBib29sZWFuO1xuICAgICAgICAgICAgICAgIG5vZGVfc2hhcmVkX3Y4OiBib29sZWFuO1xuICAgICAgICAgICAgICAgIG5vZGVfc2hhcmVkX3psaWI6IGJvb2xlYW47XG4gICAgICAgICAgICAgICAgbm9kZV91c2VfZHRyYWNlOiBib29sZWFuO1xuICAgICAgICAgICAgICAgIG5vZGVfdXNlX2V0dzogYm9vbGVhbjtcbiAgICAgICAgICAgICAgICBub2RlX3VzZV9vcGVuc3NsOiBib29sZWFuO1xuICAgICAgICAgICAgICAgIHRhcmdldF9hcmNoOiBzdHJpbmc7XG4gICAgICAgICAgICAgICAgdjhfbm9fc3RyaWN0X2FsaWFzaW5nOiBudW1iZXI7XG4gICAgICAgICAgICAgICAgdjhfdXNlX3NuYXBzaG90OiBib29sZWFuO1xuICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IHN0cmluZztcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIGtpbGwocGlkOiBudW1iZXIsIHNpZ25hbD86IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgIHBpZDogbnVtYmVyO1xuICAgICAgICB0aXRsZTogc3RyaW5nO1xuICAgICAgICBhcmNoOiBzdHJpbmc7XG4gICAgICAgIHBsYXRmb3JtOiBzdHJpbmc7XG4gICAgICAgIG1lbW9yeVVzYWdlKCk6IHsgcnNzOiBudW1iZXI7IGhlYXBUb3RhbDogbnVtYmVyOyBoZWFwVXNlZDogbnVtYmVyOyB9O1xuICAgICAgICBuZXh0VGljayhjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICB1bWFzayhtYXNrPzogbnVtYmVyKTogbnVtYmVyO1xuICAgICAgICB1cHRpbWUoKTogbnVtYmVyO1xuICAgICAgICBocnRpbWUodGltZT86bnVtYmVyW10pOiBudW1iZXJbXTtcblxuICAgICAgICAvLyBXb3JrZXJcbiAgICAgICAgc2VuZD8obWVzc2FnZTogYW55LCBzZW5kSGFuZGxlPzogYW55KTogdm9pZDtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFRpbWVyIHtcbiAgICAgICAgcmVmKCkgOiB2b2lkO1xuICAgICAgICB1bnJlZigpIDogdm9pZDtcbiAgICB9XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWRcbiAqL1xuaW50ZXJmYWNlIE5vZGVCdWZmZXIge1xuICAgIFtpbmRleDogbnVtYmVyXTogbnVtYmVyO1xuICAgIHdyaXRlKHN0cmluZzogc3RyaW5nLCBvZmZzZXQ/OiBudW1iZXIsIGxlbmd0aD86IG51bWJlciwgZW5jb2Rpbmc/OiBzdHJpbmcpOiBudW1iZXI7XG4gICAgdG9TdHJpbmcoZW5jb2Rpbmc/OiBzdHJpbmcsIHN0YXJ0PzogbnVtYmVyLCBlbmQ/OiBudW1iZXIpOiBzdHJpbmc7XG4gICAgdG9KU09OKCk6IGFueTtcbiAgICBsZW5ndGg6IG51bWJlcjtcbiAgICBjb3B5KHRhcmdldEJ1ZmZlcjogQnVmZmVyLCB0YXJnZXRTdGFydD86IG51bWJlciwgc291cmNlU3RhcnQ/OiBudW1iZXIsIHNvdXJjZUVuZD86IG51bWJlcik6IG51bWJlcjtcbiAgICBzbGljZShzdGFydD86IG51bWJlciwgZW5kPzogbnVtYmVyKTogQnVmZmVyO1xuICAgIHJlYWRVSW50OChvZmZzZXQ6IG51bWJlciwgbm9Bc3NldD86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgcmVhZFVJbnQxNkxFKG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgcmVhZFVJbnQxNkJFKG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgcmVhZFVJbnQzMkxFKG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgcmVhZFVJbnQzMkJFKG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgcmVhZEludDgob2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IG51bWJlcjtcbiAgICByZWFkSW50MTZMRShvZmZzZXQ6IG51bWJlciwgbm9Bc3NlcnQ/OiBib29sZWFuKTogbnVtYmVyO1xuICAgIHJlYWRJbnQxNkJFKG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgcmVhZEludDMyTEUob2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IG51bWJlcjtcbiAgICByZWFkSW50MzJCRShvZmZzZXQ6IG51bWJlciwgbm9Bc3NlcnQ/OiBib29sZWFuKTogbnVtYmVyO1xuICAgIHJlYWRGbG9hdExFKG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgcmVhZEZsb2F0QkUob2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IG51bWJlcjtcbiAgICByZWFkRG91YmxlTEUob2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IG51bWJlcjtcbiAgICByZWFkRG91YmxlQkUob2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IG51bWJlcjtcbiAgICB3cml0ZVVJbnQ4KHZhbHVlOiBudW1iZXIsIG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHdyaXRlVUludDE2TEUodmFsdWU6IG51bWJlciwgb2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgd3JpdGVVSW50MTZCRSh2YWx1ZTogbnVtYmVyLCBvZmZzZXQ6IG51bWJlciwgbm9Bc3NlcnQ/OiBib29sZWFuKTogdm9pZDtcbiAgICB3cml0ZVVJbnQzMkxFKHZhbHVlOiBudW1iZXIsIG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHdyaXRlVUludDMyQkUodmFsdWU6IG51bWJlciwgb2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgd3JpdGVJbnQ4KHZhbHVlOiBudW1iZXIsIG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHdyaXRlSW50MTZMRSh2YWx1ZTogbnVtYmVyLCBvZmZzZXQ6IG51bWJlciwgbm9Bc3NlcnQ/OiBib29sZWFuKTogdm9pZDtcbiAgICB3cml0ZUludDE2QkUodmFsdWU6IG51bWJlciwgb2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgd3JpdGVJbnQzMkxFKHZhbHVlOiBudW1iZXIsIG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHdyaXRlSW50MzJCRSh2YWx1ZTogbnVtYmVyLCBvZmZzZXQ6IG51bWJlciwgbm9Bc3NlcnQ/OiBib29sZWFuKTogdm9pZDtcbiAgICB3cml0ZUZsb2F0TEUodmFsdWU6IG51bWJlciwgb2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgd3JpdGVGbG9hdEJFKHZhbHVlOiBudW1iZXIsIG9mZnNldDogbnVtYmVyLCBub0Fzc2VydD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHdyaXRlRG91YmxlTEUodmFsdWU6IG51bWJlciwgb2Zmc2V0OiBudW1iZXIsIG5vQXNzZXJ0PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgd3JpdGVEb3VibGVCRSh2YWx1ZTogbnVtYmVyLCBvZmZzZXQ6IG51bWJlciwgbm9Bc3NlcnQ/OiBib29sZWFuKTogdm9pZDtcbiAgICBmaWxsKHZhbHVlOiBhbnksIG9mZnNldD86IG51bWJlciwgZW5kPzogbnVtYmVyKTogdm9pZDtcbn1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKlxuKiAgICAgICAgICAgICAgICAgICBNT0RVTEVTICAgICAgICAgICAgICAgICAgICAgKlxuKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKlxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuZGVjbGFyZSBtb2R1bGUgXCJidWZmZXJcIiB7XG4gICAgZXhwb3J0IHZhciBJTlNQRUNUX01BWF9CWVRFUzogbnVtYmVyO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcInF1ZXJ5c3RyaW5nXCIge1xuICAgIGV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnkob2JqOiBhbnksIHNlcD86IHN0cmluZywgZXE/OiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHBhcnNlKHN0cjogc3RyaW5nLCBzZXA/OiBzdHJpbmcsIGVxPzogc3RyaW5nLCBvcHRpb25zPzogeyBtYXhLZXlzPzogbnVtYmVyOyB9KTogYW55O1xuICAgIGV4cG9ydCBmdW5jdGlvbiBlc2NhcGUoc3RyOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHVuZXNjYXBlKHN0cjogc3RyaW5nKTogc3RyaW5nO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcImV2ZW50c1wiIHtcbiAgICBleHBvcnQgY2xhc3MgRXZlbnRFbWl0dGVyIGltcGxlbWVudHMgTm9kZUpTLkV2ZW50RW1pdHRlciB7XG4gICAgICAgIHN0YXRpYyBsaXN0ZW5lckNvdW50KGVtaXR0ZXI6IEV2ZW50RW1pdHRlciwgZXZlbnQ6IHN0cmluZyk6IG51bWJlcjtcblxuICAgICAgICBhZGRMaXN0ZW5lcihldmVudDogc3RyaW5nLCBsaXN0ZW5lcjogRnVuY3Rpb24pOiBFdmVudEVtaXR0ZXI7XG4gICAgICAgIG9uKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbik6IEV2ZW50RW1pdHRlcjtcbiAgICAgICAgb25jZShldmVudDogc3RyaW5nLCBsaXN0ZW5lcjogRnVuY3Rpb24pOiBFdmVudEVtaXR0ZXI7XG4gICAgICAgIHJlbW92ZUxpc3RlbmVyKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbik6IEV2ZW50RW1pdHRlcjtcbiAgICAgICAgcmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50Pzogc3RyaW5nKTogRXZlbnRFbWl0dGVyO1xuICAgICAgICBzZXRNYXhMaXN0ZW5lcnMobjogbnVtYmVyKTogdm9pZDtcbiAgICAgICAgbGlzdGVuZXJzKGV2ZW50OiBzdHJpbmcpOiBGdW5jdGlvbltdO1xuICAgICAgICBlbWl0KGV2ZW50OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKTogYm9vbGVhbjtcbiAgIH1cbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJodHRwXCIge1xuICAgIGltcG9ydCBldmVudHMgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuICAgIGltcG9ydCBuZXQgPSByZXF1aXJlKFwibmV0XCIpO1xuICAgIGltcG9ydCBzdHJlYW0gPSByZXF1aXJlKFwic3RyZWFtXCIpO1xuXG4gICAgZXhwb3J0IGludGVyZmFjZSBTZXJ2ZXIgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyIHtcbiAgICAgICAgbGlzdGVuKHBvcnQ6IG51bWJlciwgaG9zdG5hbWU/OiBzdHJpbmcsIGJhY2tsb2c/OiBudW1iZXIsIGNhbGxiYWNrPzogRnVuY3Rpb24pOiBTZXJ2ZXI7XG4gICAgICAgIGxpc3RlbihwYXRoOiBzdHJpbmcsIGNhbGxiYWNrPzogRnVuY3Rpb24pOiBTZXJ2ZXI7XG4gICAgICAgIGxpc3RlbihoYW5kbGU6IGFueSwgbGlzdGVuaW5nTGlzdGVuZXI/OiBGdW5jdGlvbik6IFNlcnZlcjtcbiAgICAgICAgY2xvc2UoY2I/OiBhbnkpOiBTZXJ2ZXI7XG4gICAgICAgIGFkZHJlc3MoKTogeyBwb3J0OiBudW1iZXI7IGZhbWlseTogc3RyaW5nOyBhZGRyZXNzOiBzdHJpbmc7IH07XG4gICAgICAgIG1heEhlYWRlcnNDb3VudDogbnVtYmVyO1xuICAgIH1cbiAgICBleHBvcnQgaW50ZXJmYWNlIFNlcnZlclJlcXVlc3QgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyLCBzdHJlYW0uUmVhZGFibGUge1xuICAgICAgICBtZXRob2Q6IHN0cmluZztcbiAgICAgICAgdXJsOiBzdHJpbmc7XG4gICAgICAgIGhlYWRlcnM6IGFueTtcbiAgICAgICAgdHJhaWxlcnM6IHN0cmluZztcbiAgICAgICAgaHR0cFZlcnNpb246IHN0cmluZztcbiAgICAgICAgc2V0RW5jb2RpbmcoZW5jb2Rpbmc/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBwYXVzZSgpOiB2b2lkO1xuICAgICAgICByZXN1bWUoKTogdm9pZDtcbiAgICAgICAgY29ubmVjdGlvbjogbmV0LlNvY2tldDtcbiAgICB9XG4gICAgZXhwb3J0IGludGVyZmFjZSBTZXJ2ZXJSZXNwb25zZSBleHRlbmRzIGV2ZW50cy5FdmVudEVtaXR0ZXIsIHN0cmVhbS5Xcml0YWJsZSB7XG4gICAgICAgIC8vIEV4dGVuZGVkIGJhc2UgbWV0aG9kc1xuICAgICAgICB3cml0ZShidWZmZXI6IEJ1ZmZlcik6IGJvb2xlYW47XG4gICAgICAgIHdyaXRlKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogYm9vbGVhbjtcbiAgICAgICAgd3JpdGUoc3RyOiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcsIGZkPzogc3RyaW5nKTogYm9vbGVhbjtcblxuICAgICAgICB3cml0ZUNvbnRpbnVlKCk6IHZvaWQ7XG4gICAgICAgIHdyaXRlSGVhZChzdGF0dXNDb2RlOiBudW1iZXIsIHJlYXNvblBocmFzZT86IHN0cmluZywgaGVhZGVycz86IGFueSk6IHZvaWQ7XG4gICAgICAgIHdyaXRlSGVhZChzdGF0dXNDb2RlOiBudW1iZXIsIGhlYWRlcnM/OiBhbnkpOiB2b2lkO1xuICAgICAgICBzdGF0dXNDb2RlOiBudW1iZXI7XG4gICAgICAgIHNldEhlYWRlcihuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBzZW5kRGF0ZTogYm9vbGVhbjtcbiAgICAgICAgZ2V0SGVhZGVyKG5hbWU6IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgcmVtb3ZlSGVhZGVyKG5hbWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgIHdyaXRlKGNodW5rOiBhbnksIGVuY29kaW5nPzogc3RyaW5nKTogYW55O1xuICAgICAgICBhZGRUcmFpbGVycyhoZWFkZXJzOiBhbnkpOiB2b2lkO1xuXG4gICAgICAgIC8vIEV4dGVuZGVkIGJhc2UgbWV0aG9kc1xuICAgICAgICBlbmQoKTogdm9pZDtcbiAgICAgICAgZW5kKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBlbmNvZGluZz86IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgICAgIGVuZChkYXRhPzogYW55LCBlbmNvZGluZz86IHN0cmluZyk6IHZvaWQ7XG4gICAgfVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgQ2xpZW50UmVxdWVzdCBleHRlbmRzIGV2ZW50cy5FdmVudEVtaXR0ZXIsIHN0cmVhbS5Xcml0YWJsZSB7XG4gICAgICAgIC8vIEV4dGVuZGVkIGJhc2UgbWV0aG9kc1xuICAgICAgICB3cml0ZShidWZmZXI6IEJ1ZmZlcik6IGJvb2xlYW47XG4gICAgICAgIHdyaXRlKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogYm9vbGVhbjtcbiAgICAgICAgd3JpdGUoc3RyOiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcsIGZkPzogc3RyaW5nKTogYm9vbGVhbjtcblxuICAgICAgICB3cml0ZShjaHVuazogYW55LCBlbmNvZGluZz86IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgIGFib3J0KCk6IHZvaWQ7XG4gICAgICAgIHNldFRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgc2V0Tm9EZWxheShub0RlbGF5PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgICAgIHNldFNvY2tldEtlZXBBbGl2ZShlbmFibGU/OiBib29sZWFuLCBpbml0aWFsRGVsYXk/OiBudW1iZXIpOiB2b2lkO1xuXG4gICAgICAgIC8vIEV4dGVuZGVkIGJhc2UgbWV0aG9kc1xuICAgICAgICBlbmQoKTogdm9pZDtcbiAgICAgICAgZW5kKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBlbmNvZGluZz86IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgICAgIGVuZChkYXRhPzogYW55LCBlbmNvZGluZz86IHN0cmluZyk6IHZvaWQ7XG4gICAgfVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgQ2xpZW50UmVzcG9uc2UgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyLCBzdHJlYW0uUmVhZGFibGUge1xuICAgICAgICBzdGF0dXNDb2RlOiBudW1iZXI7XG4gICAgICAgIGh0dHBWZXJzaW9uOiBzdHJpbmc7XG4gICAgICAgIGhlYWRlcnM6IGFueTtcbiAgICAgICAgdHJhaWxlcnM6IGFueTtcbiAgICAgICAgc2V0RW5jb2RpbmcoZW5jb2Rpbmc/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBwYXVzZSgpOiB2b2lkO1xuICAgICAgICByZXN1bWUoKTogdm9pZDtcbiAgICB9XG5cblx0ZXhwb3J0IGludGVyZmFjZSBBZ2VudE9wdGlvbnMge1xuXHRcdC8qKlxuXHRcdCAqIEtlZXAgc29ja2V0cyBhcm91bmQgaW4gYSBwb29sIHRvIGJlIHVzZWQgYnkgb3RoZXIgcmVxdWVzdHMgaW4gdGhlIGZ1dHVyZS4gRGVmYXVsdCA9IGZhbHNlXG5cdFx0ICovXG5cdFx0a2VlcEFsaXZlPzogYm9vbGVhbjtcblx0XHQvKipcblx0XHQgKiBXaGVuIHVzaW5nIEhUVFAgS2VlcEFsaXZlLCBob3cgb2Z0ZW4gdG8gc2VuZCBUQ1AgS2VlcEFsaXZlIHBhY2tldHMgb3ZlciBzb2NrZXRzIGJlaW5nIGtlcHQgYWxpdmUuIERlZmF1bHQgPSAxMDAwLlxuXHRcdCAqIE9ubHkgcmVsZXZhbnQgaWYga2VlcEFsaXZlIGlzIHNldCB0byB0cnVlLlxuXHRcdCAqL1xuXHRcdGtlZXBBbGl2ZU1zZWNzPzogbnVtYmVyO1xuXHRcdC8qKlxuXHRcdCAqIE1heGltdW0gbnVtYmVyIG9mIHNvY2tldHMgdG8gYWxsb3cgcGVyIGhvc3QuIERlZmF1bHQgZm9yIE5vZGUgMC4xMCBpcyA1LCBkZWZhdWx0IGZvciBOb2RlIDAuMTIgaXMgSW5maW5pdHlcblx0XHQgKi9cblx0XHRtYXhTb2NrZXRzPzogbnVtYmVyO1xuXHRcdC8qKlxuXHRcdCAqIE1heGltdW0gbnVtYmVyIG9mIHNvY2tldHMgdG8gbGVhdmUgb3BlbiBpbiBhIGZyZWUgc3RhdGUuIE9ubHkgcmVsZXZhbnQgaWYga2VlcEFsaXZlIGlzIHNldCB0byB0cnVlLiBEZWZhdWx0ID0gMjU2LlxuXHRcdCAqL1xuXHRcdG1heEZyZWVTb2NrZXRzPzogbnVtYmVyO1xuXHR9XG5cbiAgICBleHBvcnQgY2xhc3MgQWdlbnQge1xuXHRcdG1heFNvY2tldHM6IG51bWJlcjtcblx0XHRzb2NrZXRzOiBhbnk7XG5cdFx0cmVxdWVzdHM6IGFueTtcblxuXHRcdGNvbnN0cnVjdG9yKG9wdHM/OiBBZ2VudE9wdGlvbnMpO1xuXG5cdFx0LyoqXG5cdFx0ICogRGVzdHJveSBhbnkgc29ja2V0cyB0aGF0IGFyZSBjdXJyZW50bHkgaW4gdXNlIGJ5IHRoZSBhZ2VudC5cblx0XHQgKiBJdCBpcyB1c3VhbGx5IG5vdCBuZWNlc3NhcnkgdG8gZG8gdGhpcy4gSG93ZXZlciwgaWYgeW91IGFyZSB1c2luZyBhbiBhZ2VudCB3aXRoIEtlZXBBbGl2ZSBlbmFibGVkLFxuXHRcdCAqIHRoZW4gaXQgaXMgYmVzdCB0byBleHBsaWNpdGx5IHNodXQgZG93biB0aGUgYWdlbnQgd2hlbiB5b3Uga25vdyB0aGF0IGl0IHdpbGwgbm8gbG9uZ2VyIGJlIHVzZWQuIE90aGVyd2lzZSxcblx0XHQgKiBzb2NrZXRzIG1heSBoYW5nIG9wZW4gZm9yIHF1aXRlIGEgbG9uZyB0aW1lIGJlZm9yZSB0aGUgc2VydmVyIHRlcm1pbmF0ZXMgdGhlbS5cblx0XHQgKi9cblx0XHRkZXN0cm95KCk6IHZvaWQ7XG5cdH1cblxuICAgIGV4cG9ydCB2YXIgU1RBVFVTX0NPREVTOiB7XG4gICAgICAgIFtlcnJvckNvZGU6IG51bWJlcl06IHN0cmluZztcbiAgICAgICAgW2Vycm9yQ29kZTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlcnZlcihyZXF1ZXN0TGlzdGVuZXI/OiAocmVxdWVzdDogU2VydmVyUmVxdWVzdCwgcmVzcG9uc2U6IFNlcnZlclJlc3BvbnNlKSA9PnZvaWQgKTogU2VydmVyO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGllbnQocG9ydD86IG51bWJlciwgaG9zdD86IHN0cmluZyk6IGFueTtcbiAgICBleHBvcnQgZnVuY3Rpb24gcmVxdWVzdChvcHRpb25zOiBhbnksIGNhbGxiYWNrPzogRnVuY3Rpb24pOiBDbGllbnRSZXF1ZXN0O1xuICAgIGV4cG9ydCBmdW5jdGlvbiBnZXQob3B0aW9uczogYW55LCBjYWxsYmFjaz86IEZ1bmN0aW9uKTogQ2xpZW50UmVxdWVzdDtcbiAgICBleHBvcnQgdmFyIGdsb2JhbEFnZW50OiBBZ2VudDtcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJjbHVzdGVyXCIge1xuICAgIGltcG9ydCBjaGlsZCAgPSByZXF1aXJlKFwiY2hpbGRfcHJvY2Vzc1wiKTtcbiAgICBpbXBvcnQgZXZlbnRzID0gcmVxdWlyZShcImV2ZW50c1wiKTtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgQ2x1c3RlclNldHRpbmdzIHtcbiAgICAgICAgZXhlYz86IHN0cmluZztcbiAgICAgICAgYXJncz86IHN0cmluZ1tdO1xuICAgICAgICBzaWxlbnQ/OiBib29sZWFuO1xuICAgIH1cblxuICAgIGV4cG9ydCBjbGFzcyBXb3JrZXIgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyIHtcbiAgICAgICAgaWQ6IHN0cmluZztcbiAgICAgICAgcHJvY2VzczogY2hpbGQuQ2hpbGRQcm9jZXNzO1xuICAgICAgICBzdWljaWRlOiBib29sZWFuO1xuICAgICAgICBzZW5kKG1lc3NhZ2U6IGFueSwgc2VuZEhhbmRsZT86IGFueSk6IHZvaWQ7XG4gICAgICAgIGtpbGwoc2lnbmFsPzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgZGVzdHJveShzaWduYWw/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBkaXNjb25uZWN0KCk6IHZvaWQ7XG4gICAgfVxuXG4gICAgZXhwb3J0IHZhciBzZXR0aW5nczogQ2x1c3RlclNldHRpbmdzO1xuICAgIGV4cG9ydCB2YXIgaXNNYXN0ZXI6IGJvb2xlYW47XG4gICAgZXhwb3J0IHZhciBpc1dvcmtlcjogYm9vbGVhbjtcbiAgICBleHBvcnQgZnVuY3Rpb24gc2V0dXBNYXN0ZXIoc2V0dGluZ3M/OiBDbHVzdGVyU2V0dGluZ3MpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmb3JrKGVudj86IGFueSk6IFdvcmtlcjtcbiAgICBleHBvcnQgZnVuY3Rpb24gZGlzY29ubmVjdChjYWxsYmFjaz86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICBleHBvcnQgdmFyIHdvcmtlcjogV29ya2VyO1xuICAgIGV4cG9ydCB2YXIgd29ya2VyczogV29ya2VyW107XG5cbiAgICAvLyBFdmVudCBlbWl0dGVyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIGFkZExpc3RlbmVyKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIG9uKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbik6IGFueTtcbiAgICBleHBvcnQgZnVuY3Rpb24gb25jZShldmVudDogc3RyaW5nLCBsaXN0ZW5lcjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVMaXN0ZW5lcihldmVudDogc3RyaW5nLCBsaXN0ZW5lcjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnQ/OiBzdHJpbmcpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBzZXRNYXhMaXN0ZW5lcnMobjogbnVtYmVyKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gbGlzdGVuZXJzKGV2ZW50OiBzdHJpbmcpOiBGdW5jdGlvbltdO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBlbWl0KGV2ZW50OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKTogYm9vbGVhbjtcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJ6bGliXCIge1xuICAgIGltcG9ydCBzdHJlYW0gPSByZXF1aXJlKFwic3RyZWFtXCIpO1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgWmxpYk9wdGlvbnMgeyBjaHVua1NpemU/OiBudW1iZXI7IHdpbmRvd0JpdHM/OiBudW1iZXI7IGxldmVsPzogbnVtYmVyOyBtZW1MZXZlbD86IG51bWJlcjsgc3RyYXRlZ3k/OiBudW1iZXI7IGRpY3Rpb25hcnk/OiBhbnk7IH1cblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgR3ppcCBleHRlbmRzIHN0cmVhbS5UcmFuc2Zvcm0geyB9XG4gICAgZXhwb3J0IGludGVyZmFjZSBHdW56aXAgZXh0ZW5kcyBzdHJlYW0uVHJhbnNmb3JtIHsgfVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgRGVmbGF0ZSBleHRlbmRzIHN0cmVhbS5UcmFuc2Zvcm0geyB9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbmZsYXRlIGV4dGVuZHMgc3RyZWFtLlRyYW5zZm9ybSB7IH1cbiAgICBleHBvcnQgaW50ZXJmYWNlIERlZmxhdGVSYXcgZXh0ZW5kcyBzdHJlYW0uVHJhbnNmb3JtIHsgfVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSW5mbGF0ZVJhdyBleHRlbmRzIHN0cmVhbS5UcmFuc2Zvcm0geyB9XG4gICAgZXhwb3J0IGludGVyZmFjZSBVbnppcCBleHRlbmRzIHN0cmVhbS5UcmFuc2Zvcm0geyB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlR3ppcChvcHRpb25zPzogWmxpYk9wdGlvbnMpOiBHemlwO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVHdW56aXAob3B0aW9ucz86IFpsaWJPcHRpb25zKTogR3VuemlwO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWZsYXRlKG9wdGlvbnM/OiBabGliT3B0aW9ucyk6IERlZmxhdGU7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUluZmxhdGUob3B0aW9ucz86IFpsaWJPcHRpb25zKTogSW5mbGF0ZTtcbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVmbGF0ZVJhdyhvcHRpb25zPzogWmxpYk9wdGlvbnMpOiBEZWZsYXRlUmF3O1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbmZsYXRlUmF3KG9wdGlvbnM/OiBabGliT3B0aW9ucyk6IEluZmxhdGVSYXc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVuemlwKG9wdGlvbnM/OiBabGliT3B0aW9ucyk6IFVuemlwO1xuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIGRlZmxhdGUoYnVmOiBCdWZmZXIsIGNhbGxiYWNrOiAoZXJyb3I6IEVycm9yLCByZXN1bHQ6IGFueSkgPT52b2lkICk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGRlZmxhdGVSYXcoYnVmOiBCdWZmZXIsIGNhbGxiYWNrOiAoZXJyb3I6IEVycm9yLCByZXN1bHQ6IGFueSkgPT52b2lkICk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGd6aXAoYnVmOiBCdWZmZXIsIGNhbGxiYWNrOiAoZXJyb3I6IEVycm9yLCByZXN1bHQ6IGFueSkgPT52b2lkICk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGd1bnppcChidWY6IEJ1ZmZlciwgY2FsbGJhY2s6IChlcnJvcjogRXJyb3IsIHJlc3VsdDogYW55KSA9PnZvaWQgKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gaW5mbGF0ZShidWY6IEJ1ZmZlciwgY2FsbGJhY2s6IChlcnJvcjogRXJyb3IsIHJlc3VsdDogYW55KSA9PnZvaWQgKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gaW5mbGF0ZVJhdyhidWY6IEJ1ZmZlciwgY2FsbGJhY2s6IChlcnJvcjogRXJyb3IsIHJlc3VsdDogYW55KSA9PnZvaWQgKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gdW56aXAoYnVmOiBCdWZmZXIsIGNhbGxiYWNrOiAoZXJyb3I6IEVycm9yLCByZXN1bHQ6IGFueSkgPT52b2lkICk6IHZvaWQ7XG5cbiAgICAvLyBDb25zdGFudHNcbiAgICBleHBvcnQgdmFyIFpfTk9fRkxVU0g6IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfUEFSVElBTF9GTFVTSDogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9TWU5DX0ZMVVNIOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX0ZVTExfRkxVU0g6IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfRklOSVNIOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX0JMT0NLOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX1RSRUVTOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX09LOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX1NUUkVBTV9FTkQ6IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfTkVFRF9ESUNUOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX0VSUk5POiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX1NUUkVBTV9FUlJPUjogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9EQVRBX0VSUk9SOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX01FTV9FUlJPUjogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9CVUZfRVJST1I6IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfVkVSU0lPTl9FUlJPUjogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9OT19DT01QUkVTU0lPTjogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9CRVNUX1NQRUVEOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX0JFU1RfQ09NUFJFU1NJT046IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfREVGQVVMVF9DT01QUkVTU0lPTjogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9GSUxURVJFRDogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9IVUZGTUFOX09OTFk6IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfUkxFOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX0ZJWEVEOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX0RFRkFVTFRfU1RSQVRFR1k6IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfQklOQVJZOiBudW1iZXI7XG4gICAgZXhwb3J0IHZhciBaX1RFWFQ6IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfQVNDSUk6IG51bWJlcjtcbiAgICBleHBvcnQgdmFyIFpfVU5LTk9XTjogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9ERUZMQVRFRDogbnVtYmVyO1xuICAgIGV4cG9ydCB2YXIgWl9OVUxMOiBudW1iZXI7XG59XG5cbmRlY2xhcmUgbW9kdWxlIFwib3NcIiB7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHRtcGRpcigpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGhvc3RuYW1lKCk6IHN0cmluZztcbiAgICBleHBvcnQgZnVuY3Rpb24gdHlwZSgpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHBsYXRmb3JtKCk6IHN0cmluZztcbiAgICBleHBvcnQgZnVuY3Rpb24gYXJjaCgpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlbGVhc2UoKTogc3RyaW5nO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB1cHRpbWUoKTogbnVtYmVyO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBsb2FkYXZnKCk6IG51bWJlcltdO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB0b3RhbG1lbSgpOiBudW1iZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGZyZWVtZW0oKTogbnVtYmVyO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcHVzKCk6IHsgbW9kZWw6IHN0cmluZzsgc3BlZWQ6IG51bWJlcjsgdGltZXM6IHsgdXNlcjogbnVtYmVyOyBuaWNlOiBudW1iZXI7IHN5czogbnVtYmVyOyBpZGxlOiBudW1iZXI7IGlycTogbnVtYmVyOyB9OyB9W107XG4gICAgZXhwb3J0IGZ1bmN0aW9uIG5ldHdvcmtJbnRlcmZhY2VzKCk6IGFueTtcbiAgICBleHBvcnQgdmFyIEVPTDogc3RyaW5nO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcImh0dHBzXCIge1xuICAgIGltcG9ydCB0bHMgPSByZXF1aXJlKFwidGxzXCIpO1xuICAgIGltcG9ydCBldmVudHMgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuICAgIGltcG9ydCBodHRwID0gcmVxdWlyZShcImh0dHBcIik7XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFNlcnZlck9wdGlvbnMge1xuICAgICAgICBwZng/OiBhbnk7XG4gICAgICAgIGtleT86IGFueTtcbiAgICAgICAgcGFzc3BocmFzZT86IHN0cmluZztcbiAgICAgICAgY2VydD86IGFueTtcbiAgICAgICAgY2E/OiBhbnk7XG4gICAgICAgIGNybD86IGFueTtcbiAgICAgICAgY2lwaGVycz86IHN0cmluZztcbiAgICAgICAgaG9ub3JDaXBoZXJPcmRlcj86IGJvb2xlYW47XG4gICAgICAgIHJlcXVlc3RDZXJ0PzogYm9vbGVhbjtcbiAgICAgICAgcmVqZWN0VW5hdXRob3JpemVkPzogYm9vbGVhbjtcbiAgICAgICAgTlBOUHJvdG9jb2xzPzogYW55O1xuICAgICAgICBTTklDYWxsYmFjaz86IChzZXJ2ZXJuYW1lOiBzdHJpbmcpID0+IGFueTtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFJlcXVlc3RPcHRpb25zIHtcbiAgICAgICAgaG9zdD86IHN0cmluZztcbiAgICAgICAgaG9zdG5hbWU/OiBzdHJpbmc7XG4gICAgICAgIHBvcnQ/OiBudW1iZXI7XG4gICAgICAgIHBhdGg/OiBzdHJpbmc7XG4gICAgICAgIG1ldGhvZD86IHN0cmluZztcbiAgICAgICAgaGVhZGVycz86IGFueTtcbiAgICAgICAgYXV0aD86IHN0cmluZztcbiAgICAgICAgYWdlbnQ/OiBhbnk7XG4gICAgICAgIHBmeD86IGFueTtcbiAgICAgICAga2V5PzogYW55O1xuICAgICAgICBwYXNzcGhyYXNlPzogc3RyaW5nO1xuICAgICAgICBjZXJ0PzogYW55O1xuICAgICAgICBjYT86IGFueTtcbiAgICAgICAgY2lwaGVycz86IHN0cmluZztcbiAgICAgICAgcmVqZWN0VW5hdXRob3JpemVkPzogYm9vbGVhbjtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIEFnZW50IHtcbiAgICAgICAgbWF4U29ja2V0czogbnVtYmVyO1xuICAgICAgICBzb2NrZXRzOiBhbnk7XG4gICAgICAgIHJlcXVlc3RzOiBhbnk7XG4gICAgfVxuICAgIGV4cG9ydCB2YXIgQWdlbnQ6IHtcbiAgICAgICAgbmV3IChvcHRpb25zPzogUmVxdWVzdE9wdGlvbnMpOiBBZ2VudDtcbiAgICB9O1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgU2VydmVyIGV4dGVuZHMgdGxzLlNlcnZlciB7IH1cbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlU2VydmVyKG9wdGlvbnM6IFNlcnZlck9wdGlvbnMsIHJlcXVlc3RMaXN0ZW5lcj86IEZ1bmN0aW9uKTogU2VydmVyO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZXF1ZXN0KG9wdGlvbnM6IFJlcXVlc3RPcHRpb25zLCBjYWxsYmFjaz86IChyZXM6IGh0dHAuQ2xpZW50UmVzcG9uc2UpID0+dm9pZCApOiBodHRwLkNsaWVudFJlcXVlc3Q7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGdldChvcHRpb25zOiBSZXF1ZXN0T3B0aW9ucywgY2FsbGJhY2s/OiAocmVzOiBodHRwLkNsaWVudFJlc3BvbnNlKSA9PnZvaWQgKTogaHR0cC5DbGllbnRSZXF1ZXN0O1xuICAgIGV4cG9ydCB2YXIgZ2xvYmFsQWdlbnQ6IEFnZW50O1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcInB1bnljb2RlXCIge1xuICAgIGV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoc3RyaW5nOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShzdHJpbmc6IHN0cmluZyk6IHN0cmluZztcbiAgICBleHBvcnQgZnVuY3Rpb24gdG9Vbmljb2RlKGRvbWFpbjogc3RyaW5nKTogc3RyaW5nO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB0b0FTQ0lJKGRvbWFpbjogc3RyaW5nKTogc3RyaW5nO1xuICAgIGV4cG9ydCB2YXIgdWNzMjogdWNzMjtcbiAgICBpbnRlcmZhY2UgdWNzMiB7XG4gICAgICAgIGRlY29kZShzdHJpbmc6IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgZW5jb2RlKGNvZGVQb2ludHM6IG51bWJlcltdKTogc3RyaW5nO1xuICAgIH1cbiAgICBleHBvcnQgdmFyIHZlcnNpb246IGFueTtcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJyZXBsXCIge1xuICAgIGltcG9ydCBzdHJlYW0gPSByZXF1aXJlKFwic3RyZWFtXCIpO1xuICAgIGltcG9ydCBldmVudHMgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuXG4gICAgZXhwb3J0IGludGVyZmFjZSBSZXBsT3B0aW9ucyB7XG4gICAgICAgIHByb21wdD86IHN0cmluZztcbiAgICAgICAgaW5wdXQ/OiBOb2RlSlMuUmVhZGFibGVTdHJlYW07XG4gICAgICAgIG91dHB1dD86IE5vZGVKUy5Xcml0YWJsZVN0cmVhbTtcbiAgICAgICAgdGVybWluYWw/OiBib29sZWFuO1xuICAgICAgICBldmFsPzogRnVuY3Rpb247XG4gICAgICAgIHVzZUNvbG9ycz86IGJvb2xlYW47XG4gICAgICAgIHVzZUdsb2JhbD86IGJvb2xlYW47XG4gICAgICAgIGlnbm9yZVVuZGVmaW5lZD86IGJvb2xlYW47XG4gICAgICAgIHdyaXRlcj86IEZ1bmN0aW9uO1xuICAgIH1cbiAgICBleHBvcnQgZnVuY3Rpb24gc3RhcnQob3B0aW9uczogUmVwbE9wdGlvbnMpOiBldmVudHMuRXZlbnRFbWl0dGVyO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcInJlYWRsaW5lXCIge1xuICAgIGltcG9ydCBldmVudHMgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuICAgIGltcG9ydCBzdHJlYW0gPSByZXF1aXJlKFwic3RyZWFtXCIpO1xuXG4gICAgZXhwb3J0IGludGVyZmFjZSBSZWFkTGluZSBleHRlbmRzIGV2ZW50cy5FdmVudEVtaXR0ZXIge1xuICAgICAgICBzZXRQcm9tcHQocHJvbXB0OiBzdHJpbmcsIGxlbmd0aDogbnVtYmVyKTogdm9pZDtcbiAgICAgICAgcHJvbXB0KHByZXNlcnZlQ3Vyc29yPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgICAgIHF1ZXN0aW9uKHF1ZXJ5OiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgICAgIHBhdXNlKCk6IHZvaWQ7XG4gICAgICAgIHJlc3VtZSgpOiB2b2lkO1xuICAgICAgICBjbG9zZSgpOiB2b2lkO1xuICAgICAgICB3cml0ZShkYXRhOiBhbnksIGtleT86IGFueSk6IHZvaWQ7XG4gICAgfVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgUmVhZExpbmVPcHRpb25zIHtcbiAgICAgICAgaW5wdXQ6IE5vZGVKUy5SZWFkYWJsZVN0cmVhbTtcbiAgICAgICAgb3V0cHV0OiBOb2RlSlMuV3JpdGFibGVTdHJlYW07XG4gICAgICAgIGNvbXBsZXRlcj86IEZ1bmN0aW9uO1xuICAgICAgICB0ZXJtaW5hbD86IGJvb2xlYW47XG4gICAgfVxuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnRlcmZhY2Uob3B0aW9uczogUmVhZExpbmVPcHRpb25zKTogUmVhZExpbmU7XG59XG5cbmRlY2xhcmUgbW9kdWxlIFwidm1cIiB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBDb250ZXh0IHsgfVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgU2NyaXB0IHtcbiAgICAgICAgcnVuSW5UaGlzQ29udGV4dCgpOiB2b2lkO1xuICAgICAgICBydW5Jbk5ld0NvbnRleHQoc2FuZGJveD86IENvbnRleHQpOiB2b2lkO1xuICAgIH1cbiAgICBleHBvcnQgZnVuY3Rpb24gcnVuSW5UaGlzQ29udGV4dChjb2RlOiBzdHJpbmcsIGZpbGVuYW1lPzogc3RyaW5nKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gcnVuSW5OZXdDb250ZXh0KGNvZGU6IHN0cmluZywgc2FuZGJveD86IENvbnRleHQsIGZpbGVuYW1lPzogc3RyaW5nKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gcnVuSW5Db250ZXh0KGNvZGU6IHN0cmluZywgY29udGV4dDogQ29udGV4dCwgZmlsZW5hbWU/OiBzdHJpbmcpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0KGluaXRTYW5kYm94PzogQ29udGV4dCk6IENvbnRleHQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNjcmlwdChjb2RlOiBzdHJpbmcsIGZpbGVuYW1lPzogc3RyaW5nKTogU2NyaXB0O1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcImNoaWxkX3Byb2Nlc3NcIiB7XG4gICAgaW1wb3J0IGV2ZW50cyA9IHJlcXVpcmUoXCJldmVudHNcIik7XG4gICAgaW1wb3J0IHN0cmVhbSA9IHJlcXVpcmUoXCJzdHJlYW1cIik7XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIENoaWxkUHJvY2VzcyBleHRlbmRzIGV2ZW50cy5FdmVudEVtaXR0ZXIge1xuICAgICAgICBzdGRpbjogIHN0cmVhbS5Xcml0YWJsZTtcbiAgICAgICAgc3Rkb3V0OiBzdHJlYW0uUmVhZGFibGU7XG4gICAgICAgIHN0ZGVycjogc3RyZWFtLlJlYWRhYmxlO1xuICAgICAgICBwaWQ6IG51bWJlcjtcbiAgICAgICAga2lsbChzaWduYWw/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBzZW5kKG1lc3NhZ2U6IGFueSwgc2VuZEhhbmRsZT86IGFueSk6IHZvaWQ7XG4gICAgICAgIGRpc2Nvbm5lY3QoKTogdm9pZDtcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gc3Bhd24oY29tbWFuZDogc3RyaW5nLCBhcmdzPzogc3RyaW5nW10sIG9wdGlvbnM/OiB7XG4gICAgICAgIGN3ZD86IHN0cmluZztcbiAgICAgICAgc3RkaW8/OiBhbnk7XG4gICAgICAgIGN1c3RvbT86IGFueTtcbiAgICAgICAgZW52PzogYW55O1xuICAgICAgICBkZXRhY2hlZD86IGJvb2xlYW47XG4gICAgfSk6IENoaWxkUHJvY2VzcztcbiAgICBleHBvcnQgZnVuY3Rpb24gZXhlYyhjb21tYW5kOiBzdHJpbmcsIG9wdGlvbnM6IHtcbiAgICAgICAgY3dkPzogc3RyaW5nO1xuICAgICAgICBzdGRpbz86IGFueTtcbiAgICAgICAgY3VzdG9tRmRzPzogYW55O1xuICAgICAgICBlbnY/OiBhbnk7XG4gICAgICAgIGVuY29kaW5nPzogc3RyaW5nO1xuICAgICAgICB0aW1lb3V0PzogbnVtYmVyO1xuICAgICAgICBtYXhCdWZmZXI/OiBudW1iZXI7XG4gICAgICAgIGtpbGxTaWduYWw/OiBzdHJpbmc7XG4gICAgfSwgY2FsbGJhY2s6IChlcnJvcjogRXJyb3IsIHN0ZG91dDogQnVmZmVyLCBzdGRlcnI6IEJ1ZmZlcikgPT52b2lkICk6IENoaWxkUHJvY2VzcztcbiAgICBleHBvcnQgZnVuY3Rpb24gZXhlYyhjb21tYW5kOiBzdHJpbmcsIGNhbGxiYWNrOiAoZXJyb3I6IEVycm9yLCBzdGRvdXQ6IEJ1ZmZlciwgc3RkZXJyOiBCdWZmZXIpID0+dm9pZCApOiBDaGlsZFByb2Nlc3M7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGV4ZWNGaWxlKGZpbGU6IHN0cmluZyxcbiAgICAgICAgY2FsbGJhY2s/OiAoZXJyb3I6IEVycm9yLCBzdGRvdXQ6IEJ1ZmZlciwgc3RkZXJyOiBCdWZmZXIpID0+dm9pZCApOiBDaGlsZFByb2Nlc3M7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGV4ZWNGaWxlKGZpbGU6IHN0cmluZywgYXJncz86IHN0cmluZ1tdLFxuICAgICAgICBjYWxsYmFjaz86IChlcnJvcjogRXJyb3IsIHN0ZG91dDogQnVmZmVyLCBzdGRlcnI6IEJ1ZmZlcikgPT52b2lkICk6IENoaWxkUHJvY2VzcztcbiAgICBleHBvcnQgZnVuY3Rpb24gZXhlY0ZpbGUoZmlsZTogc3RyaW5nLCBhcmdzPzogc3RyaW5nW10sIG9wdGlvbnM/OiB7XG4gICAgICAgIGN3ZD86IHN0cmluZztcbiAgICAgICAgc3RkaW8/OiBhbnk7XG4gICAgICAgIGN1c3RvbUZkcz86IGFueTtcbiAgICAgICAgZW52PzogYW55O1xuICAgICAgICBlbmNvZGluZz86IHN0cmluZztcbiAgICAgICAgdGltZW91dD86IG51bWJlcjtcbiAgICAgICAgbWF4QnVmZmVyPzogc3RyaW5nO1xuICAgICAgICBraWxsU2lnbmFsPzogc3RyaW5nO1xuICAgIH0sIGNhbGxiYWNrPzogKGVycm9yOiBFcnJvciwgc3Rkb3V0OiBCdWZmZXIsIHN0ZGVycjogQnVmZmVyKSA9PnZvaWQgKTogQ2hpbGRQcm9jZXNzO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmb3JrKG1vZHVsZVBhdGg6IHN0cmluZywgYXJncz86IHN0cmluZ1tdLCBvcHRpb25zPzoge1xuICAgICAgICBjd2Q/OiBzdHJpbmc7XG4gICAgICAgIGVudj86IGFueTtcbiAgICAgICAgZW5jb2Rpbmc/OiBzdHJpbmc7XG4gICAgfSk6IENoaWxkUHJvY2VzcztcbiAgICBleHBvcnQgZnVuY3Rpb24gZXhlY1N5bmMoY29tbWFuZDogc3RyaW5nLCBvcHRpb25zPzoge1xuICAgICAgICBjd2Q/OiBzdHJpbmc7XG4gICAgICAgIGlucHV0Pzogc3RyaW5nfEJ1ZmZlcjtcbiAgICAgICAgc3RkaW8/OiBhbnk7XG4gICAgICAgIGVudj86IGFueTtcbiAgICAgICAgdWlkPzogbnVtYmVyO1xuICAgICAgICBnaWQ/OiBudW1iZXI7XG4gICAgICAgIHRpbWVvdXQ/OiBudW1iZXI7XG4gICAgICAgIG1heEJ1ZmZlcj86IG51bWJlcjtcbiAgICAgICAga2lsbFNpZ25hbD86IHN0cmluZztcbiAgICAgICAgZW5jb2Rpbmc/OiBzdHJpbmc7XG4gICAgfSk6IENoaWxkUHJvY2Vzcztcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJ1cmxcIiB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBVcmwge1xuICAgICAgICBocmVmOiBzdHJpbmc7XG4gICAgICAgIHByb3RvY29sOiBzdHJpbmc7XG4gICAgICAgIGF1dGg6IHN0cmluZztcbiAgICAgICAgaG9zdG5hbWU6IHN0cmluZztcbiAgICAgICAgcG9ydDogc3RyaW5nO1xuICAgICAgICBob3N0OiBzdHJpbmc7XG4gICAgICAgIHBhdGhuYW1lOiBzdHJpbmc7XG4gICAgICAgIHNlYXJjaDogc3RyaW5nO1xuICAgICAgICBxdWVyeTogYW55OyAvLyBzdHJpbmcgfCBPYmplY3RcbiAgICAgICAgc2xhc2hlczogYm9vbGVhbjtcbiAgICAgICAgaGFzaD86IHN0cmluZztcbiAgICAgICAgcGF0aD86IHN0cmluZztcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFVybE9wdGlvbnMge1xuICAgICAgICBwcm90b2NvbD86IHN0cmluZztcbiAgICAgICAgYXV0aD86IHN0cmluZztcbiAgICAgICAgaG9zdG5hbWU/OiBzdHJpbmc7XG4gICAgICAgIHBvcnQ/OiBzdHJpbmc7XG4gICAgICAgIGhvc3Q/OiBzdHJpbmc7XG4gICAgICAgIHBhdGhuYW1lPzogc3RyaW5nO1xuICAgICAgICBzZWFyY2g/OiBzdHJpbmc7XG4gICAgICAgIHF1ZXJ5PzogYW55O1xuICAgICAgICBoYXNoPzogc3RyaW5nO1xuICAgICAgICBwYXRoPzogc3RyaW5nO1xuICAgIH1cblxuICAgIGV4cG9ydCBmdW5jdGlvbiBwYXJzZSh1cmxTdHI6IHN0cmluZywgcGFyc2VRdWVyeVN0cmluZz86IGJvb2xlYW4gLCBzbGFzaGVzRGVub3RlSG9zdD86IGJvb2xlYW4gKTogVXJsO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmb3JtYXQodXJsOiBVcmxPcHRpb25zKTogc3RyaW5nO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZXNvbHZlKGZyb206IHN0cmluZywgdG86IHN0cmluZyk6IHN0cmluZztcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJkbnNcIiB7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGxvb2t1cChkb21haW46IHN0cmluZywgZmFtaWx5OiBudW1iZXIsIGNhbGxiYWNrOiAoZXJyOiBFcnJvciwgYWRkcmVzczogc3RyaW5nLCBmYW1pbHk6IG51bWJlcikgPT52b2lkICk6IHN0cmluZztcbiAgICBleHBvcnQgZnVuY3Rpb24gbG9va3VwKGRvbWFpbjogc3RyaW5nLCBjYWxsYmFjazogKGVycjogRXJyb3IsIGFkZHJlc3M6IHN0cmluZywgZmFtaWx5OiBudW1iZXIpID0+dm9pZCApOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmUoZG9tYWluOiBzdHJpbmcsIHJydHlwZTogc3RyaW5nLCBjYWxsYmFjazogKGVycjogRXJyb3IsIGFkZHJlc3Nlczogc3RyaW5nW10pID0+dm9pZCApOiBzdHJpbmdbXTtcbiAgICBleHBvcnQgZnVuY3Rpb24gcmVzb2x2ZShkb21haW46IHN0cmluZywgY2FsbGJhY2s6IChlcnI6IEVycm9yLCBhZGRyZXNzZXM6IHN0cmluZ1tdKSA9PnZvaWQgKTogc3RyaW5nW107XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmU0KGRvbWFpbjogc3RyaW5nLCBjYWxsYmFjazogKGVycjogRXJyb3IsIGFkZHJlc3Nlczogc3RyaW5nW10pID0+dm9pZCApOiBzdHJpbmdbXTtcbiAgICBleHBvcnQgZnVuY3Rpb24gcmVzb2x2ZTYoZG9tYWluOiBzdHJpbmcsIGNhbGxiYWNrOiAoZXJyOiBFcnJvciwgYWRkcmVzc2VzOiBzdHJpbmdbXSkgPT52b2lkICk6IHN0cmluZ1tdO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZXNvbHZlTXgoZG9tYWluOiBzdHJpbmcsIGNhbGxiYWNrOiAoZXJyOiBFcnJvciwgYWRkcmVzc2VzOiBzdHJpbmdbXSkgPT52b2lkICk6IHN0cmluZ1tdO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZXNvbHZlVHh0KGRvbWFpbjogc3RyaW5nLCBjYWxsYmFjazogKGVycjogRXJyb3IsIGFkZHJlc3Nlczogc3RyaW5nW10pID0+dm9pZCApOiBzdHJpbmdbXTtcbiAgICBleHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVNydihkb21haW46IHN0cmluZywgY2FsbGJhY2s6IChlcnI6IEVycm9yLCBhZGRyZXNzZXM6IHN0cmluZ1tdKSA9PnZvaWQgKTogc3RyaW5nW107XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVOcyhkb21haW46IHN0cmluZywgY2FsbGJhY2s6IChlcnI6IEVycm9yLCBhZGRyZXNzZXM6IHN0cmluZ1tdKSA9PnZvaWQgKTogc3RyaW5nW107XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVDbmFtZShkb21haW46IHN0cmluZywgY2FsbGJhY2s6IChlcnI6IEVycm9yLCBhZGRyZXNzZXM6IHN0cmluZ1tdKSA9PnZvaWQgKTogc3RyaW5nW107XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJldmVyc2UoaXA6IHN0cmluZywgY2FsbGJhY2s6IChlcnI6IEVycm9yLCBkb21haW5zOiBzdHJpbmdbXSkgPT52b2lkICk6IHN0cmluZ1tdO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcIm5ldFwiIHtcbiAgICBpbXBvcnQgc3RyZWFtID0gcmVxdWlyZShcInN0cmVhbVwiKTtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgU29ja2V0IGV4dGVuZHMgc3RyZWFtLkR1cGxleCB7XG4gICAgICAgIC8vIEV4dGVuZGVkIGJhc2UgbWV0aG9kc1xuICAgICAgICB3cml0ZShidWZmZXI6IEJ1ZmZlcik6IGJvb2xlYW47XG4gICAgICAgIHdyaXRlKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogYm9vbGVhbjtcbiAgICAgICAgd3JpdGUoc3RyOiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcsIGZkPzogc3RyaW5nKTogYm9vbGVhbjtcblxuICAgICAgICBjb25uZWN0KHBvcnQ6IG51bWJlciwgaG9zdD86IHN0cmluZywgY29ubmVjdGlvbkxpc3RlbmVyPzogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICBjb25uZWN0KHBhdGg6IHN0cmluZywgY29ubmVjdGlvbkxpc3RlbmVyPzogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICBidWZmZXJTaXplOiBudW1iZXI7XG4gICAgICAgIHNldEVuY29kaW5nKGVuY29kaW5nPzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgd3JpdGUoZGF0YTogYW55LCBlbmNvZGluZz86IHN0cmluZywgY2FsbGJhY2s/OiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgICAgIGRlc3Ryb3koKTogdm9pZDtcbiAgICAgICAgcGF1c2UoKTogdm9pZDtcbiAgICAgICAgcmVzdW1lKCk6IHZvaWQ7XG4gICAgICAgIHNldFRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgc2V0Tm9EZWxheShub0RlbGF5PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgICAgIHNldEtlZXBBbGl2ZShlbmFibGU/OiBib29sZWFuLCBpbml0aWFsRGVsYXk/OiBudW1iZXIpOiB2b2lkO1xuICAgICAgICBhZGRyZXNzKCk6IHsgcG9ydDogbnVtYmVyOyBmYW1pbHk6IHN0cmluZzsgYWRkcmVzczogc3RyaW5nOyB9O1xuICAgICAgICB1bnJlZigpOiB2b2lkO1xuICAgICAgICByZWYoKTogdm9pZDtcblxuICAgICAgICByZW1vdGVBZGRyZXNzOiBzdHJpbmc7XG4gICAgICAgIHJlbW90ZVBvcnQ6IG51bWJlcjtcbiAgICAgICAgYnl0ZXNSZWFkOiBudW1iZXI7XG4gICAgICAgIGJ5dGVzV3JpdHRlbjogbnVtYmVyO1xuXG4gICAgICAgIC8vIEV4dGVuZGVkIGJhc2UgbWV0aG9kc1xuICAgICAgICBlbmQoKTogdm9pZDtcbiAgICAgICAgZW5kKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBlbmNvZGluZz86IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgICAgIGVuZChkYXRhPzogYW55LCBlbmNvZGluZz86IHN0cmluZyk6IHZvaWQ7XG4gICAgfVxuXG4gICAgZXhwb3J0IHZhciBTb2NrZXQ6IHtcbiAgICAgICAgbmV3IChvcHRpb25zPzogeyBmZD86IHN0cmluZzsgdHlwZT86IHN0cmluZzsgYWxsb3dIYWxmT3Blbj86IGJvb2xlYW47IH0pOiBTb2NrZXQ7XG4gICAgfTtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgU2VydmVyIGV4dGVuZHMgU29ja2V0IHtcbiAgICAgICAgbGlzdGVuKHBvcnQ6IG51bWJlciwgaG9zdD86IHN0cmluZywgYmFja2xvZz86IG51bWJlciwgbGlzdGVuaW5nTGlzdGVuZXI/OiBGdW5jdGlvbik6IFNlcnZlcjtcbiAgICAgICAgbGlzdGVuKHBhdGg6IHN0cmluZywgbGlzdGVuaW5nTGlzdGVuZXI/OiBGdW5jdGlvbik6IFNlcnZlcjtcbiAgICAgICAgbGlzdGVuKGhhbmRsZTogYW55LCBsaXN0ZW5pbmdMaXN0ZW5lcj86IEZ1bmN0aW9uKTogU2VydmVyO1xuICAgICAgICBjbG9zZShjYWxsYmFjaz86IEZ1bmN0aW9uKTogU2VydmVyO1xuICAgICAgICBhZGRyZXNzKCk6IHsgcG9ydDogbnVtYmVyOyBmYW1pbHk6IHN0cmluZzsgYWRkcmVzczogc3RyaW5nOyB9O1xuICAgICAgICBtYXhDb25uZWN0aW9uczogbnVtYmVyO1xuICAgICAgICBjb25uZWN0aW9uczogbnVtYmVyO1xuICAgIH1cbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlU2VydmVyKGNvbm5lY3Rpb25MaXN0ZW5lcj86IChzb2NrZXQ6IFNvY2tldCkgPT52b2lkICk6IFNlcnZlcjtcbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlU2VydmVyKG9wdGlvbnM/OiB7IGFsbG93SGFsZk9wZW4/OiBib29sZWFuOyB9LCBjb25uZWN0aW9uTGlzdGVuZXI/OiAoc29ja2V0OiBTb2NrZXQpID0+dm9pZCApOiBTZXJ2ZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNvbm5lY3Qob3B0aW9uczogeyBhbGxvd0hhbGZPcGVuPzogYm9vbGVhbjsgfSwgY29ubmVjdGlvbkxpc3RlbmVyPzogRnVuY3Rpb24pOiBTb2NrZXQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNvbm5lY3QocG9ydDogbnVtYmVyLCBob3N0Pzogc3RyaW5nLCBjb25uZWN0aW9uTGlzdGVuZXI/OiBGdW5jdGlvbik6IFNvY2tldDtcbiAgICBleHBvcnQgZnVuY3Rpb24gY29ubmVjdChwYXRoOiBzdHJpbmcsIGNvbm5lY3Rpb25MaXN0ZW5lcj86IEZ1bmN0aW9uKTogU29ja2V0O1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uKG9wdGlvbnM6IHsgYWxsb3dIYWxmT3Blbj86IGJvb2xlYW47IH0sIGNvbm5lY3Rpb25MaXN0ZW5lcj86IEZ1bmN0aW9uKTogU29ja2V0O1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uKHBvcnQ6IG51bWJlciwgaG9zdD86IHN0cmluZywgY29ubmVjdGlvbkxpc3RlbmVyPzogRnVuY3Rpb24pOiBTb2NrZXQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb24ocGF0aDogc3RyaW5nLCBjb25uZWN0aW9uTGlzdGVuZXI/OiBGdW5jdGlvbik6IFNvY2tldDtcbiAgICBleHBvcnQgZnVuY3Rpb24gaXNJUChpbnB1dDogc3RyaW5nKTogbnVtYmVyO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBpc0lQdjQoaW5wdXQ6IHN0cmluZyk6IGJvb2xlYW47XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGlzSVB2NihpbnB1dDogc3RyaW5nKTogYm9vbGVhbjtcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJkZ3JhbVwiIHtcbiAgICBpbXBvcnQgZXZlbnRzID0gcmVxdWlyZShcImV2ZW50c1wiKTtcblxuICAgIGludGVyZmFjZSBSZW1vdGVJbmZvIHtcbiAgICAgICAgYWRkcmVzczogc3RyaW5nO1xuICAgICAgICBwb3J0OiBudW1iZXI7XG4gICAgICAgIHNpemU6IG51bWJlcjtcbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgQWRkcmVzc0luZm8ge1xuICAgICAgICBhZGRyZXNzOiBzdHJpbmc7XG4gICAgICAgIGZhbWlseTogc3RyaW5nO1xuICAgICAgICBwb3J0OiBudW1iZXI7XG4gICAgfVxuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNvY2tldCh0eXBlOiBzdHJpbmcsIGNhbGxiYWNrPzogKG1zZzogQnVmZmVyLCByaW5mbzogUmVtb3RlSW5mbykgPT4gdm9pZCk6IFNvY2tldDtcblxuICAgIGludGVyZmFjZSBTb2NrZXQgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyIHtcbiAgICAgICAgc2VuZChidWY6IEJ1ZmZlciwgb2Zmc2V0OiBudW1iZXIsIGxlbmd0aDogbnVtYmVyLCBwb3J0OiBudW1iZXIsIGFkZHJlc3M6IHN0cmluZywgY2FsbGJhY2s/OiAoZXJyb3I6IEVycm9yLCBieXRlczogbnVtYmVyKSA9PiB2b2lkKTogdm9pZDtcbiAgICAgICAgYmluZChwb3J0OiBudW1iZXIsIGFkZHJlc3M/OiBzdHJpbmcsIGNhbGxiYWNrPzogKCkgPT4gdm9pZCk6IHZvaWQ7XG4gICAgICAgIGNsb3NlKCk6IHZvaWQ7XG4gICAgICAgIGFkZHJlc3MoKTogQWRkcmVzc0luZm87XG4gICAgICAgIHNldEJyb2FkY2FzdChmbGFnOiBib29sZWFuKTogdm9pZDtcbiAgICAgICAgc2V0TXVsdGljYXN0VFRMKHR0bDogbnVtYmVyKTogdm9pZDtcbiAgICAgICAgc2V0TXVsdGljYXN0TG9vcGJhY2soZmxhZzogYm9vbGVhbik6IHZvaWQ7XG4gICAgICAgIGFkZE1lbWJlcnNoaXAobXVsdGljYXN0QWRkcmVzczogc3RyaW5nLCBtdWx0aWNhc3RJbnRlcmZhY2U/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBkcm9wTWVtYmVyc2hpcChtdWx0aWNhc3RBZGRyZXNzOiBzdHJpbmcsIG11bHRpY2FzdEludGVyZmFjZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgfVxufVxuXG5kZWNsYXJlIG1vZHVsZSBcImZzXCIge1xuICAgIGltcG9ydCBzdHJlYW0gPSByZXF1aXJlKFwic3RyZWFtXCIpO1xuICAgIGltcG9ydCBldmVudHMgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuXG4gICAgaW50ZXJmYWNlIFN0YXRzIHtcbiAgICAgICAgaXNGaWxlKCk6IGJvb2xlYW47XG4gICAgICAgIGlzRGlyZWN0b3J5KCk6IGJvb2xlYW47XG4gICAgICAgIGlzQmxvY2tEZXZpY2UoKTogYm9vbGVhbjtcbiAgICAgICAgaXNDaGFyYWN0ZXJEZXZpY2UoKTogYm9vbGVhbjtcbiAgICAgICAgaXNTeW1ib2xpY0xpbmsoKTogYm9vbGVhbjtcbiAgICAgICAgaXNGSUZPKCk6IGJvb2xlYW47XG4gICAgICAgIGlzU29ja2V0KCk6IGJvb2xlYW47XG4gICAgICAgIGRldjogbnVtYmVyO1xuICAgICAgICBpbm86IG51bWJlcjtcbiAgICAgICAgbW9kZTogbnVtYmVyO1xuICAgICAgICBubGluazogbnVtYmVyO1xuICAgICAgICB1aWQ6IG51bWJlcjtcbiAgICAgICAgZ2lkOiBudW1iZXI7XG4gICAgICAgIHJkZXY6IG51bWJlcjtcbiAgICAgICAgc2l6ZTogbnVtYmVyO1xuICAgICAgICBibGtzaXplOiBudW1iZXI7XG4gICAgICAgIGJsb2NrczogbnVtYmVyO1xuICAgICAgICBhdGltZTogRGF0ZTtcbiAgICAgICAgbXRpbWU6IERhdGU7XG4gICAgICAgIGN0aW1lOiBEYXRlO1xuICAgIH1cblxuICAgIGludGVyZmFjZSBGU1dhdGNoZXIgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyIHtcbiAgICAgICAgY2xvc2UoKTogdm9pZDtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFJlYWRTdHJlYW0gZXh0ZW5kcyBzdHJlYW0uUmVhZGFibGUge1xuICAgICAgICBjbG9zZSgpOiB2b2lkO1xuICAgIH1cbiAgICBleHBvcnQgaW50ZXJmYWNlIFdyaXRlU3RyZWFtIGV4dGVuZHMgc3RyZWFtLldyaXRhYmxlIHtcbiAgICAgICAgY2xvc2UoKTogdm9pZDtcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gcmVuYW1lKG9sZFBhdGg6IHN0cmluZywgbmV3UGF0aDogc3RyaW5nLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZW5hbWVTeW5jKG9sZFBhdGg6IHN0cmluZywgbmV3UGF0aDogc3RyaW5nKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gdHJ1bmNhdGUocGF0aDogc3RyaW5nLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB0cnVuY2F0ZShwYXRoOiBzdHJpbmcsIGxlbjogbnVtYmVyLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB0cnVuY2F0ZVN5bmMocGF0aDogc3RyaW5nLCBsZW4/OiBudW1iZXIpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmdHJ1bmNhdGUoZmQ6IG51bWJlciwgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gZnRydW5jYXRlKGZkOiBudW1iZXIsIGxlbjogbnVtYmVyLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmdHJ1bmNhdGVTeW5jKGZkOiBudW1iZXIsIGxlbj86IG51bWJlcik6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNob3duKHBhdGg6IHN0cmluZywgdWlkOiBudW1iZXIsIGdpZDogbnVtYmVyLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjaG93blN5bmMocGF0aDogc3RyaW5nLCB1aWQ6IG51bWJlciwgZ2lkOiBudW1iZXIpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmY2hvd24oZmQ6IG51bWJlciwgdWlkOiBudW1iZXIsIGdpZDogbnVtYmVyLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmY2hvd25TeW5jKGZkOiBudW1iZXIsIHVpZDogbnVtYmVyLCBnaWQ6IG51bWJlcik6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGxjaG93bihwYXRoOiBzdHJpbmcsIHVpZDogbnVtYmVyLCBnaWQ6IG51bWJlciwgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gbGNob3duU3luYyhwYXRoOiBzdHJpbmcsIHVpZDogbnVtYmVyLCBnaWQ6IG51bWJlcik6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNobW9kKHBhdGg6IHN0cmluZywgbW9kZTogbnVtYmVyLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjaG1vZChwYXRoOiBzdHJpbmcsIG1vZGU6IHN0cmluZywgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gY2htb2RTeW5jKHBhdGg6IHN0cmluZywgbW9kZTogbnVtYmVyKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gY2htb2RTeW5jKHBhdGg6IHN0cmluZywgbW9kZTogc3RyaW5nKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gZmNobW9kKGZkOiBudW1iZXIsIG1vZGU6IG51bWJlciwgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gZmNobW9kKGZkOiBudW1iZXIsIG1vZGU6IHN0cmluZywgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gZmNobW9kU3luYyhmZDogbnVtYmVyLCBtb2RlOiBudW1iZXIpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmY2htb2RTeW5jKGZkOiBudW1iZXIsIG1vZGU6IHN0cmluZyk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGxjaG1vZChwYXRoOiBzdHJpbmcsIG1vZGU6IG51bWJlciwgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gbGNobW9kKHBhdGg6IHN0cmluZywgbW9kZTogc3RyaW5nLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBsY2htb2RTeW5jKHBhdGg6IHN0cmluZywgbW9kZTogbnVtYmVyKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gbGNobW9kU3luYyhwYXRoOiBzdHJpbmcsIG1vZGU6IHN0cmluZyk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHN0YXQocGF0aDogc3RyaW5nLCBjYWxsYmFjaz86IChlcnI6IE5vZGVKUy5FcnJub0V4Y2VwdGlvbiwgc3RhdHM6IFN0YXRzKSA9PiBhbnkpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBsc3RhdChwYXRoOiBzdHJpbmcsIGNhbGxiYWNrPzogKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uLCBzdGF0czogU3RhdHMpID0+IGFueSk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGZzdGF0KGZkOiBudW1iZXIsIGNhbGxiYWNrPzogKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uLCBzdGF0czogU3RhdHMpID0+IGFueSk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHN0YXRTeW5jKHBhdGg6IHN0cmluZyk6IFN0YXRzO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBsc3RhdFN5bmMocGF0aDogc3RyaW5nKTogU3RhdHM7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGZzdGF0U3luYyhmZDogbnVtYmVyKTogU3RhdHM7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGxpbmsoc3JjcGF0aDogc3RyaW5nLCBkc3RwYXRoOiBzdHJpbmcsIGNhbGxiYWNrPzogKGVycj86IE5vZGVKUy5FcnJub0V4Y2VwdGlvbikgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGxpbmtTeW5jKHNyY3BhdGg6IHN0cmluZywgZHN0cGF0aDogc3RyaW5nKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gc3ltbGluayhzcmNwYXRoOiBzdHJpbmcsIGRzdHBhdGg6IHN0cmluZywgdHlwZT86IHN0cmluZywgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gc3ltbGlua1N5bmMoc3JjcGF0aDogc3RyaW5nLCBkc3RwYXRoOiBzdHJpbmcsIHR5cGU/OiBzdHJpbmcpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZWFkbGluayhwYXRoOiBzdHJpbmcsIGNhbGxiYWNrPzogKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uLCBsaW5rU3RyaW5nOiBzdHJpbmcpID0+IGFueSk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWRsaW5rU3luYyhwYXRoOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWxwYXRoKHBhdGg6IHN0cmluZywgY2FsbGJhY2s/OiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24sIHJlc29sdmVkUGF0aDogc3RyaW5nKSA9PiBhbnkpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZWFscGF0aChwYXRoOiBzdHJpbmcsIGNhY2hlOiB7W3BhdGg6IHN0cmluZ106IHN0cmluZ30sIGNhbGxiYWNrOiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24sIHJlc29sdmVkUGF0aDogc3RyaW5nKSA9PmFueSk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWxwYXRoU3luYyhwYXRoOiBzdHJpbmcsIGNhY2hlPzoge1twYXRoOiBzdHJpbmddOiBzdHJpbmd9KTogc3RyaW5nO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB1bmxpbmsocGF0aDogc3RyaW5nLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB1bmxpbmtTeW5jKHBhdGg6IHN0cmluZyk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJtZGlyKHBhdGg6IHN0cmluZywgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gcm1kaXJTeW5jKHBhdGg6IHN0cmluZyk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIG1rZGlyKHBhdGg6IHN0cmluZywgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gbWtkaXIocGF0aDogc3RyaW5nLCBtb2RlOiBudW1iZXIsIGNhbGxiYWNrPzogKGVycj86IE5vZGVKUy5FcnJub0V4Y2VwdGlvbikgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIG1rZGlyKHBhdGg6IHN0cmluZywgbW9kZTogc3RyaW5nLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBta2RpclN5bmMocGF0aDogc3RyaW5nLCBtb2RlPzogbnVtYmVyKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gbWtkaXJTeW5jKHBhdGg6IHN0cmluZywgbW9kZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWRkaXIocGF0aDogc3RyaW5nLCBjYWxsYmFjaz86IChlcnI6IE5vZGVKUy5FcnJub0V4Y2VwdGlvbiwgZmlsZXM6IHN0cmluZ1tdKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gcmVhZGRpclN5bmMocGF0aDogc3RyaW5nKTogc3RyaW5nW107XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNsb3NlKGZkOiBudW1iZXIsIGNhbGxiYWNrPzogKGVycj86IE5vZGVKUy5FcnJub0V4Y2VwdGlvbikgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNsb3NlU3luYyhmZDogbnVtYmVyKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gb3BlbihwYXRoOiBzdHJpbmcsIGZsYWdzOiBzdHJpbmcsIGNhbGxiYWNrPzogKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uLCBmZDogbnVtYmVyKSA9PiBhbnkpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBvcGVuKHBhdGg6IHN0cmluZywgZmxhZ3M6IHN0cmluZywgbW9kZTogbnVtYmVyLCBjYWxsYmFjaz86IChlcnI6IE5vZGVKUy5FcnJub0V4Y2VwdGlvbiwgZmQ6IG51bWJlcikgPT4gYW55KTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gb3BlbihwYXRoOiBzdHJpbmcsIGZsYWdzOiBzdHJpbmcsIG1vZGU6IHN0cmluZywgY2FsbGJhY2s/OiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24sIGZkOiBudW1iZXIpID0+IGFueSk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIG9wZW5TeW5jKHBhdGg6IHN0cmluZywgZmxhZ3M6IHN0cmluZywgbW9kZT86IG51bWJlcik6IG51bWJlcjtcbiAgICBleHBvcnQgZnVuY3Rpb24gb3BlblN5bmMocGF0aDogc3RyaW5nLCBmbGFnczogc3RyaW5nLCBtb2RlPzogc3RyaW5nKTogbnVtYmVyO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB1dGltZXMocGF0aDogc3RyaW5nLCBhdGltZTogbnVtYmVyLCBtdGltZTogbnVtYmVyLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB1dGltZXMocGF0aDogc3RyaW5nLCBhdGltZTogRGF0ZSwgbXRpbWU6IERhdGUsIGNhbGxiYWNrPzogKGVycj86IE5vZGVKUy5FcnJub0V4Y2VwdGlvbikgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHV0aW1lc1N5bmMocGF0aDogc3RyaW5nLCBhdGltZTogbnVtYmVyLCBtdGltZTogbnVtYmVyKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gdXRpbWVzU3luYyhwYXRoOiBzdHJpbmcsIGF0aW1lOiBEYXRlLCBtdGltZTogRGF0ZSk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGZ1dGltZXMoZmQ6IG51bWJlciwgYXRpbWU6IG51bWJlciwgbXRpbWU6IG51bWJlciwgY2FsbGJhY2s/OiAoZXJyPzogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gZnV0aW1lcyhmZDogbnVtYmVyLCBhdGltZTogRGF0ZSwgbXRpbWU6IERhdGUsIGNhbGxiYWNrPzogKGVycj86IE5vZGVKUy5FcnJub0V4Y2VwdGlvbikgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGZ1dGltZXNTeW5jKGZkOiBudW1iZXIsIGF0aW1lOiBudW1iZXIsIG10aW1lOiBudW1iZXIpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmdXRpbWVzU3luYyhmZDogbnVtYmVyLCBhdGltZTogRGF0ZSwgbXRpbWU6IERhdGUpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmc3luYyhmZDogbnVtYmVyLCBjYWxsYmFjaz86IChlcnI/OiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBmc3luY1N5bmMoZmQ6IG51bWJlcik6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHdyaXRlKGZkOiBudW1iZXIsIGJ1ZmZlcjogQnVmZmVyLCBvZmZzZXQ6IG51bWJlciwgbGVuZ3RoOiBudW1iZXIsIHBvc2l0aW9uOiBudW1iZXIsIGNhbGxiYWNrPzogKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uLCB3cml0dGVuOiBudW1iZXIsIGJ1ZmZlcjogQnVmZmVyKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gd3JpdGVTeW5jKGZkOiBudW1iZXIsIGJ1ZmZlcjogQnVmZmVyLCBvZmZzZXQ6IG51bWJlciwgbGVuZ3RoOiBudW1iZXIsIHBvc2l0aW9uOiBudW1iZXIpOiBudW1iZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWQoZmQ6IG51bWJlciwgYnVmZmVyOiBCdWZmZXIsIG9mZnNldDogbnVtYmVyLCBsZW5ndGg6IG51bWJlciwgcG9zaXRpb246IG51bWJlciwgY2FsbGJhY2s/OiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24sIGJ5dGVzUmVhZDogbnVtYmVyLCBidWZmZXI6IEJ1ZmZlcikgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWRTeW5jKGZkOiBudW1iZXIsIGJ1ZmZlcjogQnVmZmVyLCBvZmZzZXQ6IG51bWJlciwgbGVuZ3RoOiBudW1iZXIsIHBvc2l0aW9uOiBudW1iZXIpOiBudW1iZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKGZpbGVuYW1lOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcsIGNhbGxiYWNrOiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24sIGRhdGE6IHN0cmluZykgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKGZpbGVuYW1lOiBzdHJpbmcsIG9wdGlvbnM6IHsgZW5jb2Rpbmc6IHN0cmluZzsgZmxhZz86IHN0cmluZzsgfSwgY2FsbGJhY2s6IChlcnI6IE5vZGVKUy5FcnJub0V4Y2VwdGlvbiwgZGF0YTogc3RyaW5nKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gcmVhZEZpbGUoZmlsZW5hbWU6IHN0cmluZywgb3B0aW9uczogeyBmbGFnPzogc3RyaW5nOyB9LCBjYWxsYmFjazogKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uLCBkYXRhOiBCdWZmZXIpID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZShmaWxlbmFtZTogc3RyaW5nLCBjYWxsYmFjazogKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uLCBkYXRhOiBCdWZmZXIpID0+IHZvaWQgKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gcmVhZEZpbGVTeW5jKGZpbGVuYW1lOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlU3luYyhmaWxlbmFtZTogc3RyaW5nLCBvcHRpb25zOiB7IGVuY29kaW5nOiBzdHJpbmc7IGZsYWc/OiBzdHJpbmc7IH0pOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlU3luYyhmaWxlbmFtZTogc3RyaW5nLCBvcHRpb25zPzogeyBmbGFnPzogc3RyaW5nOyB9KTogQnVmZmVyO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGUoZmlsZW5hbWU6IHN0cmluZywgZGF0YTogYW55LCBjYWxsYmFjaz86IChlcnI6IE5vZGVKUy5FcnJub0V4Y2VwdGlvbikgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHdyaXRlRmlsZShmaWxlbmFtZTogc3RyaW5nLCBkYXRhOiBhbnksIG9wdGlvbnM6IHsgZW5jb2Rpbmc/OiBzdHJpbmc7IG1vZGU/OiBudW1iZXI7IGZsYWc/OiBzdHJpbmc7IH0sIGNhbGxiYWNrPzogKGVycjogTm9kZUpTLkVycm5vRXhjZXB0aW9uKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gd3JpdGVGaWxlKGZpbGVuYW1lOiBzdHJpbmcsIGRhdGE6IGFueSwgb3B0aW9uczogeyBlbmNvZGluZz86IHN0cmluZzsgbW9kZT86IHN0cmluZzsgZmxhZz86IHN0cmluZzsgfSwgY2FsbGJhY2s/OiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lOiBzdHJpbmcsIGRhdGE6IGFueSwgb3B0aW9ucz86IHsgZW5jb2Rpbmc/OiBzdHJpbmc7IG1vZGU/OiBudW1iZXI7IGZsYWc/OiBzdHJpbmc7IH0pOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGVTeW5jKGZpbGVuYW1lOiBzdHJpbmcsIGRhdGE6IGFueSwgb3B0aW9ucz86IHsgZW5jb2Rpbmc/OiBzdHJpbmc7IG1vZGU/OiBzdHJpbmc7IGZsYWc/OiBzdHJpbmc7IH0pOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBhcHBlbmRGaWxlKGZpbGVuYW1lOiBzdHJpbmcsIGRhdGE6IGFueSwgb3B0aW9uczogeyBlbmNvZGluZz86IHN0cmluZzsgbW9kZT86IG51bWJlcjsgZmxhZz86IHN0cmluZzsgfSwgY2FsbGJhY2s/OiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBhcHBlbmRGaWxlKGZpbGVuYW1lOiBzdHJpbmcsIGRhdGE6IGFueSwgb3B0aW9uczogeyBlbmNvZGluZz86IHN0cmluZzsgbW9kZT86IHN0cmluZzsgZmxhZz86IHN0cmluZzsgfSwgY2FsbGJhY2s/OiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBhcHBlbmRGaWxlKGZpbGVuYW1lOiBzdHJpbmcsIGRhdGE6IGFueSwgY2FsbGJhY2s/OiAoZXJyOiBOb2RlSlMuRXJybm9FeGNlcHRpb24pID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBhcHBlbmRGaWxlU3luYyhmaWxlbmFtZTogc3RyaW5nLCBkYXRhOiBhbnksIG9wdGlvbnM/OiB7IGVuY29kaW5nPzogc3RyaW5nOyBtb2RlPzogbnVtYmVyOyBmbGFnPzogc3RyaW5nOyB9KTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gYXBwZW5kRmlsZVN5bmMoZmlsZW5hbWU6IHN0cmluZywgZGF0YTogYW55LCBvcHRpb25zPzogeyBlbmNvZGluZz86IHN0cmluZzsgbW9kZT86IHN0cmluZzsgZmxhZz86IHN0cmluZzsgfSk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHdhdGNoRmlsZShmaWxlbmFtZTogc3RyaW5nLCBsaXN0ZW5lcjogKGN1cnI6IFN0YXRzLCBwcmV2OiBTdGF0cykgPT4gdm9pZCk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHdhdGNoRmlsZShmaWxlbmFtZTogc3RyaW5nLCBvcHRpb25zOiB7IHBlcnNpc3RlbnQ/OiBib29sZWFuOyBpbnRlcnZhbD86IG51bWJlcjsgfSwgbGlzdGVuZXI6IChjdXJyOiBTdGF0cywgcHJldjogU3RhdHMpID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB1bndhdGNoRmlsZShmaWxlbmFtZTogc3RyaW5nLCBsaXN0ZW5lcj86IChjdXJyOiBTdGF0cywgcHJldjogU3RhdHMpID0+IHZvaWQpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiB3YXRjaChmaWxlbmFtZTogc3RyaW5nLCBsaXN0ZW5lcj86IChldmVudDogc3RyaW5nLCBmaWxlbmFtZTogc3RyaW5nKSA9PiBhbnkpOiBGU1dhdGNoZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHdhdGNoKGZpbGVuYW1lOiBzdHJpbmcsIG9wdGlvbnM6IHsgcGVyc2lzdGVudD86IGJvb2xlYW47IH0sIGxpc3RlbmVyPzogKGV2ZW50OiBzdHJpbmcsIGZpbGVuYW1lOiBzdHJpbmcpID0+IGFueSk6IEZTV2F0Y2hlcjtcbiAgICBleHBvcnQgZnVuY3Rpb24gZXhpc3RzKHBhdGg6IHN0cmluZywgY2FsbGJhY2s/OiAoZXhpc3RzOiBib29sZWFuKSA9PiB2b2lkKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gZXhpc3RzU3luYyhwYXRoOiBzdHJpbmcpOiBib29sZWFuO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZWFkU3RyZWFtKHBhdGg6IHN0cmluZywgb3B0aW9ucz86IHtcbiAgICAgICAgZmxhZ3M/OiBzdHJpbmc7XG4gICAgICAgIGVuY29kaW5nPzogc3RyaW5nO1xuICAgICAgICBmZD86IHN0cmluZztcbiAgICAgICAgbW9kZT86IG51bWJlcjtcbiAgICAgICAgYnVmZmVyU2l6ZT86IG51bWJlcjtcbiAgICB9KTogUmVhZFN0cmVhbTtcbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlUmVhZFN0cmVhbShwYXRoOiBzdHJpbmcsIG9wdGlvbnM/OiB7XG4gICAgICAgIGZsYWdzPzogc3RyaW5nO1xuICAgICAgICBlbmNvZGluZz86IHN0cmluZztcbiAgICAgICAgZmQ/OiBzdHJpbmc7XG4gICAgICAgIG1vZGU/OiBzdHJpbmc7XG4gICAgICAgIGJ1ZmZlclNpemU/OiBudW1iZXI7XG4gICAgfSk6IFJlYWRTdHJlYW07XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVdyaXRlU3RyZWFtKHBhdGg6IHN0cmluZywgb3B0aW9ucz86IHtcbiAgICAgICAgZmxhZ3M/OiBzdHJpbmc7XG4gICAgICAgIGVuY29kaW5nPzogc3RyaW5nO1xuICAgICAgICBzdHJpbmc/OiBzdHJpbmc7XG4gICAgfSk6IFdyaXRlU3RyZWFtO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcInBhdGhcIiB7XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFBhcnNlZFBhdGgge1xuICAgICAgICByb290OiBzdHJpbmc7XG4gICAgICAgIGRpcjogc3RyaW5nO1xuICAgICAgICBiYXNlOiBzdHJpbmc7XG4gICAgICAgIGV4dDogc3RyaW5nO1xuICAgICAgICBuYW1lOiBzdHJpbmc7XG4gICAgfVxuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZShwOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGpvaW4oLi4ucGF0aHM6IGFueVtdKTogc3RyaW5nO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByZXNvbHZlKC4uLnBhdGhTZWdtZW50czogYW55W10pOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGlzQWJzb2x1dGUocDogc3RyaW5nKTogYm9vbGVhbjtcbiAgICBleHBvcnQgZnVuY3Rpb24gcmVsYXRpdmUoZnJvbTogc3RyaW5nLCB0bzogc3RyaW5nKTogc3RyaW5nO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBkaXJuYW1lKHA6IHN0cmluZyk6IHN0cmluZztcbiAgICBleHBvcnQgZnVuY3Rpb24gYmFzZW5hbWUocDogc3RyaW5nLCBleHQ/OiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGV4dG5hbWUocDogc3RyaW5nKTogc3RyaW5nO1xuICAgIGV4cG9ydCB2YXIgc2VwOiBzdHJpbmc7XG4gICAgZXhwb3J0IHZhciBkZWxpbWl0ZXI6IHN0cmluZztcbiAgICBleHBvcnQgZnVuY3Rpb24gcGFyc2UocDogc3RyaW5nKTogUGFyc2VkUGF0aDtcbiAgICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KHBQOiBQYXJzZWRQYXRoKTogc3RyaW5nO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcInN0cmluZ19kZWNvZGVyXCIge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgTm9kZVN0cmluZ0RlY29kZXIge1xuICAgICAgICB3cml0ZShidWZmZXI6IEJ1ZmZlcik6IHN0cmluZztcbiAgICAgICAgZGV0ZWN0SW5jb21wbGV0ZUNoYXIoYnVmZmVyOiBCdWZmZXIpOiBudW1iZXI7XG4gICAgfVxuICAgIGV4cG9ydCB2YXIgU3RyaW5nRGVjb2Rlcjoge1xuICAgICAgICBuZXcgKGVuY29kaW5nOiBzdHJpbmcpOiBOb2RlU3RyaW5nRGVjb2RlcjtcbiAgICB9O1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcInRsc1wiIHtcbiAgICBpbXBvcnQgY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbiAgICBpbXBvcnQgbmV0ID0gcmVxdWlyZShcIm5ldFwiKTtcbiAgICBpbXBvcnQgc3RyZWFtID0gcmVxdWlyZShcInN0cmVhbVwiKTtcblxuICAgIHZhciBDTElFTlRfUkVORUdfTElNSVQ6IG51bWJlcjtcbiAgICB2YXIgQ0xJRU5UX1JFTkVHX1dJTkRPVzogbnVtYmVyO1xuXG4gICAgZXhwb3J0IGludGVyZmFjZSBUbHNPcHRpb25zIHtcbiAgICAgICAgcGZ4PzogYW55OyAgIC8vc3RyaW5nIG9yIGJ1ZmZlclxuICAgICAgICBrZXk/OiBhbnk7ICAgLy9zdHJpbmcgb3IgYnVmZmVyXG4gICAgICAgIHBhc3NwaHJhc2U/OiBzdHJpbmc7XG4gICAgICAgIGNlcnQ/OiBhbnk7XG4gICAgICAgIGNhPzogYW55OyAgICAvL3N0cmluZyBvciBidWZmZXJcbiAgICAgICAgY3JsPzogYW55OyAgIC8vc3RyaW5nIG9yIHN0cmluZyBhcnJheVxuICAgICAgICBjaXBoZXJzPzogc3RyaW5nO1xuICAgICAgICBob25vckNpcGhlck9yZGVyPzogYW55O1xuICAgICAgICByZXF1ZXN0Q2VydD86IGJvb2xlYW47XG4gICAgICAgIHJlamVjdFVuYXV0aG9yaXplZD86IGJvb2xlYW47XG4gICAgICAgIE5QTlByb3RvY29scz86IGFueTsgIC8vYXJyYXkgb3IgQnVmZmVyO1xuICAgICAgICBTTklDYWxsYmFjaz86IChzZXJ2ZXJuYW1lOiBzdHJpbmcpID0+IGFueTtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIENvbm5lY3Rpb25PcHRpb25zIHtcbiAgICAgICAgaG9zdD86IHN0cmluZztcbiAgICAgICAgcG9ydD86IG51bWJlcjtcbiAgICAgICAgc29ja2V0PzogbmV0LlNvY2tldDtcbiAgICAgICAgcGZ4PzogYW55OyAgIC8vc3RyaW5nIHwgQnVmZmVyXG4gICAgICAgIGtleT86IGFueTsgICAvL3N0cmluZyB8IEJ1ZmZlclxuICAgICAgICBwYXNzcGhyYXNlPzogc3RyaW5nO1xuICAgICAgICBjZXJ0PzogYW55OyAgLy9zdHJpbmcgfCBCdWZmZXJcbiAgICAgICAgY2E/OiBhbnk7ICAgIC8vQXJyYXkgb2Ygc3RyaW5nIHwgQnVmZmVyXG4gICAgICAgIHJlamVjdFVuYXV0aG9yaXplZD86IGJvb2xlYW47XG4gICAgICAgIE5QTlByb3RvY29scz86IGFueTsgIC8vQXJyYXkgb2Ygc3RyaW5nIHwgQnVmZmVyXG4gICAgICAgIHNlcnZlcm5hbWU/OiBzdHJpbmc7XG4gICAgfVxuXG4gICAgZXhwb3J0IGludGVyZmFjZSBTZXJ2ZXIgZXh0ZW5kcyBuZXQuU2VydmVyIHtcbiAgICAgICAgLy8gRXh0ZW5kZWQgYmFzZSBtZXRob2RzXG4gICAgICAgIGxpc3Rlbihwb3J0OiBudW1iZXIsIGhvc3Q/OiBzdHJpbmcsIGJhY2tsb2c/OiBudW1iZXIsIGxpc3RlbmluZ0xpc3RlbmVyPzogRnVuY3Rpb24pOiBTZXJ2ZXI7XG4gICAgICAgIGxpc3RlbihwYXRoOiBzdHJpbmcsIGxpc3RlbmluZ0xpc3RlbmVyPzogRnVuY3Rpb24pOiBTZXJ2ZXI7XG4gICAgICAgIGxpc3RlbihoYW5kbGU6IGFueSwgbGlzdGVuaW5nTGlzdGVuZXI/OiBGdW5jdGlvbik6IFNlcnZlcjtcblxuICAgICAgICBsaXN0ZW4ocG9ydDogbnVtYmVyLCBob3N0Pzogc3RyaW5nLCBjYWxsYmFjaz86IEZ1bmN0aW9uKTogU2VydmVyO1xuICAgICAgICBjbG9zZSgpOiBTZXJ2ZXI7XG4gICAgICAgIGFkZHJlc3MoKTogeyBwb3J0OiBudW1iZXI7IGZhbWlseTogc3RyaW5nOyBhZGRyZXNzOiBzdHJpbmc7IH07XG4gICAgICAgIGFkZENvbnRleHQoaG9zdE5hbWU6IHN0cmluZywgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgICAgIGtleTogc3RyaW5nO1xuICAgICAgICAgICAgY2VydDogc3RyaW5nO1xuICAgICAgICAgICAgY2E6IHN0cmluZztcbiAgICAgICAgfSk6IHZvaWQ7XG4gICAgICAgIG1heENvbm5lY3Rpb25zOiBudW1iZXI7XG4gICAgICAgIGNvbm5lY3Rpb25zOiBudW1iZXI7XG4gICAgfVxuXG4gICAgZXhwb3J0IGludGVyZmFjZSBDbGVhclRleHRTdHJlYW0gZXh0ZW5kcyBzdHJlYW0uRHVwbGV4IHtcbiAgICAgICAgYXV0aG9yaXplZDogYm9vbGVhbjtcbiAgICAgICAgYXV0aG9yaXphdGlvbkVycm9yOiBFcnJvcjtcbiAgICAgICAgZ2V0UGVlckNlcnRpZmljYXRlKCk6IGFueTtcbiAgICAgICAgZ2V0Q2lwaGVyOiB7XG4gICAgICAgICAgICBuYW1lOiBzdHJpbmc7XG4gICAgICAgICAgICB2ZXJzaW9uOiBzdHJpbmc7XG4gICAgICAgIH07XG4gICAgICAgIGFkZHJlc3M6IHtcbiAgICAgICAgICAgIHBvcnQ6IG51bWJlcjtcbiAgICAgICAgICAgIGZhbWlseTogc3RyaW5nO1xuICAgICAgICAgICAgYWRkcmVzczogc3RyaW5nO1xuICAgICAgICB9O1xuICAgICAgICByZW1vdGVBZGRyZXNzOiBzdHJpbmc7XG4gICAgICAgIHJlbW90ZVBvcnQ6IG51bWJlcjtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFNlY3VyZVBhaXIge1xuICAgICAgICBlbmNyeXB0ZWQ6IGFueTtcbiAgICAgICAgY2xlYXJ0ZXh0OiBhbnk7XG4gICAgfVxuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlcnZlcihvcHRpb25zOiBUbHNPcHRpb25zLCBzZWN1cmVDb25uZWN0aW9uTGlzdGVuZXI/OiAoY2xlYXJ0ZXh0U3RyZWFtOiBDbGVhclRleHRTdHJlYW0pID0+dm9pZCApOiBTZXJ2ZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNvbm5lY3Qob3B0aW9uczogVGxzT3B0aW9ucywgc2VjdXJlQ29ubmVjdGlvbkxpc3RlbmVyPzogKCkgPT52b2lkICk6IENsZWFyVGV4dFN0cmVhbTtcbiAgICBleHBvcnQgZnVuY3Rpb24gY29ubmVjdChwb3J0OiBudW1iZXIsIGhvc3Q/OiBzdHJpbmcsIG9wdGlvbnM/OiBDb25uZWN0aW9uT3B0aW9ucywgc2VjdXJlQ29ubmVjdExpc3RlbmVyPzogKCkgPT52b2lkICk6IENsZWFyVGV4dFN0cmVhbTtcbiAgICBleHBvcnQgZnVuY3Rpb24gY29ubmVjdChwb3J0OiBudW1iZXIsIG9wdGlvbnM/OiBDb25uZWN0aW9uT3B0aW9ucywgc2VjdXJlQ29ubmVjdExpc3RlbmVyPzogKCkgPT52b2lkICk6IENsZWFyVGV4dFN0cmVhbTtcbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlU2VjdXJlUGFpcihjcmVkZW50aWFscz86IGNyeXB0by5DcmVkZW50aWFscywgaXNTZXJ2ZXI/OiBib29sZWFuLCByZXF1ZXN0Q2VydD86IGJvb2xlYW4sIHJlamVjdFVuYXV0aG9yaXplZD86IGJvb2xlYW4pOiBTZWN1cmVQYWlyO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcImNyeXB0b1wiIHtcbiAgICBleHBvcnQgaW50ZXJmYWNlIENyZWRlbnRpYWxEZXRhaWxzIHtcbiAgICAgICAgcGZ4OiBzdHJpbmc7XG4gICAgICAgIGtleTogc3RyaW5nO1xuICAgICAgICBwYXNzcGhyYXNlOiBzdHJpbmc7XG4gICAgICAgIGNlcnQ6IHN0cmluZztcbiAgICAgICAgY2E6IGFueTsgICAgLy9zdHJpbmcgfCBzdHJpbmcgYXJyYXlcbiAgICAgICAgY3JsOiBhbnk7ICAgLy9zdHJpbmcgfCBzdHJpbmcgYXJyYXlcbiAgICAgICAgY2lwaGVyczogc3RyaW5nO1xuICAgIH1cbiAgICBleHBvcnQgaW50ZXJmYWNlIENyZWRlbnRpYWxzIHsgY29udGV4dD86IGFueTsgfVxuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDcmVkZW50aWFscyhkZXRhaWxzOiBDcmVkZW50aWFsRGV0YWlscyk6IENyZWRlbnRpYWxzO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIYXNoKGFsZ29yaXRobTogc3RyaW5nKTogSGFzaDtcbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlSG1hYyhhbGdvcml0aG06IHN0cmluZywga2V5OiBzdHJpbmcpOiBIbWFjO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIbWFjKGFsZ29yaXRobTogc3RyaW5nLCBrZXk6IEJ1ZmZlcik6IEhtYWM7XG4gICAgaW50ZXJmYWNlIEhhc2gge1xuICAgICAgICB1cGRhdGUoZGF0YTogYW55LCBpbnB1dF9lbmNvZGluZz86IHN0cmluZyk6IEhhc2g7XG4gICAgICAgIGRpZ2VzdChlbmNvZGluZzogJ2J1ZmZlcicpOiBCdWZmZXI7XG4gICAgICAgIGRpZ2VzdChlbmNvZGluZzogc3RyaW5nKTogYW55O1xuICAgICAgICBkaWdlc3QoKTogQnVmZmVyO1xuICAgIH1cbiAgICBpbnRlcmZhY2UgSG1hYyB7XG4gICAgICAgIHVwZGF0ZShkYXRhOiBhbnksIGlucHV0X2VuY29kaW5nPzogc3RyaW5nKTogSG1hYztcbiAgICAgICAgZGlnZXN0KGVuY29kaW5nOiAnYnVmZmVyJyk6IEJ1ZmZlcjtcbiAgICAgICAgZGlnZXN0KGVuY29kaW5nOiBzdHJpbmcpOiBhbnk7XG4gICAgICAgIGRpZ2VzdCgpOiBCdWZmZXI7XG4gICAgfVxuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDaXBoZXIoYWxnb3JpdGhtOiBzdHJpbmcsIHBhc3N3b3JkOiBhbnkpOiBDaXBoZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNpcGhlcml2KGFsZ29yaXRobTogc3RyaW5nLCBrZXk6IGFueSwgaXY6IGFueSk6IENpcGhlcjtcbiAgICBpbnRlcmZhY2UgQ2lwaGVyIHtcbiAgICAgICAgdXBkYXRlKGRhdGE6IEJ1ZmZlcik6IEJ1ZmZlcjtcbiAgICAgICAgdXBkYXRlKGRhdGE6IHN0cmluZywgaW5wdXRfZW5jb2Rpbmc/OiBzdHJpbmcsIG91dHB1dF9lbmNvZGluZz86IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgZmluYWwoKTogQnVmZmVyO1xuICAgICAgICBmaW5hbChvdXRwdXRfZW5jb2Rpbmc6IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgc2V0QXV0b1BhZGRpbmcoYXV0b19wYWRkaW5nOiBib29sZWFuKTogdm9pZDtcbiAgICB9XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURlY2lwaGVyKGFsZ29yaXRobTogc3RyaW5nLCBwYXNzd29yZDogYW55KTogRGVjaXBoZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURlY2lwaGVyaXYoYWxnb3JpdGhtOiBzdHJpbmcsIGtleTogYW55LCBpdjogYW55KTogRGVjaXBoZXI7XG4gICAgaW50ZXJmYWNlIERlY2lwaGVyIHtcbiAgICAgICAgdXBkYXRlKGRhdGE6IEJ1ZmZlcik6IEJ1ZmZlcjtcbiAgICAgICAgdXBkYXRlKGRhdGE6IHN0cmluZywgaW5wdXRfZW5jb2Rpbmc/OiBzdHJpbmcsIG91dHB1dF9lbmNvZGluZz86IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgZmluYWwoKTogQnVmZmVyO1xuICAgICAgICBmaW5hbChvdXRwdXRfZW5jb2Rpbmc6IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgc2V0QXV0b1BhZGRpbmcoYXV0b19wYWRkaW5nOiBib29sZWFuKTogdm9pZDtcbiAgICB9XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNpZ24oYWxnb3JpdGhtOiBzdHJpbmcpOiBTaWduZXI7XG4gICAgaW50ZXJmYWNlIFNpZ25lciB7XG4gICAgICAgIHVwZGF0ZShkYXRhOiBhbnkpOiB2b2lkO1xuICAgICAgICBzaWduKHByaXZhdGVfa2V5OiBzdHJpbmcsIG91dHB1dF9mb3JtYXQ6IHN0cmluZyk6IHN0cmluZztcbiAgICB9XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVZlcmlmeShhbGdvcml0aDogc3RyaW5nKTogVmVyaWZ5O1xuICAgIGludGVyZmFjZSBWZXJpZnkge1xuICAgICAgICB1cGRhdGUoZGF0YTogYW55KTogdm9pZDtcbiAgICAgICAgdmVyaWZ5KG9iamVjdDogc3RyaW5nLCBzaWduYXR1cmU6IHN0cmluZywgc2lnbmF0dXJlX2Zvcm1hdD86IHN0cmluZyk6IGJvb2xlYW47XG4gICAgfVxuICAgIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEaWZmaWVIZWxsbWFuKHByaW1lX2xlbmd0aDogbnVtYmVyKTogRGlmZmllSGVsbG1hbjtcbiAgICBleHBvcnQgZnVuY3Rpb24gY3JlYXRlRGlmZmllSGVsbG1hbihwcmltZTogbnVtYmVyLCBlbmNvZGluZz86IHN0cmluZyk6IERpZmZpZUhlbGxtYW47XG4gICAgaW50ZXJmYWNlIERpZmZpZUhlbGxtYW4ge1xuICAgICAgICBnZW5lcmF0ZUtleXMoZW5jb2Rpbmc/OiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgICAgIGNvbXB1dGVTZWNyZXQob3RoZXJfcHVibGljX2tleTogc3RyaW5nLCBpbnB1dF9lbmNvZGluZz86IHN0cmluZywgb3V0cHV0X2VuY29kaW5nPzogc3RyaW5nKTogc3RyaW5nO1xuICAgICAgICBnZXRQcmltZShlbmNvZGluZz86IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgZ2V0R2VuZXJhdG9yKGVuY29kaW5nOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgICAgIGdldFB1YmxpY0tleShlbmNvZGluZz86IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgZ2V0UHJpdmF0ZUtleShlbmNvZGluZz86IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgc2V0UHVibGljS2V5KHB1YmxpY19rZXk6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBzZXRQcml2YXRlS2V5KHB1YmxpY19rZXk6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcpOiB2b2lkO1xuICAgIH1cbiAgICBleHBvcnQgZnVuY3Rpb24gZ2V0RGlmZmllSGVsbG1hbihncm91cF9uYW1lOiBzdHJpbmcpOiBEaWZmaWVIZWxsbWFuO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBwYmtkZjIocGFzc3dvcmQ6IHN0cmluZywgc2FsdDogc3RyaW5nLCBpdGVyYXRpb25zOiBudW1iZXIsIGtleWxlbjogbnVtYmVyLCBjYWxsYmFjazogKGVycjogRXJyb3IsIGRlcml2ZWRLZXk6IEJ1ZmZlcikgPT4gYW55KTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gcGJrZGYyU3luYyhwYXNzd29yZDogc3RyaW5nLCBzYWx0OiBzdHJpbmcsIGl0ZXJhdGlvbnM6IG51bWJlciwga2V5bGVuOiBudW1iZXIpIDogQnVmZmVyO1xuICAgIGV4cG9ydCBmdW5jdGlvbiByYW5kb21CeXRlcyhzaXplOiBudW1iZXIpOiBCdWZmZXI7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHJhbmRvbUJ5dGVzKHNpemU6IG51bWJlciwgY2FsbGJhY2s6IChlcnI6IEVycm9yLCBidWY6IEJ1ZmZlcikgPT52b2lkICk6IHZvaWQ7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIHBzZXVkb1JhbmRvbUJ5dGVzKHNpemU6IG51bWJlcik6IEJ1ZmZlcjtcbiAgICBleHBvcnQgZnVuY3Rpb24gcHNldWRvUmFuZG9tQnl0ZXMoc2l6ZTogbnVtYmVyLCBjYWxsYmFjazogKGVycjogRXJyb3IsIGJ1ZjogQnVmZmVyKSA9PnZvaWQgKTogdm9pZDtcbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJzdHJlYW1cIiB7XG4gICAgaW1wb3J0IGV2ZW50cyA9IHJlcXVpcmUoXCJldmVudHNcIik7XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFN0cmVhbSBleHRlbmRzIGV2ZW50cy5FdmVudEVtaXR0ZXIge1xuICAgICAgICBwaXBlPFQgZXh0ZW5kcyBOb2RlSlMuV3JpdGFibGVTdHJlYW0+KGRlc3RpbmF0aW9uOiBULCBvcHRpb25zPzogeyBlbmQ/OiBib29sZWFuOyB9KTogVDtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFJlYWRhYmxlT3B0aW9ucyB7XG4gICAgICAgIGhpZ2hXYXRlck1hcms/OiBudW1iZXI7XG4gICAgICAgIGVuY29kaW5nPzogc3RyaW5nO1xuICAgICAgICBvYmplY3RNb2RlPzogYm9vbGVhbjtcbiAgICB9XG5cbiAgICBleHBvcnQgY2xhc3MgUmVhZGFibGUgZXh0ZW5kcyBldmVudHMuRXZlbnRFbWl0dGVyIGltcGxlbWVudHMgTm9kZUpTLlJlYWRhYmxlU3RyZWFtIHtcbiAgICAgICAgcmVhZGFibGU6IGJvb2xlYW47XG4gICAgICAgIGNvbnN0cnVjdG9yKG9wdHM/OiBSZWFkYWJsZU9wdGlvbnMpO1xuICAgICAgICBfcmVhZChzaXplOiBudW1iZXIpOiB2b2lkO1xuICAgICAgICByZWFkKHNpemU/OiBudW1iZXIpOiBhbnk7XG4gICAgICAgIHNldEVuY29kaW5nKGVuY29kaW5nOiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBwYXVzZSgpOiB2b2lkO1xuICAgICAgICByZXN1bWUoKTogdm9pZDtcbiAgICAgICAgcGlwZTxUIGV4dGVuZHMgTm9kZUpTLldyaXRhYmxlU3RyZWFtPihkZXN0aW5hdGlvbjogVCwgb3B0aW9ucz86IHsgZW5kPzogYm9vbGVhbjsgfSk6IFQ7XG4gICAgICAgIHVucGlwZTxUIGV4dGVuZHMgTm9kZUpTLldyaXRhYmxlU3RyZWFtPihkZXN0aW5hdGlvbj86IFQpOiB2b2lkO1xuICAgICAgICB1bnNoaWZ0KGNodW5rOiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICB1bnNoaWZ0KGNodW5rOiBCdWZmZXIpOiB2b2lkO1xuICAgICAgICB3cmFwKG9sZFN0cmVhbTogTm9kZUpTLlJlYWRhYmxlU3RyZWFtKTogTm9kZUpTLlJlYWRhYmxlU3RyZWFtO1xuICAgICAgICBwdXNoKGNodW5rOiBhbnksIGVuY29kaW5nPzogc3RyaW5nKTogYm9vbGVhbjtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFdyaXRhYmxlT3B0aW9ucyB7XG4gICAgICAgIGhpZ2hXYXRlck1hcms/OiBudW1iZXI7XG4gICAgICAgIGRlY29kZVN0cmluZ3M/OiBib29sZWFuO1xuICAgIH1cblxuICAgIGV4cG9ydCBjbGFzcyBXcml0YWJsZSBleHRlbmRzIGV2ZW50cy5FdmVudEVtaXR0ZXIgaW1wbGVtZW50cyBOb2RlSlMuV3JpdGFibGVTdHJlYW0ge1xuICAgICAgICB3cml0YWJsZTogYm9vbGVhbjtcbiAgICAgICAgY29uc3RydWN0b3Iob3B0cz86IFdyaXRhYmxlT3B0aW9ucyk7XG4gICAgICAgIF93cml0ZShkYXRhOiBCdWZmZXIsIGVuY29kaW5nOiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgICAgIF93cml0ZShkYXRhOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgICAgIHdyaXRlKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogYm9vbGVhbjtcbiAgICAgICAgd3JpdGUoc3RyOiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICBlbmQoKTogdm9pZDtcbiAgICAgICAgZW5kKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBlbmNvZGluZz86IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgfVxuXG4gICAgZXhwb3J0IGludGVyZmFjZSBEdXBsZXhPcHRpb25zIGV4dGVuZHMgUmVhZGFibGVPcHRpb25zLCBXcml0YWJsZU9wdGlvbnMge1xuICAgICAgICBhbGxvd0hhbGZPcGVuPzogYm9vbGVhbjtcbiAgICB9XG5cbiAgICAvLyBOb3RlOiBEdXBsZXggZXh0ZW5kcyBib3RoIFJlYWRhYmxlIGFuZCBXcml0YWJsZS5cbiAgICBleHBvcnQgY2xhc3MgRHVwbGV4IGV4dGVuZHMgUmVhZGFibGUgaW1wbGVtZW50cyBOb2RlSlMuUmVhZFdyaXRlU3RyZWFtIHtcbiAgICAgICAgd3JpdGFibGU6IGJvb2xlYW47XG4gICAgICAgIGNvbnN0cnVjdG9yKG9wdHM/OiBEdXBsZXhPcHRpb25zKTtcbiAgICAgICAgX3dyaXRlKGRhdGE6IEJ1ZmZlciwgZW5jb2Rpbmc6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgX3dyaXRlKGRhdGE6IHN0cmluZywgZW5jb2Rpbmc6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgd3JpdGUoYnVmZmVyOiBCdWZmZXIsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IGJvb2xlYW47XG4gICAgICAgIHdyaXRlKHN0cjogc3RyaW5nLCBlbmNvZGluZz86IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IGJvb2xlYW47XG4gICAgICAgIGVuZCgpOiB2b2lkO1xuICAgICAgICBlbmQoYnVmZmVyOiBCdWZmZXIsIGNiPzogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICBlbmQoc3RyOiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICBlbmQoc3RyOiBzdHJpbmcsIGVuY29kaW5nPzogc3RyaW5nLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIFRyYW5zZm9ybU9wdGlvbnMgZXh0ZW5kcyBSZWFkYWJsZU9wdGlvbnMsIFdyaXRhYmxlT3B0aW9ucyB7fVxuXG4gICAgLy8gTm90ZTogVHJhbnNmb3JtIGxhY2tzIHRoZSBfcmVhZCBhbmQgX3dyaXRlIG1ldGhvZHMgb2YgUmVhZGFibGUvV3JpdGFibGUuXG4gICAgZXhwb3J0IGNsYXNzIFRyYW5zZm9ybSBleHRlbmRzIGV2ZW50cy5FdmVudEVtaXR0ZXIgaW1wbGVtZW50cyBOb2RlSlMuUmVhZFdyaXRlU3RyZWFtIHtcbiAgICAgICAgcmVhZGFibGU6IGJvb2xlYW47XG4gICAgICAgIHdyaXRhYmxlOiBib29sZWFuO1xuICAgICAgICBjb25zdHJ1Y3RvcihvcHRzPzogVHJhbnNmb3JtT3B0aW9ucyk7XG4gICAgICAgIF90cmFuc2Zvcm0oY2h1bms6IEJ1ZmZlciwgZW5jb2Rpbmc6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgX3RyYW5zZm9ybShjaHVuazogc3RyaW5nLCBlbmNvZGluZzogc3RyaW5nLCBjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICBfZmx1c2goY2FsbGJhY2s6IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgcmVhZChzaXplPzogbnVtYmVyKTogYW55O1xuICAgICAgICBzZXRFbmNvZGluZyhlbmNvZGluZzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgcGF1c2UoKTogdm9pZDtcbiAgICAgICAgcmVzdW1lKCk6IHZvaWQ7XG4gICAgICAgIHBpcGU8VCBleHRlbmRzIE5vZGVKUy5Xcml0YWJsZVN0cmVhbT4oZGVzdGluYXRpb246IFQsIG9wdGlvbnM/OiB7IGVuZD86IGJvb2xlYW47IH0pOiBUO1xuICAgICAgICB1bnBpcGU8VCBleHRlbmRzIE5vZGVKUy5Xcml0YWJsZVN0cmVhbT4oZGVzdGluYXRpb24/OiBUKTogdm9pZDtcbiAgICAgICAgdW5zaGlmdChjaHVuazogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgdW5zaGlmdChjaHVuazogQnVmZmVyKTogdm9pZDtcbiAgICAgICAgd3JhcChvbGRTdHJlYW06IE5vZGVKUy5SZWFkYWJsZVN0cmVhbSk6IE5vZGVKUy5SZWFkYWJsZVN0cmVhbTtcbiAgICAgICAgcHVzaChjaHVuazogYW55LCBlbmNvZGluZz86IHN0cmluZyk6IGJvb2xlYW47XG4gICAgICAgIHdyaXRlKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogYm9vbGVhbjtcbiAgICAgICAgd3JpdGUoc3RyOiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICB3cml0ZShzdHI6IHN0cmluZywgZW5jb2Rpbmc/OiBzdHJpbmcsIGNiPzogRnVuY3Rpb24pOiBib29sZWFuO1xuICAgICAgICBlbmQoKTogdm9pZDtcbiAgICAgICAgZW5kKGJ1ZmZlcjogQnVmZmVyLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBjYj86IEZ1bmN0aW9uKTogdm9pZDtcbiAgICAgICAgZW5kKHN0cjogc3RyaW5nLCBlbmNvZGluZz86IHN0cmluZywgY2I/OiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgfVxuXG4gICAgZXhwb3J0IGNsYXNzIFBhc3NUaHJvdWdoIGV4dGVuZHMgVHJhbnNmb3JtIHt9XG59XG5cbmRlY2xhcmUgbW9kdWxlIFwidXRpbFwiIHtcbiAgICBleHBvcnQgaW50ZXJmYWNlIEluc3BlY3RPcHRpb25zIHtcbiAgICAgICAgc2hvd0hpZGRlbj86IGJvb2xlYW47XG4gICAgICAgIGRlcHRoPzogbnVtYmVyO1xuICAgICAgICBjb2xvcnM/OiBib29sZWFuO1xuICAgICAgICBjdXN0b21JbnNwZWN0PzogYm9vbGVhbjtcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gZm9ybWF0KGZvcm1hdDogYW55LCAuLi5wYXJhbTogYW55W10pOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGRlYnVnKHN0cmluZzogc3RyaW5nKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gZXJyb3IoLi4ucGFyYW06IGFueVtdKTogdm9pZDtcbiAgICBleHBvcnQgZnVuY3Rpb24gcHV0cyguLi5wYXJhbTogYW55W10pOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBwcmludCguLi5wYXJhbTogYW55W10pOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBsb2coc3RyaW5nOiBzdHJpbmcpOiB2b2lkO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBpbnNwZWN0KG9iamVjdDogYW55LCBzaG93SGlkZGVuPzogYm9vbGVhbiwgZGVwdGg/OiBudW1iZXIsIGNvbG9yPzogYm9vbGVhbik6IHN0cmluZztcbiAgICBleHBvcnQgZnVuY3Rpb24gaW5zcGVjdChvYmplY3Q6IGFueSwgb3B0aW9uczogSW5zcGVjdE9wdGlvbnMpOiBzdHJpbmc7XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGlzQXJyYXkob2JqZWN0OiBhbnkpOiBib29sZWFuO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBpc1JlZ0V4cChvYmplY3Q6IGFueSk6IGJvb2xlYW47XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGlzRGF0ZShvYmplY3Q6IGFueSk6IGJvb2xlYW47XG4gICAgZXhwb3J0IGZ1bmN0aW9uIGlzRXJyb3Iob2JqZWN0OiBhbnkpOiBib29sZWFuO1xuICAgIGV4cG9ydCBmdW5jdGlvbiBpbmhlcml0cyhjb25zdHJ1Y3RvcjogYW55LCBzdXBlckNvbnN0cnVjdG9yOiBhbnkpOiB2b2lkO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcImFzc2VydFwiIHtcbiAgICBmdW5jdGlvbiBpbnRlcm5hbCAodmFsdWU6IGFueSwgbWVzc2FnZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgbW9kdWxlIGludGVybmFsIHtcbiAgICAgICAgZXhwb3J0IGNsYXNzIEFzc2VydGlvbkVycm9yIGltcGxlbWVudHMgRXJyb3Ige1xuICAgICAgICAgICAgbmFtZTogc3RyaW5nO1xuICAgICAgICAgICAgbWVzc2FnZTogc3RyaW5nO1xuICAgICAgICAgICAgYWN0dWFsOiBhbnk7XG4gICAgICAgICAgICBleHBlY3RlZDogYW55O1xuICAgICAgICAgICAgb3BlcmF0b3I6IHN0cmluZztcbiAgICAgICAgICAgIGdlbmVyYXRlZE1lc3NhZ2U6IGJvb2xlYW47XG5cbiAgICAgICAgICAgIGNvbnN0cnVjdG9yKG9wdGlvbnM/OiB7bWVzc2FnZT86IHN0cmluZzsgYWN0dWFsPzogYW55OyBleHBlY3RlZD86IGFueTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRvcj86IHN0cmluZzsgc3RhY2tTdGFydEZ1bmN0aW9uPzogRnVuY3Rpb259KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGV4cG9ydCBmdW5jdGlvbiBmYWlsKGFjdHVhbD86IGFueSwgZXhwZWN0ZWQ/OiBhbnksIG1lc3NhZ2U/OiBzdHJpbmcsIG9wZXJhdG9yPzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgZXhwb3J0IGZ1bmN0aW9uIG9rKHZhbHVlOiBhbnksIG1lc3NhZ2U/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBleHBvcnQgZnVuY3Rpb24gZXF1YWwoYWN0dWFsOiBhbnksIGV4cGVjdGVkOiBhbnksIG1lc3NhZ2U/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBleHBvcnQgZnVuY3Rpb24gbm90RXF1YWwoYWN0dWFsOiBhbnksIGV4cGVjdGVkOiBhbnksIG1lc3NhZ2U/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICBleHBvcnQgZnVuY3Rpb24gZGVlcEVxdWFsKGFjdHVhbDogYW55LCBleHBlY3RlZDogYW55LCBtZXNzYWdlPzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgZXhwb3J0IGZ1bmN0aW9uIG5vdERlZXBFcXVhbChhY3V0YWw6IGFueSwgZXhwZWN0ZWQ6IGFueSwgbWVzc2FnZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgIGV4cG9ydCBmdW5jdGlvbiBzdHJpY3RFcXVhbChhY3R1YWw6IGFueSwgZXhwZWN0ZWQ6IGFueSwgbWVzc2FnZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgIGV4cG9ydCBmdW5jdGlvbiBub3RTdHJpY3RFcXVhbChhY3R1YWw6IGFueSwgZXhwZWN0ZWQ6IGFueSwgbWVzc2FnZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgIGV4cG9ydCB2YXIgdGhyb3dzOiB7XG4gICAgICAgICAgICAoYmxvY2s6IEZ1bmN0aW9uLCBtZXNzYWdlPzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgICAgIChibG9jazogRnVuY3Rpb24sIGVycm9yOiBGdW5jdGlvbiwgbWVzc2FnZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgICAgICAoYmxvY2s6IEZ1bmN0aW9uLCBlcnJvcjogUmVnRXhwLCBtZXNzYWdlPzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgICAgIChibG9jazogRnVuY3Rpb24sIGVycm9yOiAoZXJyOiBhbnkpID0+IGJvb2xlYW4sIG1lc3NhZ2U/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICB9O1xuXG4gICAgICAgIGV4cG9ydCB2YXIgZG9lc05vdFRocm93OiB7XG4gICAgICAgICAgICAoYmxvY2s6IEZ1bmN0aW9uLCBtZXNzYWdlPzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgICAgIChibG9jazogRnVuY3Rpb24sIGVycm9yOiBGdW5jdGlvbiwgbWVzc2FnZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgICAgICAgICAoYmxvY2s6IEZ1bmN0aW9uLCBlcnJvcjogUmVnRXhwLCBtZXNzYWdlPzogc3RyaW5nKTogdm9pZDtcbiAgICAgICAgICAgIChibG9jazogRnVuY3Rpb24sIGVycm9yOiAoZXJyOiBhbnkpID0+IGJvb2xlYW4sIG1lc3NhZ2U/OiBzdHJpbmcpOiB2b2lkO1xuICAgICAgICB9O1xuXG4gICAgICAgIGV4cG9ydCBmdW5jdGlvbiBpZkVycm9yKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIH1cblxuICAgIGV4cG9ydCA9IGludGVybmFsO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcInR0eVwiIHtcbiAgICBpbXBvcnQgbmV0ID0gcmVxdWlyZShcIm5ldFwiKTtcblxuICAgIGV4cG9ydCBmdW5jdGlvbiBpc2F0dHkoZmQ6IG51bWJlcik6IGJvb2xlYW47XG4gICAgZXhwb3J0IGludGVyZmFjZSBSZWFkU3RyZWFtIGV4dGVuZHMgbmV0LlNvY2tldCB7XG4gICAgICAgIGlzUmF3OiBib29sZWFuO1xuICAgICAgICBzZXRSYXdNb2RlKG1vZGU6IGJvb2xlYW4pOiB2b2lkO1xuICAgIH1cbiAgICBleHBvcnQgaW50ZXJmYWNlIFdyaXRlU3RyZWFtIGV4dGVuZHMgbmV0LlNvY2tldCB7XG4gICAgICAgIGNvbHVtbnM6IG51bWJlcjtcbiAgICAgICAgcm93czogbnVtYmVyO1xuICAgIH1cbn1cblxuZGVjbGFyZSBtb2R1bGUgXCJkb21haW5cIiB7XG4gICAgaW1wb3J0IGV2ZW50cyA9IHJlcXVpcmUoXCJldmVudHNcIik7XG5cbiAgICBleHBvcnQgY2xhc3MgRG9tYWluIGV4dGVuZHMgZXZlbnRzLkV2ZW50RW1pdHRlciB7XG4gICAgICAgIHJ1bihmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgICAgICBhZGQoZW1pdHRlcjogZXZlbnRzLkV2ZW50RW1pdHRlcik6IHZvaWQ7XG4gICAgICAgIHJlbW92ZShlbWl0dGVyOiBldmVudHMuRXZlbnRFbWl0dGVyKTogdm9pZDtcbiAgICAgICAgYmluZChjYjogKGVycjogRXJyb3IsIGRhdGE6IGFueSkgPT4gYW55KTogYW55O1xuICAgICAgICBpbnRlcmNlcHQoY2I6IChkYXRhOiBhbnkpID0+IGFueSk6IGFueTtcbiAgICAgICAgZGlzcG9zZSgpOiB2b2lkO1xuXG4gICAgICAgIGFkZExpc3RlbmVyKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbik6IERvbWFpbjtcbiAgICAgICAgb24oZXZlbnQ6IHN0cmluZywgbGlzdGVuZXI6IEZ1bmN0aW9uKTogRG9tYWluO1xuICAgICAgICBvbmNlKGV2ZW50OiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbik6IERvbWFpbjtcbiAgICAgICAgcmVtb3ZlTGlzdGVuZXIoZXZlbnQ6IHN0cmluZywgbGlzdGVuZXI6IEZ1bmN0aW9uKTogRG9tYWluO1xuICAgICAgICByZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnQ/OiBzdHJpbmcpOiBEb21haW47XG4gICAgfVxuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZSgpOiBEb21haW47XG59XG4iXX0=