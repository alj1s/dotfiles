{
  "name": "witwip",
  "version": "1.0.4",
  "description": "Where in the world is package.json?",
  "main": "witwip.js",
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cpsubrian/node-witwip.git"
  },
  "keywords": [
    "package.json"
  ],
  "dependencies": {
    "debug": "~0.7.0",
    "read-package-json": "~0.1.5"
  },
  "devDependencies": {
    "mocha": "~1.4.0"
  },
  "author": {
    "name": "Brian Link"
  },
  "license": "MIT",
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "witwip - Where in the world is package.json?\n============================================\n\n[![build status](https://secure.travis-ci.org/cpsubrian/node-witwip.png)](http://travis-ci.org/cpsubrian/node-witwip)\n\nFind package.json files relative to your current module or some other basepath.\nSearch for local modules, search for modules installed with npm, or just find\nthe closest package.json to the current file.\n\nInitial code for `witwip` was copied almost verbatim from [architect](https://github.com/c9/architect), so, thanks guys :)\n\n\nAPI\n---\n\n### witwip([base], [modulePath], callback)\n- **base** - The module object or path to start searching from (optional).\n- **modulePath** - The module name or local path to look for (optional).\n- **callback** - function (err, pkgPath, pkgData)\n\n### witwip.dir([base], [modulePath], callback)\nSame as `witwip()` but returns the directory instead of the filepath of the\nfound package.json.\n\n\nUsage\n-----\n\n```js\nvar findPkg = require('witwip');\n\n// Find the closest package.json to this module.\nfindPkg(function(err, pkgPath, pkgData) {\n\n});\n// or\nfindPkg(module, function(err, pkgPath, pkgData) {\n\n});\n// or\nfindPkg(__dirname, function(err, pkgPath, pkgData) {\n\n});\n\n// Look for the package.json of a dependency.\nfindPkg(module, 'optimist', function(err, pkgPath, pkgData) {\n\n});\n// or\nfindPkg(__dirname, 'optimist', function(err, pkgPath, pkgData) {\n\n});\n\n// Check if a local dir is a module (has a package.json).\nfindPkg(module, './local/dir/mymodule', function(err, pkgPath, pkgData) {\n\n});\n\n// Find the package.json of the parent module to this module.\nfindPkg(module.parent, function(err, pkgPath, pkgData) {\n\n});\n```\n\n\n- - -\n\n### Developed by [Terra Eclipse](http://www.terraeclipse.com)\nTerra Eclipse, Inc. is a nationally recognized political technology and\nstrategy firm located in Aptos, CA and Washington, D.C.\n\n- - -\n\n### License: MIT\nCopyright (c) 2012 ajax.org B.V\n\nCopyright (C) 2012 Terra Eclipse, Inc. ([http://www.terraeclipse.com](http://www.terraeclipse.com))\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cpsubrian/node-witwip/issues"
  },
  "homepage": "https://github.com/cpsubrian/node-witwip",
  "_id": "witwip@1.0.4",
  "_from": "witwip@1.0.x"
}
