{"mode":"editor","version":1,"windowDimensions":{"x":198,"y":23,"width":1280,"height":773,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/andrewjones/dev/sandbox"],"buffers":[{"text":"","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":0,"undoStack":[],"redoStack":[]},"encoding":"utf8","modifiedWhenLastPersisted":false,"deserializer":"TextBuffer","version":2},{"text":"","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":8},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":0,"undoStack":[],"redoStack":[]},"encoding":"utf8","modifiedWhenLastPersisted":false,"deserializer":"TextBuffer","version":2},{"text":"","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":12,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":0,"undoStack":[],"redoStack":[]},"encoding":"utf8","modifiedWhenLastPersisted":false,"deserializer":"TextBuffer","version":2},{"text":"var gulp = require('gulp');\nvar tasks = require('gulp-tasks');\nvar extend = tasks.extend;\nvar argv = tasks.argv();\n\nvar port = argv.port || 8888;\n\nvar e2eDefaults = {\n  baseUrl: \"http://localhost:\" + port,\n  seleniumAddress: 'standalone',\n  submodules: [\"container\",\n              \"zinc\", \"person\", \"crm\", \"valuation\"]\n};\n\nvar serverDefaults = {\n  port: port,\n  verbose: false,\n  launchBrowser: true,\n  index: \"index-live.html\",\n  //index: \"index-prod.html\",\n  bridgeAddress: \"http://172.30.30.252:9999\"\n};\n\ntasks\n  .addClean({})\n  .addInstall({})\n  .addPublish({})\n  .addSpecs({\n    remoteSpecs: true\n  })\n  .addBundle({})\n  .addLink({})\n  .addE2eTests(extend({}, e2eDefaults))\n  .addE2eTests(extend({}, e2eDefaults, {\n    taskPrefix: \"ci-\",\n    seleniumAddress: 'http://172.30.30.115:4444/wd/hub',\n    generateCucumberHtml: true\n  }))\n  .addServer(extend({}, serverDefaults))\n  .addServer(extend({}, serverDefaults, {\n    taskPrefix: \"ci-\",\n    index: \"index-prod.html\",\n    launchBrowser: false\n  }))\n  .addBump({})\n  .addGit({})\n  .addTask({\n    name: 're-bundle',\n    tasks: ['relink', 'bundle']\n  })\n  .addTask({\n    name: 're-serve',\n    tasks: ['relink', 'bundle', 'serve']\n  })\n  .addTask({\n    name: 'ci',\n    tasks: ['clean', 'install-and-update', 'bundle',\n      'git-commit-configjs', 'git-tag',\n      'publish']\n  })\n  .addTask({\n    name: 'release',\n    tasks: ['clean', 'install-and-update', 'bundle',\n      'git-commit-configjs', 'git-tag',\n      'publish',\n      'git-bump-and-commit']\n  })\n  .addTask({\n    name: 'ci-build-and-e2e',\n    tasks: ['clean', 'install-and-update', 'bundle',\n      ['ci-serve', ['ci-e2e', 'ci-stop']]]\n  })\n  .build(gulp);\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":18,"column":2},"end":{"row":18,"column":2}},"properties":{"type":"selection","editorId":16,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":16,"undoStack":[{"type":"checkpoint","id":2,"snapshot":{"0":{"range":[[19,2],[19,2]],"properties":{"type":"selection","editorId":16,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[19,2],[19,2]],"newRange":[[19,2],[19,3]],"oldText":"","newText":"/"}},{"type":"change","content":{"oldRange":[[19,3],[19,3]],"newRange":[[19,3],[19,4]],"oldText":"","newText":"/"}},{"type":"checkpoint","id":5,"snapshot":{"0":{"range":[[19,4],[19,4]],"properties":{"type":"selection","editorId":16,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":6,"snapshot":{"0":{"range":[[18,4],[18,4]],"properties":{"type":"selection","editorId":16,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[18,3],[18,4]],"newRange":[[18,3],[18,3]],"oldText":"/","newText":""}},{"type":"change","content":{"oldRange":[[18,2],[18,3]],"newRange":[[18,2],[18,2]],"oldText":"/","newText":""}},{"type":"checkpoint","id":13,"snapshot":{"0":{"range":[[18,2],[18,2]],"properties":{"type":"selection","editorId":16,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":14,"snapshot":{"0":{"range":[[18,2],[18,2]],"properties":{"type":"selection","editorId":16,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"checkpoint","id":15,"snapshot":{"0":{"range":[[18,2],[18,2]],"properties":{"type":"selection","editorId":16,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/andrewjones/dev/sandbox/app/gulpfile.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"00a9d97fa2d56bb6d664bb9259d136e52d76b3e3","deserializer":"TextBuffer","version":2},{"text":"/// <reference path=\"../_references.d.ts\" />\n\nvar hubConfig: Array<container.IHubConfig> = [{\n        hubId: \"role\",\n        name: \"role\",\n        paramName: \"roleCode\",\n        headerController: require(\"../role-hub/role-header-controller\"),\n        headerControllerAs: \"cx\",\n        headerTemplate: require(\"../role-hub/role-header-view.html\"),\n        headerResolver: {\n\n            headerInfo: [\"$q\", \"enquiryState\", \"$stateParams\", \"enquiryHeaderRemote\", \"securityService\", \"investmentManagerStorageService\",\n                    ($q: any,\n                    enquiryState: container.IApplicationStateDecorator,\n                    $stateParams: any,\n                    enquiryHeaderRemote: enquiry.IEnquiryHeaderRemote,\n                    securityService: container.ISecurityService,\n                    investmentManagerStorageService : any) => {\n\n                if($stateParams['roleCode'] === \"null\"){\n                  if(securityService.isSignedOn()) {\n\n                    var result = $q.defer();\n                    var promise = investmentManagerStorageService.loadInvestmentManager();\n\n                    promise.then((response) => {\n                      var roleParams = { roleCode: securityService.credentials.businessGetterGroupCode };\n\n                      if (response){\n                        roleParams = { roleCode: response };\n                      }\n\n                      enquiryState.goHub(\"role\", {roleCode: roleParams.roleCode }, { location: \"replace\"});\n\n                      result.reject(\"redirected\");\n                    }, (err) => {\n                        result.reject(err);\n                    } );\n\n                   return result.promise();\n                }\n              }\n              else{\n                  return enquiryHeaderRemote.fetchInvestmentManagerHeader($stateParams.roleCode);\n                }\n            }]\n        },\n        menuController: require(\"./enquiry-menu-controller\"),\n        menuTemplate: require(\"./enquiry-menu-view.html\"),\n        searchTemplate: '<jhc-person-search></jhc-person-search>',\n        searchController: require(\"./search-controller\"),\n        onEnter: [ \"recentEntitiesCache\", \"headerInfo\", \"enquiryState\", (recentEntitiesCache: enquiry.IRecentEntitiesCache, headerInfo: any, enquiryState: container.IApplicationStateService) => {\n            if(angular.isDefined(headerInfo)){\n              enquiryState.currentHeaderInfo = headerInfo;\n              enquiryState.currentHeaderInfo.name = headerInfo.investmentManagerDesc;\n              recentEntitiesCache.put(\"role\", headerInfo.code, headerInfo.name);\n            }\n        }]\n    }, {\n        hubId: \"person\",\n        name: \"person\",\n        paramName: \"personCode\",\n        headerController: require(\"../person-hub/person-header-controller\"),\n        headerControllerAs: \"cx\",\n        headerTemplate: require(\"../person-hub/person-header-view.html\"),\n        headerResolver: {\n            headerInfo: ($stateParams, enquiryHeaderRemote: enquiry.IEnquiryHeaderRemote) => {\n                return enquiryHeaderRemote.fetchPersonHeader($stateParams.personCode);\n            }\n        },\n        menuController: require(\"./enquiry-menu-controller\"),\n        menuTemplate: require(\"./enquiry-menu-view.html\"),\n        searchTemplate: '<jhc-person-search></jhc-person-search>',\n        searchController: require(\"./search-controller\"),\n        onEnter: [ \"recentEntitiesCache\", \"headerInfo\", \"enquiryState\", (recentEntitiesCache: enquiry.IRecentEntitiesCache, headerInfo: any, enquiryState: container.IApplicationStateService) => {\n            enquiryState.currentHeaderInfo = headerInfo;\n            recentEntitiesCache.put(\"person\", headerInfo.code, headerInfo.name);\n        }]\n    }, {\n        hubId: \"account\",\n        name: \"account\",\n        paramName: \"accountCode\",\n        headerController: require(\"../account-hub/account-header-controller\"),\n        headerControllerAs: \"cx\",\n        headerTemplate: require(\"../account-hub/account-header-view.html\"),\n        headerResolver: {\n            headerInfo: ($stateParams, enquiryHeaderRemote: enquiry.IEnquiryHeaderRemote) => {\n                return enquiryHeaderRemote.fetchAccountHeader($stateParams.accountCode);\n            }\n        },\n        menuController: require(\"./enquiry-menu-controller\"),\n        menuTemplate: require(\"./enquiry-menu-view.html\"),\n        searchTemplate: '<jhc-person-search></jhc-person-search>',\n        searchController: require(\"./search-controller\"),\n        onEnter: [ \"recentEntitiesCache\", \"headerInfo\", \"enquiryState\", (recentEntitiesCache: enquiry.IRecentEntitiesCache, headerInfo: any, enquiryState: container.IApplicationStateService) => {\n            enquiryState.currentHeaderInfo = headerInfo;\n            recentEntitiesCache.put(\"account\", headerInfo.code, headerInfo.name);\n        }],\n    }, {\n        hubId: \"portfolio\",\n        name: \"portfolio\",\n        paramName: \"portfolioCode\",\n        headerController: require(\"../portfolio-hub/portfolio-header-controller\"),\n        headerControllerAs: \"cx\",\n        headerTemplate: require(\"../portfolio-hub/portfolio-header-view.html\"),\n        headerResolver: {\n           headerInfo: ($stateParams, enquiryHeaderRemote: enquiry.IEnquiryHeaderRemote) => {\n               return enquiryHeaderRemote.fetchPortfolioHeader($stateParams.portfolioCode);\n           }\n        },\n        menuController: require(\"./enquiry-menu-controller\"),\n        menuTemplate: require(\"./enquiry-menu-view.html\"),\n        searchTemplate: '<jhc-person-search></jhc-person-search>',\n        searchController: require(\"./search-controller\"),\n        onEnter: [ \"recentEntitiesCache\", \"headerInfo\", \"enquiryState\", (recentEntitiesCache: enquiry.IRecentEntitiesCache, headerInfo: any, enquiryState: container.IApplicationStateService) => {\n            enquiryState.currentHeaderInfo = headerInfo;\n            enquiryState.currentHeaderInfo.name = headerInfo.description;\n            recentEntitiesCache.put(\"porfolio\", headerInfo.code, headerInfo.description);\n        }],\n    }, {\n        hubId: \"instrument\",\n        name: \"instrument\",\n        paramName: \"sedol\",\n        headerController: require(\"../instrument-hub/instrument-header-controller\"),\n        headerControllerAs: \"cx\",\n        headerTemplate: require(\"../instrument-hub/instrument-header-view.html\"),\n        headerResolver: {\n            headerInfo: ($stateParams, enquiryHeaderRemote: enquiry.IEnquiryHeaderRemote) => {\n                return enquiryHeaderRemote.fetchInstrumentHeader($stateParams.sedol);\n            }\n        },\n        menuController: require(\"./enquiry-menu-controller\"),\n        menuTemplate: require(\"./enquiry-menu-view.html\"),\n        searchTemplate: '<jhc-person-search></jhc-person-search>',\n        searchController: require(\"./search-controller\"),\n        onEnter: [ \"recentEntitiesCache\", \"headerInfo\", \"enquiryState\", (recentEntitiesCache: enquiry.IRecentEntitiesCache, headerInfo: any, enquiryState: container.IApplicationStateService) => {\n            enquiryState.currentHeaderInfo = headerInfo;\n            recentEntitiesCache.put(\"instrument\", headerInfo.code, headerInfo.name);\n        }],\n    }];\n\nexport = hubConfig;\n","markerStore":{"nextMarkerId":5,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":20},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/zinc@1.0.10/src/enquiry/enquiry-hub-config.ts","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e2af8e16f1170fc9ebeffe9d48c4481d5f414d11","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":8,"softTabs":true,"displayBuffer":{"id":9,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":12,"softTabs":true,"displayBuffer":{"id":13,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":16,"softTabs":true,"displayBuffer":{"id":17,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/andrewjones/dev/sandbox/app/gulpfile.js","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":20,"softTabs":true,"displayBuffer":{"id":21,"softWrapped":false,"scrollTop":0,"scrollLeft":1,"tokenizedBuffer":{"bufferPath":"/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/zinc@1.0.10/src/enquiry/enquiry-hub-config.ts","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/zinc@1.0.10/src/enquiry/enquiry-hub-config.ts","focused":false,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"nuclide-file-tree":{"panel":{"isVisible":true},"tree":{"expandedNodeKeys":["/Users/andrewjones/dev/sandbox/","/Users/andrewjones/dev/sandbox/app/","/Users/andrewjones/dev/sandbox/app/jspm_packages/","/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/","/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/","/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/zinc@1.0.10/","/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/zinc@1.0.10/src/","/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/zinc@1.0.10/src/enquiry/"],"selectedNodeKeys":["/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/zinc@1.0.10/src/enquiry/enquiry-hub-config.ts"]}},"nuclide-remote-projects":{"remoteProjectsConfig":[]},"fuzzy-finder":{"/Users/andrewjones/dev/sandbox/app/gulpfile.js":1436801549049,"/Users/andrewjones/dev/sandbox/app/jspm_packages/bitbucket/jhc-systems/zinc@1.0.10/src/enquiry/enquiry-hub-config.ts":1436802019372},"metrics":{"sessionLength":22158435},"tabs":[{}]}}