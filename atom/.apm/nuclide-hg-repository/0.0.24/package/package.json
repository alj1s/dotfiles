{"dependencies":{"nuclide-client":"0.0.24","nuclide-hg-repository-client":"0.0.24","nuclide-logging":"0.0.24","nuclide-remote-connection":"0.0.24","nuclide-source-control-helpers":"0.0.24"},"description":"Provides support for Mercurial source control repositories","devDependencies":{"nuclide-atom-interfaces":"0.0.24"},"engines":{"atom":">=1.0.0"},"main":"./lib/main","name":"nuclide-hg-repository","nuclide":{"packageType":"Atom","testRunner":"apm"},"providedServices":{"atom.repository-provider":{"versions":{"0.1.0":"createHgRepositoryProvider"}}},"repository":{"type":"git","url":"https://github.com/facebooknuclideapm/nuclide-hg-repository"},"version":"0.0.24","readme":"**NOTE:** The official repository for this package is https://github.com/facebook/nuclide.\nPlease file all issues and pull requests there.\n\n# nuclide-hg-repository\n\nA Mercurial version of Atom's [`GitRepository`](https://atom.io/docs/api/v0.209.0/GitRepository).\n\n## Features\nBy default, Atom provides UI to expose information about files that are contained\nin a Git repository. This package adds analogous support for files in Mercurial\nrepositories.\n\nSpecifically, `nuclide-hg-repository` enables the following features when you are\nworking in a Mercurial-backed project in Atom:\n* The Nuclide file tree (via the [`nuclide-file-tree`](https://atom.io/packages/nuclide-file-tree) package)\nwill highlight files that are modified, as well as the directories that contain them.\n* The Atom [`git-diff`](https://github.com/atom/git-diff) package will highlight\nthe gutter next to lines that have been modified.\n* The Atom [`status-bar`](https://github.com/atom/status-bar) will show the\nnumber of added/removed lines of the currently active file, and the\ncurrent Mercurial bookmark (note: not Mercurial branch).\n\n![Screenshot of features enabled by this package](http://nuclide.io/images/Mercurial_features_screenshot.png)\n\n`nuclide-hg-repository` works on local and remote repositories.\n\n## System Requirements\nFor full functionality [1], you need the following installed on the machine where\nyour Mercurial repository exists:\n* Mercurial. We recommend version 3.4 and above. `hg` must be on your $PATH.\n* [Watchman](https://facebook.github.io/watchman/) version 3.2 or above. It must\nbe in `/usr/local/bin/` or in your $PATH. Note that Watchman is not currently\navailable on Windows (June 2015).\n\n[1] Without Watchman, `nuclide-hg-repository` will not keep the Nuclide file tree\ncorrectly highlighted.\n\n## How It Works\nThis package provides a `atom.repository-provider` service through the Atom\n[`service-hub`](https://github.com/atom/service-hub). The service returns an\ninstance of `HgRepositoryClient`, which is the analogous Mercurial implementation\nof Atom's [`GitRepository`](https://atom.io/docs/api/v0.209.0/GitRepository).\n\n## API\nThis and the following sections explain how to use this package from the\nperspective of a developer who wants to leverage the functionality of\n`HgRepositoryClient` in another Atom package.\n\nFor each of the features listed in the \"Features\" section, the packages using the\nfeatures of `HgRepositoryClient` don't have Git- and Mercurial-specific logic.\nInstead, those packages get a reference to the current repository via:\n\n```js\natom.project.repositoryForDirectory(directory) // recommended\n```\nor\n\n```js\natom.project.getRepositories()\n```\n\n`HgRepositoryClient` provides all of the same methods as Atom's [`GitRepository`](https://atom.io/docs/api/v0.209.0/GitRepository)\nas well as some additional ones. In many cases, you should be able to use the\nreturned \"repository\" object without having to know whether it is Git or Hg.\n\nThere are some exceptions, however; see the \"Caveats\" and \"Additional Features\"\nsections. If you find you have to do a Git/Hg check, you can distinguish them\nusing the `getType` method available on both `HgRepositoryClient` and\n`GitRepository`.\n\n## API Caveats\n1. As of June 2015, `HgRepositoryClient` has a number of methods for parity with\nGitRepository that are unimplemented stubs. Please see the code for more details.\n\n2. Perhaps the most notable difference between `HgRepositoryClient` and `GitRepository`\nis that `HgRepositoryClient` does not publicly expose any methods that fetch\ninformation from Mercurial synchronously. The synchronous method calls on\n`HgRepositoryClient`, such as `getDirectoryStatus`, read from a cache, and thus\nmay provide stale data. We have, however, added public asynchronous methods that\nprovide up-to-date data:\n  * `getStatuses` is the async version of `getPathStatus`.\n  * `getDiffStatsForPath` is the async version of `getDiffStats`.\n  * `getLineDiffsForPath` is the async version of `getLineDiffs`.  \n\n3. `HgRepositoryClient` updates line diff information on each editor \"save\" event,\nso the line highlighting provided by the `git-diff` package and the number of\nadded/removed lines displayed in the status bar may be stale in between saves.\n\n## Additional Methods\nIn addition to implementing the methods available on `GitRepository`,\n`HgRepositoryClient` has a few additional methods. See the section labeled\n\"Repository State at Specific Revisions\" in [`HgRepositoryClient`](https://github.com/facebook/nuclide/blob/master/pkg/nuclide/hg-repository/lib/HgRepositoryClient.js).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/facebooknuclideapm/nuclide-hg-repository/issues"},"homepage":"https://github.com/facebooknuclideapm/nuclide-hg-repository","_id":"nuclide-hg-repository@0.0.24","_shasum":"452548ba7e05262eefc3d32cde2354e4bdcc4c94","_resolved":"file:../d-11568-6881-s4k5r6/package.tgz","_from":"../d-11568-6881-s4k5r6/package.tgz"}